{"version":3,"file":"CommitManagerContainer.c54743fa844b2f64c0a0.chunk.js","mappings":"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","sources":["webpack://webui/./packages/components/DiffTable/DiffTable.jsx","webpack://webui/./packages/components/DiffTable/DiffTableStyles.js","webpack://webui/./packages/components/Notification/NotificationBar.jsx","webpack://webui/./packages/components/Notification/Styles.js","webpack://webui/./packages/core/utils/xml.js","webpack://webui/./packages/styles/static/EditSymbol.jsx","webpack://webui/./src/CommitManager/ChangesTab.jsx","webpack://webui/./src/CommitManager/ChangesTabContainer.jsx","webpack://webui/./src/CommitManager/CommitDryRunStyles.js","webpack://webui/./src/CommitManager/CommitDryRunTab.jsx","webpack://webui/./src/CommitManager/CommitDryRunTabContainer.jsx","webpack://webui/./src/CommitManager/CommitManager.jsx","webpack://webui/./src/CommitManager/CommitManagerContainer.jsx","webpack://webui/./src/CommitManager/CommitManagerStyles.js","webpack://webui/./src/CommitManager/CommitQueueDevicesCellContainer.jsx","webpack://webui/./src/CommitManager/CommitQueueDevicesCellStyles.js","webpack://webui/./src/CommitManager/CommitQueueListContainer.jsx","webpack://webui/./src/CommitManager/Common.jsx","webpack://webui/./src/CommitManager/NativeCommitDryRunTab.jsx","webpack://webui/./src/CommitManager/NativeCommitDryRunTabContainer.jsx","webpack://webui/./src/CommitManager/WarningsTab.jsx","webpack://webui/./src/Common/Components/Commit/CommitButton.jsx","webpack://webui/./src/Common/Components/Commit/CommitButtonContainer.jsx","webpack://webui/./src/Common/Components/Commit/CommitButtonStyles.js","webpack://webui/./src/Common/Components/Commit/CommitDialog.jsx","webpack://webui/./src/Common/Components/Commit/CommitDialogStyles.js","webpack://webui/./src/Common/Components/Commit/CommitOption.jsx","webpack://webui/./src/Common/Components/Commit/CommitOptionConstants.js","webpack://webui/./src/Common/Components/Commit/CommitOptions.jsx","webpack://webui/./src/Common/Components/Commit/CommitOptionsContainer.js","webpack://webui/./src/Common/Components/Commit/CommitStatusBar.jsx","webpack://webui/./src/Common/Components/Commit/CommitStatusBarContainer.js","webpack://webui/./src/Common/Components/Commit/IgnoreWarnings.jsx","webpack://webui/./src/Common/Components/Commit/LoadButton.jsx","webpack://webui/./src/Common/Components/Commit/LoadButtonContainer.jsx","webpack://webui/./src/Common/Components/Commit/LoadFromFile.jsx","webpack://webui/./src/Common/Components/Commit/LoadFromFileContainer.jsx","webpack://webui/./src/Common/Components/Commit/LoadFromPlainText.jsx","webpack://webui/./src/Common/Components/Commit/LoadFromPlainTextContainer.jsx","webpack://webui/./src/Common/Components/Commit/LoadStyles.js","webpack://webui/./src/Common/Components/Commit/RevertButton.jsx","webpack://webui/./src/Common/Components/Commit/RevertButtonContainer.js","webpack://webui/./src/Common/Components/Commit/RevertButtonStyles.js","webpack://webui/./src/Common/Components/Commit/Rollback.jsx","webpack://webui/./src/Common/Components/Commit/RollbackContainer.jsx","webpack://webui/./src/Common/Components/Commit/RollbackStyles.js","webpack://webui/./src/Common/Components/Commit/SaveToFile.jsx","webpack://webui/./src/Common/Components/Commit/SaveToFileContainer.jsx","webpack://webui/./src/modules/commitQueue/actions.js","webpack://webui/./src/modules/commitQueue/path.js","webpack://webui/./src/modules/commitQueue/selectors.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './DiffTableStyles';\n\n\nconst rowPropTypes = {\n    lineNum: PropTypes.number,\n    text: PropTypes.string,\n};\n\nconst PlusRow = ({ lineNum, text }) => (\n    <tr style={style.tr}>\n        <td style={style.leftColNumber}><div>{lineNum}</div></td>\n        <td style={style.leftCol} />\n        <td style={style.rightColAdd}><div>{text}</div></td>\n    </tr>\n);\nPlusRow.propTypes = rowPropTypes;\n\nconst MinusRow = ({ lineNum, text }) => (\n    <tr style={style.tr}>\n        <td style={style.leftColNumber}><div>{lineNum}</div></td>\n        <td style={style.leftColDelete}><div>{text}</div></td>\n        <td style={style.rightCol} />\n    </tr>\n);\nMinusRow.propTypes = rowPropTypes;\n\n\nconst BothRow = ({ lineNum, text }) => (\n    <tr style={style.tr}>\n        <td style={style.leftColNumber}><div>{lineNum}</div></td>\n        <td style={style.leftCol}><div>{text}</div></td>\n        <td style={style.rightCol}><div>{text}</div></td>\n    </tr>\n);\nBothRow.propTypes = rowPropTypes;\n\n\nconst renderRow = (row, rowIx) => {\n    const lineNum = rowIx + 1;\n    if (row.length > 0 && row[0] === '+') {\n        return <PlusRow text={row} lineNum={lineNum} key={rowIx} />;\n    }\n    if (row.length > 0 && row[0] === '-') {\n        return <MinusRow text={row} lineNum={lineNum} key={rowIx} />;\n    }\n    return <BothRow text={row} lineNum={lineNum} key={rowIx} />;\n};\n\n\nconst DiffTable = ({ data }) => {\n    const rows = data.split('\\n').map(renderRow);\n    return (\n        <table style={style.table}>\n            <tbody>\n                {rows}\n            </tbody>\n        </table>\n    );\n};\n\nDiffTable.propTypes = {\n    data: PropTypes.string,\n};\n\nexport default DiffTable;\nexport {\n    renderRow as _renderRow,\n    BothRow as _BothRow,\n    MinusRow as _MinusRow,\n    PlusRow as _PlusRow,\n};\n","const addColor = 'rgba(0, 129, 0, 0.2)';\nconst deleteColor = 'rgba(129, 0, 0, 0.2)';\nexport default {\n    table: {\n        marginTop: '1rem',\n        width: '100%',\n        fontFamily: '\"Courier New\", Courier, monospace',\n        fontSize: '0.8rem',\n        fontWeight: 'normal',\n    },\n    tr: {\n        whiteSpace: 'pre',\n    },\n    leftColNumber: {\n        width: '4em',\n    },\n    leftCol: {\n        width: '45%',\n    },\n    leftColDelete: {\n        width: '45%',\n        background: deleteColor,\n    },\n    leftColAdd: {\n        background: addColor,\n    },\n    rightCol: {\n        width: '45%',\n    },\n    rightColAdd: {\n        width: '45%',\n        background: addColor,\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Styles';\n\n\nexport const BAR_TYPES = {\n    ALARM: 'alarm',\n    ERROR: 'error',\n    NOTIFICATION: 'notification',\n    WARNING: 'warning',\n};\n\nconst ENUM_PROP = Object.values(BAR_TYPES);\nconst DEFAULT_STYLE = {};\n\nconst NotificationBar = ({ message, type, additionalStyles = DEFAULT_STYLE }) => {\n    if (!message) return null;\n    return (\n        <div data-handle={`${type}-bar`} style={{ ...styles[type], ...additionalStyles }}>\n            {message}\n        </div>\n    );\n};\n\nNotificationBar.propTypes = {\n    message: PropTypes.string,\n    additionalStyles: PropTypes.shape({}),\n    type: PropTypes.oneOf(ENUM_PROP),\n};\n\nNotificationBar.defaultProps = {\n    type: BAR_TYPES.NOTIFICATION,\n};\n\nexport default NotificationBar;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst bar = {\n    color: defaultStyles.textColor4,\n    fontSize: defaultStyles.medium2,\n    padding: '0.4rem 0.8rem',\n    ...defaultStyles.fontLight,\n};\n\nconst styles = {\n    alarm: {\n        ...bar,\n        backgroundColor: defaultStyles.color5,\n    },\n    error: {\n        ...bar,\n        backgroundColor: defaultStyles.color5,\n    },\n    notification: {\n        ...bar,\n        backgroundColor: defaultStyles.color10,\n    },\n    warning: {\n        ...bar,\n        color: defaultStyles.textColor2,\n        backgroundColor: defaultStyles.color17,\n    },\n};\n\nexport default styles;\n","/* eslint-disable import/prefer-default-export */\n\nexport const ensureConfigNode = data => (\n    !(data.startsWith('<config>') && data.endsWith('</config>'))\n        ? `<config>${data}</config>`\n        : data\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst EditSymbol = ({ color, active }) => (\n    <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 36 24\">\n        <path\n            id=\"pen\"\n            fill={color}\n            d=\"M14.92,4.01l4.88,4.91L7.45,21.33l-4.88-4.91L14.92,4.01z M23.51,2.82l-2.18-2.19\n                c-0.84-0.85-2.21-0.85-3.05,0l-2.09,2.1l4.88,4.91l2.43-2.44C24.16,4.54,24.16,3.48,23.51,2.82z M0.01,23.32\n                c-0.09,0.4,0.27,0.76,0.67,0.66l5.44-1.33l-4.88-4.91L0.01,23.32z\"\n        />\n        {active || (\n            <path\n                id=\"down\"\n                fill={color}\n                d=\"M25.44,12.37l0.08-0.08c0.46-0.43,1.17-0.43,1.63,0l3.38,3.14l3.38-3.14\n                c0.46-0.43,1.17-0.43,1.63,0l0.08,0.08c0.46,0.43,0.49,1.15,0.06,1.61c-0.02,0.02-0.04,0.04-0.06,0.06l-4.28,3.98\n                c-0.46,0.43-1.17,0.43-1.63,0l-4.28-3.98c-0.46-0.43-0.49-1.15-0.06-1.61C25.4,12.41,25.41,12.39,25.44,12.37z\"\n            />\n        )}\n        {active && (\n            <path\n                id=\"down_1_\"\n                fill={color}\n                d=\"M35.64,17.95l-0.08,0.08c-0.46,0.43-1.17,0.43-1.63,0l-3.38-3.14l-3.38,3.14\n                c-0.46,0.43-1.17,0.43-1.63,0l-0.08-0.08c-0.46-0.43-0.49-1.15-0.06-1.61c0.02-0.02,0.04-0.04,0.06-0.06l4.28-3.98\n                c0.46-0.43,1.17-0.43,1.63,0l4.28,3.98c0.46,0.43,0.49,1.15,0.06,1.61C35.68,17.91,35.66,17.93,35.64,17.95z\"\n            />\n        )}\n    </svg>\n);\n\nEditSymbol.propTypes = {\n    color: PropTypes.string,\n    active: PropTypes.bool,\n};\n\nEditSymbol.defaultProps = {\n    color: 'red',\n};\n\nexport default EditSymbol;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmptyArray } from '@webui-one/core/utils/array';\nimport style from './CommitManagerStyles';\nimport {\n    renderHeader,\n    renderBody,\n} from './Common';\n\nconst ChangesTab = ({ changes = [] }) => {\n    if (isEmptyArray(changes)) {\n        return <div style={style.message}>No changes</div>;\n    }\n\n    return (\n        <table style={style.table}>\n            {renderHeader()}\n            {renderBody(changes)}\n        </table>\n    );\n};\n\nChangesTab.defaultProps = {\n    changes: [],\n};\n\nChangesTab.propTypes = {\n    changes: PropTypes.arrayOf(\n        PropTypes.shape({\n            path: PropTypes.string,\n            op: PropTypes.string,\n            value: PropTypes.string,\n            old: PropTypes.string,\n        }),\n    ),\n};\n\nexport default ChangesTab;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getSchema } from 'modules/schemas/actions';\nimport {\n    selectChangesWithDefaultValues,\n} from 'modules/transactions/selectors';\nimport ChangesTab from './ChangesTab';\n\nclass ChangesTabContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hasLoadedSchemaFor = {};\n    }\n\n    componentDidUpdate() {\n        const {\n            changes,\n            onGetSchema,\n        } = this.props;\n        const defaultSetChanges = changes.filter(\n            c => c.op === 'default_set' && c.value === undefined && this.hasLoadedSchemaFor[c.path] !== true,\n        );\n\n        defaultSetChanges.forEach((c) => {\n            this.hasLoadedSchemaFor[c.path] = true;\n            onGetSchema(c.path);\n        });\n    }\n\n    render() {\n        const { changes } = this.props;\n        return <ChangesTab changes={changes} />;\n    }\n}\n\nChangesTabContainer.defaultProps = {\n    changes: [],\n};\n\nChangesTabContainer.propTypes = {\n    changes: PropTypes.arrayOf(\n        PropTypes.shape({\n            device: PropTypes.string,\n            text: PropTypes.string,\n        }),\n    ),\n    onGetSchema: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetSchema(path) {\n        dispatch(getSchema({ path, params: { levels: 1 } }));\n    },\n});\n\nconst mapStateToProps = state => ({\n    changes: selectChangesWithDefaultValues(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ChangesTabContainer);\n\nexport {\n    ChangesTabContainer as _ChangesTabContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    tableWrapper: {\n        width: '100%',\n        marginBottom: '1.5rem',\n        padding: '1rem',\n        boxSizing: 'border-box',\n        overflow: 'auto',\n    },\n    tableName: {\n        padding: '0.5rem 0 0.25rem 0',\n    },\n    message: {\n        padding: '2rem',\n        marginBottom: '20rem',\n        backgroundColor: 'white',\n        fontSize: defaultStyles.medium3,\n        textAlign: 'center',\n        color: defaultStyles.textColor1,\n    },\n};\n","import React from 'react';\nimport DiffTable from '@webui-one/components/DiffTable/DiffTable';\nimport style from './CommitDryRunStyles';\n\nconst renderTableWithName = ({ name, data }, i) => ( // eslint-disable-line react/prop-types\n    <div data-handle=\"config-dryrun-diff\" style={style.tableWrapper} key={`table-wrapper-${i}`}>\n        <div style={style.tableName}>{name}</div>\n        <DiffTable data={data} />\n    </div>\n);\n\nconst commitDryRunTab = (result) => {\n    if (!(result && result.local_node && result.local_node.data)) {\n        return <div style={style.message}>No configuration changes</div>;\n    }\n\n    if (result.lsa_node && result.lsa_node.length) {\n        const localNode = { data: result.local_node.data, name: 'Local node' };\n        const nodesData = [localNode, ...result.lsa_node.map(n => ({ ...n, name: `LSA node: ${n.name}` }))];\n        return (\n            <div style={style.tableWrapper}>\n                { nodesData.map(renderTableWithName) }\n            </div>\n        );\n    }\n    return (\n        <div data-handle=\"config-dryrun-diff\" style={style.tableWrapper}>\n            <DiffTable data={result.local_node.data} />\n        </div>\n    );\n};\n\nexport default commitDryRunTab;\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport {\n    selectCommitDryRunResult,\n    selectCommitDryRunError,\n    selectReadWrite,\n    selectHasLatestCommitDryRunResult,\n    selectThIsBusy,\n    transactionIsEmpty,\n} from 'modules/transactions/selectors';\nimport {\n    commitDryRun,\n} from 'modules/transactions/actions';\n\nimport style from './CommitManagerStyles';\nimport commitDryRunTab from './CommitDryRunTab';\n\nconst loader = <div style={style.loaderbox}><Loader color={defaultStyles.color9} /></div>;\n\nclass CommitDryRunTabContainer extends React.Component {\n    componentDidMount() {\n        this.onCommitDryRun();\n    }\n\n    componentDidUpdate() {\n        this.onCommitDryRun();\n    }\n\n    onCommitDryRun() {\n        const {\n            onCommitDryRun,\n            th,\n            emptyTransaction,\n            hasLatestCommitDryRunResult,\n            thIsBusy,\n            commitDryRunError,\n        } = this.props;\n\n        const hasNotError = !(commitDryRunError && commitDryRunError.message);\n\n        if (\n            !emptyTransaction &&\n            !!th &&\n            !hasLatestCommitDryRunResult &&\n            !thIsBusy &&\n            hasNotError\n        ) {\n            onCommitDryRun(th);\n        }\n    }\n\n    render() {\n        const { thIsBusy, result } = this.props;\n        if (thIsBusy) {\n            return loader;\n        }\n        return (\n            commitDryRunTab(result)\n        );\n    }\n}\n\nCommitDryRunTabContainer.defaultProps = {\n    result: {},\n};\n\nCommitDryRunTabContainer.propTypes = {\n    commitDryRunError: PropTypes.shape({\n        message: PropTypes.string,\n    }),\n    thIsBusy: PropTypes.bool,\n    result: PropTypes.shape(Object),\n    onCommitDryRun: PropTypes.func,\n    th: PropTypes.number,\n    emptyTransaction: PropTypes.bool,\n    hasLatestCommitDryRunResult: PropTypes.bool,\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onCommitDryRun(th) {\n        dispatch(commitDryRun({ th }));\n    },\n});\n\nconst mapStateToProps = state => ({\n    thIsBusy: selectThIsBusy(state),\n    result: selectCommitDryRunResult(state),\n    commitDryRunError: selectCommitDryRunError(state),\n    th: selectReadWrite(state),\n    hasLatestCommitDryRunResult: selectHasLatestCommitDryRunResult(state),\n    emptyTransaction: transactionIsEmpty(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitDryRunTabContainer);\n\nexport {\n    CommitDryRunTabContainer as _CommitDryRunTabContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@webui-one/router';\n\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport Select from '@webui-one/components/ConfigRender/Select/Select';\nimport CommitButtonContainer from 'Common/Components/Commit/CommitButtonContainer';\nimport RevertButtonContainer from 'Common/Components/Commit/RevertButtonContainer';\nimport LoadButtonContainer from 'Common/Components/Commit/LoadButtonContainer';\nimport HeaderContainer from 'Common/Components/Header/HeaderContainer';\nimport FooterContainer from 'Common/Components/Footer/FooterContainer';\nimport EditModeButtonContainer from 'ConfigurationEditor/EditModeButtonContainer';\nimport style, { tabs as tabStyle } from './CommitManagerStyles';\nimport { transactionStatus } from 'modules/transactions/constants';\nimport CommitStatusBarContainer from 'Common/Components/Commit/CommitStatusBarContainer';\nimport NotificationBar, { BAR_TYPES } from '@webui-one/components/Notification/NotificationBar';\n\nconst getStatusElement = (transactionEmpty, transStatus, loading) => {\n    if (loading) {\n        return (\n            <span data-handle=\"transactionStatus\" style={style.statusStyles.statusValid}>\n                EVALUATING\n            </span>\n        );\n    }\n\n    if (transactionEmpty) {\n        return (\n            <span data-handle=\"transactionStatus\" style={style.statusStyles.statusEmpty}>\n                EMPTY\n            </span>\n        );\n    }\n    if (transStatus === transactionStatus.INVALID) {\n        return (\n            <span data-handle=\"transactionStatus\" style={style.statusStyles.statusInvalid}>\n                INVALID\n            </span>\n        );\n    }\n    return (\n        <span data-handle=\"transactionStatus\" style={style.statusStyles.statusValid}>\n            VALID\n        </span>\n    );\n};\n\nconst getTabStyle = (page) => {\n    if (page.isDisabled) {\n        return tabStyle.disabledtab;\n    }\n    if (page.isActive) {\n        return tabStyle.activeTab;\n    }\n    return tabStyle.tab;\n};\n\nconst TabLink = ({ page }) => {\n    const isLink = !page.isDisabled && !page.isActive;\n    const LinkComponent = isLink ? Link : 'span';\n    return (\n        <div data-handle=\"tab-btn\" style={getTabStyle(page)}>\n            <LinkComponent\n                to={page.to}\n                style={tabStyle.tabButton}\n            >\n                {page.tab}\n            </LinkComponent>\n        </div>\n    );\n};\n\nconst SelectTh = ({\n    thList,\n    onSelectTh,\n    selectedTh,\n}) => (\n    <div style={style.selectTh}>\n        {(thList.length > 1 || (thList.length > 0 && !thList.includes(selectedTh))) && (\n            <Select\n                editable\n                name={'select-th'}\n                extraSelectStyle={style.activeThSelect}\n                onSetValue={onSelectTh}\n                options={thList}\n                placeholder=\"Select active transaction handle\"\n                value={selectedTh}\n            />\n        )}\n    </div>\n);\n\nSelectTh.propTypes = {\n    onSelectTh: PropTypes.func,\n    selectedTh: PropTypes.string,\n    thList: PropTypes.arrayOf(\n        PropTypes.string,\n    ),\n};\nexport const pageProp = PropTypes.shape({\n    isActive: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    name: PropTypes.string,\n    tab: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    to: PropTypes.string,\n});\n\nTabLink.propTypes = ({\n    page: pageProp,\n});\nconst additionalComponentsRight = [<EditModeButtonContainer />];\n\nconst CommitManager = ({\n    children,\n    emptyTransaction,\n    loading,\n    onSelectTh,\n    pages,\n    selectedTh,\n    thList,\n    transStatus,\n    warningMessage,\n}) => (\n    <div style={style.application} data-handle=\"commitManager\">\n        <HeaderContainer additionalComponentsRight={additionalComponentsRight}>\n            <div style={style.secondHeader}>\n                <div style={style.contentWrapper}>\n                    <div style={style.statusStyles.message}>\n                        <span>\n                            Current transaction\n                            {thList.length === 1 && selectedTh && (\n                            <span title={`Active transaction ${selectedTh}`}>\n                                {` (${selectedTh}) `}\n                            </span>\n                            )}\n                            {' '}\n                            is\n                        </span>\n                            &#160;\n                        {getStatusElement(emptyTransaction, transStatus, loading)}\n                    </div>\n                    <SelectTh\n                        onSelectTh={onSelectTh}\n                        selectedTh={selectedTh}\n                        thList={thList}\n                    />\n                    <RevertButtonContainer />\n                    <LoadButtonContainer />\n                    <div style={style.spacer} />\n                    <div style={style.commitButton}>\n                        <CommitButtonContainer>\n                            Commit\n                        </CommitButtonContainer>\n                    </div>\n                </div>\n            </div>\n            <div style={defaultStyles.shadow} />\n            <CommitStatusBarContainer />\n            <NotificationBar\n                message={warningMessage}\n                type={BAR_TYPES.WARNING}\n            />\n        </HeaderContainer>\n        <div style={style.scrollingContainer}>\n            <div style={style.maxWidth}>\n                <div style={tabStyle.main}>\n                    <div style={tabStyle.tabContainer}>\n                        { pages.map((page, index) => (\n                            <TabLink key={index} page={page} />\n                        ))}\n                    </div>\n                    {children}\n                </div>\n            </div>\n        </div>\n        <FooterContainer />\n    </div>\n);\n\n\nCommitManager.propTypes = {\n    children: PropTypes.node,\n    emptyTransaction: PropTypes.bool,\n    loading: PropTypes.bool,\n    onSelectTh: PropTypes.func,\n    pages: PropTypes.arrayOf(\n        pageProp,\n    ),\n    selectedTh: PropTypes.string,\n    transStatus: PropTypes.string,\n    thList: PropTypes.arrayOf(\n        PropTypes.string,\n    ),\n    warningMessage: PropTypes.string,\n};\n\nCommitManager.defaultProps = {\n    pages: [],\n    loading: undefined,\n    selectedTh: '',\n};\n\nexport default CommitManager;\n\nexport {\n    getStatusElement as _getStatusElement,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isNonEmptyArray } from '@webui-one/core/utils/array';\nimport { toNumber } from '@webui-one/core/utils/number';\nimport { isNonEmptyString } from '@webui-one/core/utils/string';\nimport { isDeepEqual, isNonEmpty } from '@webui-one/core/utils/object';\nimport { formatPath } from '@webui-one/core/utils/path';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport {\n    TAGS,\n    WARNING_MULTIPLE_WEBUI_ONE,\n} from '@webui-one/core/jsonrpc/constants';\n\nimport {\n    getAdditionalTrans,\n    getWriteTrans,\n    getTransChanges,\n    reevaluate,\n    resolveConflicts,\n    setActiveThAction,\n} from 'modules/transactions/actions';\nimport {\n    selectWriteTrans,\n    selectConflicts,\n    selectChangesWithDefaultValues,\n    selectValidateTransactionError,\n    selectReadWrite,\n    selectReadWriteThTag,\n    selectThIsBusy,\n    selectStatus,\n    selectWarnings,\n    transactionIsEmpty,\n} from 'modules/transactions/selectors';\nimport { selectSchema as _selectSchema } from 'modules/schemas/selectors';\n\nimport ChangesTabContainer from './ChangesTabContainer';\nimport CommitDryRunTabContainer from './CommitDryRunTabContainer';\nimport CommitManager, { pageProp } from './CommitManager';\nimport CommitQueueTab from './CommitQueueListContainer';\nimport NativeCommitDryRunTabContainer from './NativeCommitDryRunTabContainer';\nimport style from './CommitManagerStyles';\nimport WarningsTab from './WarningsTab';\n\nconst APP_NAME = 'CommitManager';\nconst PAGE_CHANGES = 'changes';\nconst PAGE_QUEUE = 'commit-queue';\nconst PAGE_ERROR = 'errors';\nconst PAGE_WARNINGS = 'warnings';\nconst PAGE_CONFIG = 'config';\nconst PAGE_NATIVE = 'native';\n\nconst DEFAULT_PAGE_ID = PAGE_CHANGES;\n\nconst PAGES = [\n    PAGE_CHANGES,\n    PAGE_WARNINGS,\n    PAGE_ERROR,\n    PAGE_CONFIG,\n    PAGE_NATIVE,\n    PAGE_QUEUE,\n];\n\nconst LoaderBox = () => <div style={style.loaderbox}><Loader color={defaultStyles.color9} /></div>;\n\nconst getPage = ({ name, tab, page, id }, isDisabled) => ({\n    isDisabled: !!isDisabled,\n    id,\n    name,\n    page,\n    tab: tab || name,\n    to: `${formatPath(APP_NAME)}/${id}`,\n});\n\nconst getChangesPage = () => ({\n    id: PAGE_CHANGES,\n    name: 'changes',\n    page: <ChangesTabContainer />,\n});\n\nconst getCommitDryRunPage = () => ({\n    id: PAGE_CONFIG,\n    name: 'config',\n    page: <CommitDryRunTabContainer />,\n});\n\nconst getNativeCommitDryRunPage = () => ({\n    id: PAGE_NATIVE,\n    name: 'native config',\n    page: <NativeCommitDryRunTabContainer />,\n});\n\nconst getCommitQueuePage = () => ({\n    id: PAGE_QUEUE,\n    name: 'commit queue',\n    page: <CommitQueueTab />,\n});\n\nconst countNumberOfErrors = (error) => {\n    if (error && error.data && error.data.errors && Array.isArray(error.data.errors)) {\n        return error.data.errors.length;\n    }\n    return 0;\n};\nconst getTransName = ({ th, tag }) => {\n    if (!th) {\n        return '';\n    }\n    const thTag = tag ? ` - ${tag}` : '';\n    return `${th}${thTag}`;\n};\n\nconst convertWarningsToErrors = (warnings) => {\n    if (isNonEmptyArray(warnings)) {\n        return {\n            data: {\n                errors: warnings,\n            },\n        };\n    }\n    return undefined;\n};\n\nconst getWarningsPage = (warnings, onReevaluateTrans) => {\n    const numberOfWarnings = countNumberOfErrors(warnings);\n    const name = 'warnings';\n    return {\n        id: PAGE_WARNINGS,\n        tab: (\n            <>\n                <span>{name}</span>\n                {numberOfWarnings > 0 && (\n                    <span style={style.warningsNumberContainer} data-handle=\"warnings-number-label\">\n                        {numberOfWarnings}\n                    </span>\n                )}\n            </>\n        ),\n        page: (\n            <WarningsTab\n                error={warnings}\n                onRevalidateTrans={onReevaluateTrans}\n            />\n        ),\n        name,\n    };\n};\n\nconst getErrorsPage = (error, conflicts, onReevaluateTrans, resolveConflictsCb, thTag) => {\n    const numberOfErrors = countNumberOfErrors(error);\n    const name = 'errors';\n    return {\n        id: PAGE_ERROR,\n        tab: (\n            <>\n                <span>{name}</span>\n                {numberOfErrors > 0 && (\n                    <span style={style.warningsNumberContainer} data-handle=\"warnings-number-label\">\n                        {numberOfErrors}\n                    </span>\n                )}\n            </>\n        ),\n        page: (\n            <WarningsTab\n                emptyMessage=\"No errors\"\n                error={error}\n                conflicts={conflicts}\n                onRevalidateTrans={onReevaluateTrans}\n                onResolveConflicts={resolveConflictsCb}\n                disableDataContainer={thTag !== TAGS.WEBUI_ONE}\n            />\n        ),\n        name,\n    };\n};\n\nexport const CommitContent = ({ hasInitiated, thIsBusy, page }) => {\n    if (!hasInitiated) return null;\n    if (page.isDisabled) {\n        return (\n            <div style={style.message} data-handle=\"disabled-page\">\n                {`${page.name} is disabled`}\n            </div>\n        );\n    }\n    return (\n        <>\n            {thIsBusy && <LoaderBox />}\n            {page.page}\n        </>\n    );\n};\n\nCommitContent.propTypes = {\n    hasInitiated: PropTypes.bool,\n    page: pageProp,\n    thIsBusy: PropTypes.bool,\n};\n\nclass CommitManagerContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleReevaluateTrans = this.handleReevaluateTrans.bind(this);\n        this.resolveConflicts = this.resolveConflicts.bind(this);\n        this.forceActivePage = this.forceActivePage.bind(this);\n        this.reevaluateCalled = false;\n\n        this.state = {\n            redirected: false,\n            hasInitiated: false,\n        };\n    }\n\n    componentDidMount() {\n        const {\n            emptyTransaction,\n            onGetWriteTrans,\n            onGetAdditionalTrans,\n            th,\n            thIsBusy,\n        } = this.props;\n\n        if (!th) onGetWriteTrans();\n\n        onGetAdditionalTrans();\n\n        if (\n            th\n            && !thIsBusy\n            && !emptyTransaction\n        ) {\n            this.handleReevaluateTrans(true);\n        }\n        this.setState({ hasInitiated: true });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            changes,\n            currentPage,\n            th,\n            thList,\n            thIsBusy,\n            transStatus,\n        } = this.props;\n        const { hasInitiated } = this.state;\n        if (hasInitiated !== nextState.hasInitiated) {\n            return true;\n        }\n        if (currentPage !== nextProps.currentPage) {\n            return true;\n        }\n        if (th !== nextProps.th) {\n            this.reevaluateCalled = false;\n            return true;\n        }\n        if (thList.length !== nextProps.thList.length) {\n            return true;\n        }\n        if (thIsBusy === true && nextProps.thIsBusy === false) {\n            return true;\n        }\n        if (transStatus !== nextProps.transStatus) {\n            return true;\n        }\n        if (!isDeepEqual(changes, nextProps.changes)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            emptyTransaction,\n            onGetWriteTrans,\n            th,\n            thIsBusy,\n            transError,\n            warnings,\n        } = this.props;\n\n        if (th !== prevProps.th) {\n            this.setRedirected(false);\n        }\n\n        if (!th && !emptyTransaction) {\n            onGetWriteTrans();\n        }\n\n        if (th && !thIsBusy && !this.reevaluateCalled && !emptyTransaction) {\n            this.handleReevaluateTrans();\n        }\n\n        if (!isDeepEqual(transError, prevProps.transError)) {\n            this.forceActivePage('errors');\n        } else if (!isDeepEqual(warnings, prevProps.warnings)) {\n            this.forceActivePage('warnings');\n        }\n    }\n\n    componentWillUnmount() {\n        const { onSelectTh } = this.props;\n        onSelectTh(undefined);\n    }\n\n    handleReevaluateTrans() {\n        const { onReevaluate, th } = this.props;\n        if (th) {\n            this.reevaluateCalled = true;\n            onReevaluate(th);\n        }\n    }\n\n    setRedirected(redirected) {\n        this.setState({ redirected });\n    }\n\n    forceActivePage(page) {\n        const { currentPage, router } = this.props;\n        const { redirected } = this.state;\n\n        if (currentPage !== page && !redirected) {\n            this.setRedirected(true);\n            router.push(`${formatPath(APP_NAME)}/${page}`);\n        }\n    }\n    resolveConflicts() {\n        const { onResolveConflicts, th } = this.props;\n\n        if (th) {\n            onResolveConflicts(th);\n        }\n    }\n    render() {\n        const {\n            conflicts,\n            currentPage,\n            emptyTransaction,\n            onSelectTh,\n            th,\n            thIsBusy,\n            thList,\n            thTag,\n            transError,\n            transStatus,\n            warningMessage,\n            warnings,\n        } = this.props;\n        const { hasInitiated } = this.state;\n        const disableDryRun = transError && isNonEmpty(transError);\n        const pages = [\n            getPage(getChangesPage()),\n            getPage(getErrorsPage(\n                transError,\n                conflicts,\n                this.handleReevaluateTrans,\n                this.resolveConflicts,\n                thTag,\n            )),\n            getPage(getWarningsPage(warnings, this.handleReevaluateTrans)),\n            getPage(getCommitDryRunPage(), disableDryRun),\n            getPage(getNativeCommitDryRunPage(), disableDryRun),\n            getPage(getCommitQueuePage()),\n        ];\n        const properPageId = PAGES.includes(currentPage) ? currentPage : DEFAULT_PAGE_ID;\n        const page = pages.find(({ id }) => properPageId === id);\n        page.isActive = true;\n\n        const selectedTh = getTransName({ th, tag: thTag });\n\n        return (\n            <CommitManager\n                emptyTransaction={emptyTransaction}\n                loading={thIsBusy}\n                onChangeTab={this.onChangeTab}\n                onSelectTh={onSelectTh}\n                pages={pages}\n                selectedTh={selectedTh}\n                thList={thList}\n                transStatus={transStatus}\n                warningMessage={warningMessage}\n            >\n                <CommitContent thIsBusy={thIsBusy} page={page} hasInitiated={hasInitiated} />\n            </CommitManager>\n        );\n    }\n}\n\nCommitManagerContainer.defaultProps = {\n    emptyTransaction: undefined,\n    thIsBusy: false,\n    th: undefined,\n    thList: [],\n    transStatus: undefined,\n    warnings: undefined,\n};\n\nCommitManagerContainer.propTypes = {\n    changes: PropTypes.arrayOf(PropTypes.shape()),\n    conflicts: PropTypes.arrayOf(PropTypes.shape()),\n    currentPage: PropTypes.string,\n    emptyTransaction: PropTypes.bool,\n    onSelectTh: PropTypes.func.isRequired,\n    onGetWriteTrans: PropTypes.func.isRequired,\n    onGetAdditionalTrans: PropTypes.func.isRequired,\n    onReevaluate: PropTypes.func.isRequired,\n    onResolveConflicts: PropTypes.func.isRequired,\n    router: PropTypes.shape({\n        push: PropTypes.func,\n        location: PropTypes.shape({}),\n    }),\n    thIsBusy: PropTypes.bool,\n    th: PropTypes.number,\n    thTag: PropTypes.string,\n    thList: PropTypes.arrayOf(PropTypes.string),\n    transError: PropTypes.shape({\n        type: PropTypes.string,\n        message: PropTypes.string,\n    }),\n    transStatus: PropTypes.string,\n    warningMessage: PropTypes.string,\n    warnings: PropTypes.shape({\n        path: PropTypes.string,\n        paths: PropTypes.arrayOf(PropTypes.string),\n        reason: PropTypes.string,\n    }),\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetAdditionalTrans() {\n        dispatch(getAdditionalTrans());\n    },\n    onGetWriteTrans() {\n        dispatch(getWriteTrans());\n    },\n    onReevaluate(th) {\n        dispatch(reevaluate({ th }));\n    },\n    onResolveConflicts(th) {\n        dispatch(resolveConflicts({ th }));\n    },\n    onSelectTh(option) {\n        let newTh;\n        if (isNonEmptyString(option)) {\n            const thStr = option.match(/\\d/)[0];\n            newTh = toNumber(thStr) || undefined;\n        }\n        dispatch(setActiveThAction(newTh));\n        dispatch(getTransChanges({ th: newTh }));\n    },\n});\n\nconst mapStateToProps = (\n    state,\n    ownProps,\n    {\n        funcs: {\n            selectSchema = _selectSchema,\n        } = {},\n    } = {},\n) => {\n    const routeParams = (ownProps && ownProps.routeParams) || {};\n    const currentPage = (routeParams.splat || '').substr(1);\n    const warnings = convertWarningsToErrors(selectWarnings(state));\n    let transError = selectValidateTransactionError(state);\n\n    if (transError && transError.data && Array.isArray(transError.data.errors)) {\n        const errors = transError.data.errors.map(error => ({\n            ...error,\n            schema: selectSchema(\n                state,\n                error.path,\n            ),\n        }));\n        transError = {\n            ...transError,\n            data: {\n                ...transError.data,\n                errors,\n            },\n        };\n    }\n\n    const trans = selectWriteTrans(state);\n    const thList = Object.values(trans).map(getTransName);\n    const hasMultiWriteTh = trans.filter(({ tag }) => tag === TAGS.WEBUI_ONE).length > 1;\n    const warningMessage = hasMultiWriteTh\n        ? WARNING_MULTIPLE_WEBUI_ONE\n        : '';\n    return {\n        changes: selectChangesWithDefaultValues(state),\n        conflicts: selectConflicts(state),\n        currentPage,\n        emptyTransaction: transactionIsEmpty(state),\n        th: selectReadWrite(state),\n        thIsBusy: selectThIsBusy(state),\n        thList,\n        thTag: selectReadWriteThTag(state),\n        transError,\n        transStatus: selectStatus(state),\n        warningMessage,\n        warnings,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitManagerContainer);\n\nexport {\n    CommitManagerContainer as _CommitManagerContainer,\n    convertWarningsToErrors as _convertWarningsToErrors,\n    countNumberOfErrors as _countrNumberOfErrors,\n    getChangesPage as _getChangesPage,\n    getCommitDryRunPage as _getCommitDryRunPage,\n    getNativeCommitDryRunPage as _getNativeCommitDryRunPage,\n    getWarningsPage as _getWarningsPage,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst statusText = {\n    color: defaultStyles.color2,\n    fontSize: defaultStyles.medium2,\n    margin: '0 0.5rem 0 1rem',\n    ...defaultStyles.fontLight,\n};\n\nexport default {\n    application: {\n        ...defaultStyles.application,\n        display: 'flex',\n        flexFlow: 'column',\n        height: '100vh',\n        backgroundImage: defaultStyles.pattern1,\n    },\n    scrollingContainer: {\n        overflow: 'auto',\n        padding: '1rem 0.5rem',\n        flexGrow: '1',\n    },\n    warningsContainer: {\n        overflow: 'auto',\n        padding: '1rem 0.5rem',\n        flexGrow: '1',\n        minHeight: '30rem',\n    },\n    maxWidth: {\n        maxWidth: defaultStyles.maxWidth,\n        margin: '0 auto',\n    },\n    warningsNumberContainer: {\n        backgroundColor: defaultStyles.color5,\n        fontSize: defaultStyles.small3,\n        color: defaultStyles.textColor4,\n        padding: '0.075rem 0.25rem',\n        marginLeft: '0.5rem',\n    },\n    warningsNumberLabel: {\n        position: 'absolute',\n        backgroundColor: '#ff3333',\n        color: '#ffffff',\n        padding: '0 0.3rem',\n        borderRadius: '1rem',\n        right: '0.5rem',\n    },\n    secondHeader: {\n        backgroundColor: defaultStyles.color11,\n        borderTop: '1px solid #cccccc',\n        height: '50px',\n    },\n    contentWrapper: {\n        maxWidth: defaultStyles.maxWidth,\n        margin: '0 auto',\n        display: 'flex',\n        height: '100%',\n        alignItems: 'center',\n    },\n    activeThSelect: {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n    },\n    tabDeck: {\n        main: {\n            maxWidth: defaultStyles.maxWidth,\n            padding: '1rem',\n            margin: '0 auto',\n        },\n    },\n    selectTh: {\n        minWidth: '2rem',\n        maxWidth: '15rem',\n        marginRight: '0.5rem',\n    },\n    statusStyles: {\n        statusText,\n        message: {\n            minWidth: '12rem',\n            ...statusText,\n            ...defaultStyles.fontLight,\n        },\n        statusValid: {\n            color: defaultStyles.color10,\n        },\n        statusEmpty: {\n        },\n        statusInvalid: {\n            color: defaultStyles.color5,\n        },\n    },\n    spacer: {\n        flexGrow: '1',\n    },\n    commitButton: {\n        alignSelf: 'center',\n        marginRight: '1rem',\n    },\n    table: {\n        color: defaultStyles.textColor2,\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        thead: {\n            backgroundColor: defaultStyles.color3,\n            borderBottom: `1px solid ${defaultStyles.color7}`,\n            fontSize: defaultStyles.medium2,\n            whiteSpace: 'nowrap',\n            ...defaultStyles.fontCondensed,\n        },\n        tbody: {\n            backgroundColor: defaultStyles.color3,\n            fontSize: '0.8rem',\n            whiteSpace: 'pre-wrap',\n            wordBreak: 'break-word',\n            ...defaultStyles.fontRegular,\n        },\n        td: {\n            padding: '0.5rem 1rem',\n            lineHeight: '1.75',\n        },\n        th: {\n            padding: '0.5rem 1rem',\n            lineHeight: '1.75',\n        },\n        tr: {\n            backgroundColor: 'rgb(243, 243, 243)',\n            color: '#333333',\n            padding: '0.7rem',\n        },\n        a: {\n            color: defaultStyles.color1,\n            textDecoration: 'none',\n        },\n    },\n    resultSearchBar: {\n        width: '100%',\n    },\n    nativeDevice: {\n        fontSize: defaultStyles.medium3,\n        padding: '1rem 0 0 1rem',\n    },\n    nativeCommitDiff: {\n        fontFamily: defaultStyles.font3,\n        fontSize: defaultStyles.medium1,\n        padding: '0.25rem 1rem',\n        whiteSpace: 'pre',\n        lineHeight: '1.25',\n        fontWeight: 'normal',\n    },\n    nativeCommitPane: {\n        overflow: 'auto',\n    },\n    message: {\n        padding: '2rem',\n        marginBottom: '20rem',\n        backgroundColor: 'white',\n        fontSize: defaultStyles.medium3,\n        textAlign: 'center',\n        color: defaultStyles.textColor1,\n        ...defaultStyles.fontLight,\n    },\n    loaderbox: {\n        margin: '2rem auto 2rem auto',\n    },\n    loader: {\n        position: 'absolute',\n        width: '100%',\n        left: '0',\n    },\n};\n\nconst checkboxStyle = {\n    checkbox: {\n        alignSelf: 'center',\n    },\n    checkboxWrapper: {\n        display: 'flex',\n    },\n    label: {\n        fontSize: defaultStyles.medium2,\n        alignSelf: 'center',\n        margin: '0 0.5rem',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst warningStyles = {\n    page: {\n        position: 'relative',\n    },\n    revalidateContainer: {\n        display: 'inline-block',\n        margin: '1rem 1rem 0 1rem',\n    },\n    errorHeader: {\n        backgroundColor: defaultStyles.color5,\n        color: defaultStyles.color3,\n        padding: '0.4375rem 1rem',\n        marginBottom: '1rem',\n        fontSize: defaultStyles.medium1,\n    },\n    messageContainer: {\n        color: defaultStyles.color5,\n        fontSize: defaultStyles.medium2,\n        marginLeft: '1.75rem',\n        display: 'inline-block',\n    },\n    message: {\n        padding: '2rem',\n        marginBottom: '20rem',\n        backgroundColor: 'white',\n        fontSize: defaultStyles.medium3,\n        textAlign: 'center',\n        color: defaultStyles.textColor1,\n    },\n    errorWrapper: {\n        padding: '0 1rem',\n    },\n};\n\nconst tab = {\n    backgroundColor: defaultStyles.color7,\n    color: defaultStyles.color1,\n    cursor: 'pointer',\n    padding: '0.2rem',\n};\n\nconst tabs = {\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: defaultStyles.color3,\n    },\n    tab,\n    activeTab: {\n        ...tab,\n        color: defaultStyles.textColor2,\n        backgroundColor: defaultStyles.color3,\n        cursor: 'unset',\n    },\n    disabledtab: {\n        ...tab,\n        cursor: 'not-allowed',\n        color: defaultStyles.textColor1,\n    },\n    tabButton: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        color: 'inherit',\n        cursor: 'inherit',\n        display: 'block',\n        fontSize: defaultStyles.medium2,\n        lineHeight: '1.75',\n        padding: '0.3rem 0.8rem',\n        textDecoration: 'none',\n        ...defaultStyles.fontCondensed,\n    },\n    tabContainer: {\n        backgroundColor: defaultStyles.color7,\n        display: 'flex',\n    },\n};\n\nexport {\n    checkboxStyle,\n    warningStyles,\n    tabs,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport {\n    selectQueueItemDevices,\n    selectQueueItemIsLoading,\n    getIdFromProps,\n} from 'modules/commitQueue/selectors';\nimport { getDevicesOfQueueItem } from 'modules/commitQueue/actions';\n\nimport style from './CommitQueueDevicesCellStyles';\n\nexport const CommitQueueDeviceCell = ({ device, state }) => (\n    <div\n        key={device}\n        data-handle={`device-${device}-${state}`}\n        style={style[state]}\n    >\n        {state === 'complete' && <span style={style.check}>✓</span>}\n        {device}\n    </div>\n);\nCommitQueueDeviceCell.propTypes = {\n    device: PropTypes.string,\n    state: PropTypes.string,\n};\n\nclass CommitQueueDevicesCellContainer extends React.Component {\n    componentDidMount() {\n        const { isLoading, onLoad } = this.props;\n        if (!isLoading) {\n            onLoad();\n        }\n    }\n\n    render() {\n        const { devices, rowKey, isLoading } = this.props;\n        if (isLoading) return <Loader color=\"#000\" />;\n        return (\n            <div data-handle={`devices-${rowKey}`}>\n                {devices.map(CommitQueueDeviceCell)}\n            </div>\n        );\n    }\n}\n\nCommitQueueDevicesCellContainer.propTypes = {\n    devices: PropTypes.arrayOf(Object).isRequired,\n    isLoading: PropTypes.bool,\n    onLoad: PropTypes.func,\n    rowKey: PropTypes.string,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    devices: selectQueueItemDevices(state, ownProps),\n    isLoading: selectQueueItemIsLoading(state, ownProps),\n});\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onLoad() {\n        dispatch(getDevicesOfQueueItem(getIdFromProps(ownProps)));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitQueueDevicesCellContainer);\n\nexport {\n    mapStateToProps as _mapStateToProps,\n    mapDispatchToProps as _mapDispatchToProps,\n    CommitQueueDevicesCellContainer as _CommitQueueDevicesCellContainer,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst device = {\n    borderRadius: '1rem',\n    color: defaultStyles.backgroundColor1,\n    display: 'inline-block',\n    marginRight: '0.1rem',\n    padding: '0 0.5rem',\n    lineHeight: '1.5rem',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n};\n\nexport default {\n    device: {\n        ...device,\n        backgroundColor: defaultStyles.color16,\n        borderColor: defaultStyles.color16,\n    },\n    transient: {\n        ...device,\n        backgroundColor: defaultStyles.color17,\n        borderColor: defaultStyles.color17,\n\n    },\n    wait: {\n        ...device,\n        backgroundColor: defaultStyles.color16,\n        borderColor: defaultStyles.color16,\n    },\n    complete: {\n        ...device,\n        backgroundColor: defaultStyles.backgroundColor1,\n        borderColor: defaultStyles.color6,\n        color: defaultStyles.color2,\n    },\n    failed: {\n        ...device,\n        backgroundColor: defaultStyles.color5,\n        borderColor: defaultStyles.color5,\n    },\n    check: {\n        color: defaultStyles.color10,\n    },\n};\n","import List from '@webui-one/components/ConfigRender/List/List';\nimport Pagination from '@webui-one/components/ConfigRender/List/Pagination';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from '@webui-one/components/ConfigRender/List/ListStyles';\nimport { Link } from '@webui-one/router';\nimport { connect } from 'react-redux';\nimport { getCommitQueue } from 'modules/commitQueue/actions';\nimport { getLinkWithPath } from 'ConfigurationEditor/utils';\nimport {\n    createSortableHeaderFactory,\n    createTextCellFactory,\n    getDefaultColumn,\n} from '@webui-one/components/ConfigRender/List/ListCells';\nimport {\n    selectCommitQueueLoading,\n    selectCommitQueueOffset,\n    selectCommitQueueRows,\n    selectCommitQueueSortColumn,\n    selectCommitQueueSortOrder,\n    selectTotalNumberOfCommitQueues,\n} from 'modules/commitQueue/selectors';\nimport {\n    ageToRelativeTimeString,\n} from '@webui-one/core/utils/time';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nimport CommitQueueDevicesCellContainer from 'CommitManager/CommitQueueDevicesCellContainer';\nimport style from './CommitManagerStyles';\n\nconst STYLE_NAME = 'commitQueueList';\nconst CHUNK_SIZE = 10;\nconst listStyle = styles(STYLE_NAME);\nconst REFRESH_INTERVAL = 10000;\nconst createQueueLink = (text, key, rowKey) => (\n    <Link to={getLinkWithPath(rowKey)} style={{ ...listStyle.list.row.link }}>\n        {text}\n    </Link>\n);\nconst createCell = createTextCellFactory(STYLE_NAME);\nconst createAgeCell = (text, key, rowKey) =>\n    createCell(ageToRelativeTimeString(text), key, rowKey);\n\nconst createDevicesCell = (text, key, rowKey) =>\n    <CommitQueueDevicesCellContainer rowKey={rowKey} />;\n\nclass CommitQueueListContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSortOrder = this.onChangeSortOrder.bind(this);\n        this.onGoToPage = this.onGoToPage.bind(this);\n        this.onRefresh = this.onRefresh.bind(this);\n    }\n\n    componentDidMount() {\n        const { onLoad, sortColumn, sortOrder } = this.props;\n        onLoad(CHUNK_SIZE, 1, sortColumn, sortOrder);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isLoading: wasLoading } = prevProps;\n        const { isLoading } = this.props;\n        if (wasLoading && !isLoading) {\n            this.resetRefresh();\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.refreshTimeout);\n    }\n\n    onChangeSortOrder(columnKey) {\n        const {\n            onLoad,\n            sortOrder,\n            sortColumn,\n            isLoading,\n        } = this.props;\n\n        if (!isLoading) {\n            const isDesc = columnKey === sortColumn && sortOrder !== 'descending';\n            const isNone = columnKey === sortColumn && sortOrder === 'descending';\n            let newSortorder = 'ascending';\n            let newColumnKey = columnKey;\n            if (isDesc) newSortorder = 'descending';\n            if (isNone) {\n                newSortorder = undefined;\n                newColumnKey = undefined;\n            }\n\n            onLoad(CHUNK_SIZE, 1, newColumnKey, newSortorder);\n        }\n    }\n\n    onGoToPage(offset) {\n        const {\n            isLoading,\n            onLoad,\n            sortOrder,\n            sortColumn,\n        } = this.props;\n\n        if (!isLoading) {\n            onLoad(CHUNK_SIZE, offset, sortColumn, sortOrder);\n        }\n    }\n\n    onRefresh() {\n        const { offset } = this.props;\n        this.onGoToPage(offset);\n    }\n\n    resetRefresh() {\n        clearTimeout(this.refreshTimeout);\n        this.refreshTimeout = setTimeout(this.onRefresh, REFRESH_INTERVAL);\n    }\n\n    render() {\n        const {\n            rows,\n            sortColumn,\n            sortOrder: sortOrdering,\n            isLoading,\n            totalNumberOfResults,\n            offset,\n        } = this.props;\n        if (!rows || !rows.length) {\n            return (\n                <div style={style.message}>\n                    <div style={isLoading ? { visibility: 'hidden' } : {}}>\n                        No commits in queue\n                    </div>\n                    {isLoading && (\n                        <div style={style.loader}>\n                            <Loader color={defaultStyles.color9} />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        const sortOrder = {\n            columnKey: sortColumn,\n            isDesc: sortOrdering === 'descending',\n        };\n\n        const createHeader = createSortableHeaderFactory(this.onChangeSortOrder, sortOrder);\n\n        const columns = [{\n            ...getDefaultColumn(),\n            title: 'id',\n            key: 'id',\n            createHeader,\n            createCell: createQueueLink,\n        },\n        {\n            ...getDefaultColumn(),\n            title: 'age',\n            key: 'age',\n            createHeader,\n            createCell: createAgeCell,\n        },\n        {\n            ...getDefaultColumn(),\n            title: 'status',\n            key: 'status',\n            createHeader,\n            createCell,\n        },\n        {\n            ...getDefaultColumn(),\n            title: 'atomic',\n            key: 'is-atomic',\n            createHeader,\n            createCell,\n        },\n        {\n            ...getDefaultColumn(),\n            title: 'devices',\n            key: 'devices',\n            createHeader,\n            createCell: createDevicesCell,\n        }];\n\n        const additionalElements = [\n            <Pagination\n                key=\"pagination\"\n                totalNumberOfResults={totalNumberOfResults}\n                onGoToPage={this.onGoToPage}\n                chunkSize={CHUNK_SIZE}\n                offset={offset}\n            />,\n        ];\n\n        return (\n            <List\n                columns={columns}\n                rows={rows}\n                styleName={STYLE_NAME}\n                isLoading={isLoading}\n                additionalElements={additionalElements}\n                chunkSize={CHUNK_SIZE}\n                LinkComponent={Link}\n                offset={offset}\n                shouldPadRows={false}\n                totalNumberOfResults={totalNumberOfResults}\n                shouldRetainColumnsSize={false}\n                nrOfStaticColumns={0}\n            />\n        );\n    }\n}\n\nCommitQueueListContainer.propTypes = {\n    isLoading: PropTypes.bool,\n    onLoad: PropTypes.func.isRequired,\n    rows: PropTypes.arrayOf(Object),\n    sortOrder: PropTypes.string,\n    offset: PropTypes.number,\n    sortColumn: PropTypes.string,\n    totalNumberOfResults: PropTypes.number,\n};\n\nCommitQueueListContainer.defaultProps = {};\n\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad(chunkSize, offset, columnKey, sortOrder) {\n        dispatch(getCommitQueue(chunkSize, offset, columnKey, sortOrder));\n    },\n});\n\nconst mapStateToProps = state => ({\n    isLoading: selectCommitQueueLoading(state),\n    offset: selectCommitQueueOffset(state),\n    rows: selectCommitQueueRows(state, { keyNames: ['id'] }),\n    sortColumn: selectCommitQueueSortColumn(state),\n    sortOrder: selectCommitQueueSortOrder(state),\n    totalNumberOfResults: selectTotalNumberOfCommitQueues(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitQueueListContainer);\n\n\nexport {\n    createAgeCell as _createAgeCell,\n    CommitQueueListContainer as _CommitQueueListContainer,\n    createQueueLink as _createQueueLink,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport style from './CommitManagerStyles';\nimport { Link } from '@webui-one/router';\nimport { getLinkWithPath } from 'ConfigurationEditor/utils';\nimport { escapeKey } from '@webui-one/core/utils/path';\n\nexport const renderRow = (item, key) => (\n    <tr style={key % 2 !== 0 ? style.table.tr : null} key={key}>\n        <td style={style.table.td}>\n            <Link\n                style={style.table.a}\n                to={getLinkWithPath(escapeKey(item.path))}\n            >\n                {item.path}\n            </Link>\n        </td>\n        <td style={style.table.td}>{item.op}</td>\n        <td style={style.table.td}>{item.old}</td>\n        <td style={style.table.td}>{item.value}</td>\n    </tr>\n);\n\nexport const renderHeader = () => (\n    <thead style={style.table.thead}>\n        <tr>\n            <th style={style.table.th}>Path</th>\n            <th style={style.table.th}>Operation</th>\n            <th style={style.table.th}>Old value</th>\n            <th style={style.table.th}>New value</th>\n        </tr>\n    </thead>\n);\n\nexport const renderBody = changes => (\n    <tbody style={style.table.tbody}>\n        { changes.map((change, ix) => (renderRow(change, ix))) }\n    </tbody>\n);\n\nexport {\n    renderBody as _renderBody,\n    renderRow as _renderRow,\n    renderHeader as _renderHeader,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmptyArray } from '@webui-one/core/utils/array';\nimport style from './CommitManagerStyles';\n\nconst NativeCommitDryRunTab = ({ devices }) => {\n    if (isEmptyArray(devices)) {\n        return <div style={style.message}>No devices affected</div>;\n    }\n\n    return (\n        <div>\n            <div data-handle=\"native-commit-dryrun-pane\" style={style.nativeCommitPane}>\n                {devices.map(({ name, data }) => (\n                    <div data-handle={`native-${name}`} key={name} >\n                        <div style={style.nativeDevice} data-handle=\"native-name\">{name}</div>\n                        <div style={style.nativeCommitDiff} data-handle=\"native-diff\">{data}</div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nNativeCommitDryRunTab.defaultProps = {\n    devices: [],\n};\n\nNativeCommitDryRunTab.propTypes = {\n    devices: PropTypes.arrayOf(PropTypes.shape({\n        data: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n    })),\n};\n\nexport default NativeCommitDryRunTab;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport {\n    selectNativeCommitDryRunResult,\n    selectReadWrite,\n    selectThIsBusy,\n    transactionIsEmpty,\n} from 'modules/transactions/selectors';\nimport {\n    nativeCommitDryRun,\n} from 'modules/transactions/actions';\n\nimport style from './CommitManagerStyles';\nimport NativeCommitDryRunTab from './NativeCommitDryRunTab';\n\nconst loader = <div style={style.loaderbox}><Loader color={defaultStyles.color9} /></div>;\n\nclass NativeCommitDryRunTabContainer extends React.Component {\n    componentDidMount() {\n        const {\n            th,\n            emptyTransaction,\n        } = this.props;\n        this.shouldCallDryRun = !emptyTransaction && !!th;\n        if (this.shouldCallDryRun) {\n            this.handleNativeCommitDryRun();\n        }\n    }\n\n    componentDidUpdate() {\n        this.handleNativeCommitDryRun();\n    }\n\n    componentWillUnmount() {\n        this.shouldCallDryRun = false;\n    }\n\n    handleNativeCommitDryRun() {\n        const {\n            onNativeCommitDryRun,\n            thIsBusy,\n            th,\n        } = this.props;\n        if (this.shouldCallDryRun\n            && !thIsBusy\n            && th) {\n            this.shouldCallDryRun = false;\n            onNativeCommitDryRun(th);\n        }\n    }\n\n    render() {\n        const { thIsBusy, nativeResult } = this.props;\n        const { device: devices } = nativeResult;\n\n        if (thIsBusy) {\n            return loader;\n        }\n\n        return (\n            <div data-handle=\"NativeCommitDryRunContainer\">\n                <NativeCommitDryRunTab devices={devices} />\n            </div>\n        );\n    }\n}\n\nNativeCommitDryRunTabContainer.defaultProps = {\n    nativeResult: {},\n};\n\nNativeCommitDryRunTabContainer.propTypes = {\n    nativeResult: PropTypes.oneOfType([\n        PropTypes.shape(Object),\n    ]),\n    onNativeCommitDryRun: PropTypes.func,\n    thIsBusy: PropTypes.bool,\n    th: PropTypes.number,\n    emptyTransaction: PropTypes.bool,\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onNativeCommitDryRun(th) {\n        dispatch(nativeCommitDryRun(th));\n    },\n});\n\nconst mapStateToProps = state => ({\n    nativeResult: selectNativeCommitDryRunResult(state),\n    thIsBusy: selectThIsBusy(state),\n    th: selectReadWrite(state),\n    emptyTransaction: transactionIsEmpty(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(NativeCommitDryRunTabContainer);\n\nexport {\n    NativeCommitDryRunTabContainer as _NativeCommitDryRunTabContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DataContainer from 'Common/Components/ConfigRender/DataContainer';\nimport { getTruncatedPaths } from '@webui-one/core/keypath/kp-parser';\nimport { CONFIGURATION_EDITOR_NAME } from 'ConfigurationEditor/defines';\nimport { getLinkWithPath } from 'ConfigurationEditor/utils';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport Link from '@webui-one/components/Link';\nimport { getParentPath } from '@webui-one/core/utils/path';\nimport breadcrumbStyles from '@webui-one/components/Breadcrumb/BreadcrumbStyles';\nimport {\n    renderHeader,\n    renderBody,\n} from './Common';\nimport {\n    isEmpty,\n    isObject,\n} from '@webui-one/core/utils/object';\nimport {\n    isNonEmptyArray,\n} from '@webui-one/core/utils/array';\nimport style, {\n    warningStyles,\n} from './CommitManagerStyles';\n\nconst renderErrorHeader = (index, numErrors, reason) =>\n    <p style={warningStyles.errorHeader} data-handle=\"error-header\">{`${index + 1}/${numErrors}. ${reason}`}</p>;\n\nconst renderError = disableDataContainer => (error, index, arr) => {\n    const { paths, schema } = error;\n    if (!paths) {\n        return (\n            <div key={index}>\n                {renderErrorHeader(index, arr.length, error.reason)}\n            </div>\n        );\n    }\n    const newPaths = arr.reduce((acc, e) => (e.paths ? [...acc, ...e.paths] : acc), []);\n    const truncatedPaths = getTruncatedPaths(newPaths);\n    let contextLink;\n    if (!disableDataContainer\n        && schema\n        && schema.data\n        && (schema.data.kind === 'leaf'\n            || schema.data.kind === 'key')\n    ) {\n        contextLink = (\n            <Link\n                style={breadcrumbStyles.link}\n                to={getLinkWithPath(getParentPath(error.path))}\n            >\n                {`${getParentPath(error.path)}/`}\n            </Link>\n        );\n    }\n    return (\n        <div style={warningStyles.page} key={index}>\n            { paths && paths.map((path, ix) => (\n                <div key={ix} style={warningStyles.errorWrapper}>\n                    {renderErrorHeader(index, arr.length, `.../${truncatedPaths[path]} ${error.reason}`)}\n                    <div>\n                        { contextLink }\n                        { !disableDataContainer && (\n                            <DataContainer\n                                applicationName={CONFIGURATION_EDITOR_NAME}\n                                hideIndicators\n                                hideContainers\n                                hideLists\n                                includeSubfolders\n                                showEmpty\n                                showConfig\n                                isEditMode\n                                key={ix}\n                                path={path}\n                            />\n                        )}\n                    </div>\n                </div>\n            ),\n        )}\n        </div>\n    );\n};\n\nconst renderErrors = (error, disableDataContainer) => {\n    if (!error.data) return null;\n    if (!error.data.errors) return null;\n    return error.data.errors.map(renderError(disableDataContainer));\n};\n\nconst renderErrorMessage = (error) => {\n    if (!error.message) return null;\n    return <p style={warningStyles.messageContainer} data-handle=\"error\" >{error.message}</p>;\n};\n\nconst renderErrorDataMessage = (error) => {\n    if (!error.data) return null;\n    if (!error.data.message) return null;\n    return (\n        <p style={warningStyles.container} data-handle=\"errorMessage\" >\n            {`${error.data.message}`}\n        </p>\n    );\n};\n\nconst renderConflicts = (conflicts) => {\n    if (!isNonEmptyArray(conflicts)) return null;\n\n    return (\n        <div>\n            <table style={style.table}>\n                {renderHeader()}\n                {renderBody(conflicts)}\n            </table>\n        </div>\n    );\n};\n\nconst WarningsTab = ({\n    error,\n    conflicts,\n    onRevalidateTrans,\n    onResolveConflicts,\n    disableRevalidateButton,\n    disableDataContainer,\n    emptyMessage,\n}) => {\n    const disabled = !!disableRevalidateButton;\n    if (!isObject(error) || isEmpty(error)) {\n        return <div style={warningStyles.message}>{emptyMessage}</div>;\n    }\n\n    return (\n        <div>\n            {renderErrorMessage(error)}\n            <div style={warningStyles.revalidateContainer}>\n                {renderErrorDataMessage(error)}\n                <button\n                    type=\"button\"\n                    disabled={disabled}\n                    style={{ ...defaultStyles.button, ...warningStyles.reValidateButton }}\n                    onClick={onRevalidateTrans}\n                    data-handle=\"revalidate\"\n                >\n                    Re-validate\n                </button>\n                {\n                isNonEmptyArray(conflicts) && (\n                    <button\n                        type=\"button\"\n                        disabled={disabled}\n                        style={defaultStyles.button}\n                        onClick={onResolveConflicts}\n                        data-handle=\"resolve-conflicts\"\n                    >\n                        Resolve Transaction\n                    </button>\n                )\n            }\n            </div>\n            <div style={style.warningsContainer}>\n                {renderErrors(error, disableDataContainer)}\n                {renderConflicts(conflicts)}\n            </div>\n        </div>\n    );\n};\n\nWarningsTab.defaultProps = {\n    disableDataContainer: false,\n    error: undefined,\n    emptyMessage: 'No warnings',\n};\n\nWarningsTab.propTypes = {\n    disableDataContainer: PropTypes.bool,\n    disableRevalidateButton: PropTypes.bool,\n    conflicts: PropTypes.arrayOf(PropTypes.shape()),\n    emptyMessage: PropTypes.string,\n    error: PropTypes.shape({\n        type: PropTypes.string,\n        message: PropTypes.string,\n        errors: PropTypes.arrayOf(\n            PropTypes.shape({\n                reason: PropTypes.string,\n                paths: PropTypes.arrayOf(PropTypes.string),\n            }),\n        ),\n    }),\n    onRevalidateTrans: PropTypes.func,\n    onResolveConflicts: PropTypes.func,\n};\n\nexport default WarningsTab;\n\nexport {\n    WarningsTab as _WarningsTab,\n    renderErrors as _renderErrors,\n    renderErrorMessage as _renderErrorMessage,\n    renderErrorDataMessage as _renderErrorDataMessage,\n    renderError as _renderError,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { translate, Messages } from 'modules/intl';\nimport style from './CommitButtonStyles';\n\nconst CommitButton = ({ commitInProgress, enableCommit, onCommit, shouldShowDone }) => (\n    <div style={style.wrapper}>\n        <button\n            type=\"button\"\n            disabled={!enableCommit}\n            style={enableCommit ? defaultStyles.button : defaultStyles.buttonDisabled}\n            onClick={onCommit}\n            data-handle=\"commitButton\"\n        >\n            <div style={style.label}>\n                {(shouldShowDone || !commitInProgress) && (\n                    <div>\n                        {shouldShowDone\n                                ? translate(Messages.COMMITMANAGER.COMMIT_BUTTON_DONE)\n                                : translate(Messages.COMMITMANAGER.COMMIT_BUTTON_COMMIT)\n                        }\n                    </div>\n                )}\n                {commitInProgress && (\n                    <div style={style.loader}>\n                        <Loader color={defaultStyles.color3} />\n                    </div>\n                )}\n            </div>\n        </button>\n    </div>\n);\n\nCommitButton.propTypes = {\n    commitInProgress: PropTypes.bool,\n    shouldShowDone: PropTypes.bool,\n    enableCommit: PropTypes.bool,\n    onCommit: PropTypes.func.isRequired,\n};\n\nexport default CommitButton;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { validateAndCommit } from 'modules/transactions/actions';\nimport PropTypes from 'prop-types';\nimport {\n    selectCommitInProgress,\n    selectCommitOptions,\n    selectReadWrite,\n    selectThIsBusy,\n    selectValidationStatus,\n    transactionIsEmpty,\n} from 'modules/transactions/selectors';\nimport CommitButton from './CommitButton';\nimport CommitDialog from './CommitDialog';\nimport { CommitOptionsType } from './CommitOptions';\n\nconst DONE_MESSAGE_TIMEOUT = 5000;\n\nconst commitIsDone = (prevProps, props) => (\n    prevProps.commitInProgress === true && !props.commitInProgress\n);\n\nclass CommitButtonContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleIgnoreWarnings = this.toggleIgnoreWarnings.bind(this);\n        this.labelTimeout = null;\n        this.state = {\n            shouldIgnoreWarnings: false,\n            shouldShowDone: false,\n            shouldShowDialog: false,\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if (commitIsDone(prevProps, this.props)) {\n            this.showDoneLabel(DONE_MESSAGE_TIMEOUT);\n            this.hideDialog();\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.labelTimeout);\n        this.labelTimeout = null;\n    }\n\n    showDoneLabel(msecs) {\n        this.setState({ shouldShowDone: true });\n        this.labelTimeout = setTimeout(() => {\n            this.hideDoneLabel();\n        }, msecs);\n    }\n\n    hideDoneLabel() {\n        this.setState({ shouldShowDone: false });\n    }\n\n    showDialog() {\n        this.setState({ shouldShowDialog: true });\n    }\n\n    hideDialog() {\n        this.setState({ shouldShowDialog: false });\n    }\n\n    parseCommitFlags() {\n        const { commitOptions } = this.props;\n        let activeOptions = Object.keys(commitOptions).filter(\n            key => !!commitOptions[key]);\n        if (!commitOptions['commit-queue']) {\n            activeOptions = activeOptions.filter(\n                option => !option.startsWith('commit-queue'),\n            );\n        }\n        return activeOptions.map((key) => {\n            const value = commitOptions[key];\n            return typeof value === 'string' ? `${key}=${value}` : key;\n        });\n    }\n\n    toggleIgnoreWarnings() {\n        const { shouldIgnoreWarnings } = this.state;\n        this.setState({ shouldIgnoreWarnings: !shouldIgnoreWarnings });\n    }\n\n    render() {\n        const {\n            commitInProgress,\n            emptyTransaction,\n            thIsBusy,\n            th,\n            onCommit,\n            validationStatus,\n        } = this.props;\n        const {\n            shouldIgnoreWarnings,\n            shouldShowDialog,\n        } = this.state;\n        const enableCommit = Number.isFinite(th)\n            && !emptyTransaction\n            && !thIsBusy\n            && !commitInProgress;\n        const { shouldShowDone } = this.state;\n\n        const isOkToCommit = !commitInProgress && (!validationStatus || shouldIgnoreWarnings);\n\n        return (\n            <div>\n                <CommitButton\n                    commitInProgress={commitInProgress}\n                    shouldShowDone={shouldShowDone}\n                    enableCommit={enableCommit}\n                    onCommit={() => this.showDialog()}\n                />\n                {shouldShowDialog && (\n                    <CommitDialog\n                        ignoreWarnings={shouldIgnoreWarnings}\n                        onToggleIgnoreWarnings={this.toggleIgnoreWarnings}\n                        isOkToCommit={isOkToCommit}\n                        onCommit={() => {\n                            this.hideDialog();\n                            onCommit(th, this.parseCommitFlags());\n                        }}\n                        onCancel={() => this.hideDialog()}\n                        validationStatus={validationStatus}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nCommitButtonContainer.defaultProps = {\n    commitInProgress: undefined,\n    commitOptions: {},\n    emptyTransaction: undefined,\n    thIsBusy: undefined,\n    extraStyles: {},\n    th: undefined,\n};\n\nCommitButtonContainer.propTypes = {\n    commitInProgress: PropTypes.bool,\n    commitOptions: CommitOptionsType,\n    emptyTransaction: PropTypes.bool,\n    thIsBusy: PropTypes.bool,\n    onCommit: PropTypes.func,\n    th: PropTypes.number,\n    validationStatus: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    commitInProgress: selectCommitInProgress(state),\n    commitOptions: selectCommitOptions(state),\n    emptyTransaction: transactionIsEmpty(state),\n    thIsBusy: selectThIsBusy(state),\n    th: selectReadWrite(state),\n    validationStatus: selectValidationStatus(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onCommit(th, flags) {\n        dispatch(validateAndCommit({ th, flags }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitButtonContainer);\n\nexport {\n    CommitButtonContainer as _CommitButtonContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    DONE_MESSAGE_TIMEOUT as _DONE_MESSAGE_TIMEOUT,\n};\n","export default {\n    label: {\n        width: '4rem',\n    },\n    loader: {\n        transform: 'scale(0.5)',\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport ModalConfirm from '@webui-one/components/Modal/ModalConfirm';\nimport style from './CommitDialogStyles';\nimport CommitOptionsContainer from './CommitOptionsContainer';\nimport IgnoreWarnings from './IgnoreWarnings';\n\nconst CommitDialog = ({\n    commitInProgress,\n    isOkToCommit,\n    ignoreWarnings,\n    onCancel,\n    onCommit,\n    onToggleIgnoreWarnings,\n    validationStatus,\n}) => (\n    <ModalConfirm\n        confirmTitle=\"Yes, commit\"\n        onConfirm={onCommit}\n        onCancel={onCancel}\n        formIsValid={isOkToCommit}\n    >\n        <div style={style.header}>Commit changes to NSO?</div>\n        {commitInProgress || <CommitOptionsContainer />}\n        {validationStatus && (\n            <IgnoreWarnings\n                ignoreWarnings={ignoreWarnings}\n                onToggleIgnoreWarnings={onToggleIgnoreWarnings}\n                validationStatus={validationStatus}\n            />\n        )}\n        {commitInProgress && <Loader />}\n    </ModalConfirm>\n);\n\nCommitDialog.propTypes = {\n    commitInProgress: PropTypes.bool,\n    ignoreWarnings: PropTypes.bool,\n    isOkToCommit: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onCommit: PropTypes.func.isRequired,\n    onToggleIgnoreWarnings: PropTypes.func,\n    validationStatus: PropTypes.string,\n};\n\nexport default CommitDialog;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    header: {\n        fontSize: defaultStyles.large1,\n        textAlign: 'center',\n        marginBottom: '1rem',\n    },\n    editButton: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        marginLeft: '1rem',\n        padding: '0',\n        width: '1.5rem',\n    },\n    frame: {\n        fontSize: defaultStyles.medium1,\n    },\n    topRow: {\n        display: 'flex',\n        justifyContent: 'space-Between',\n        marginBottom: '1rem',\n        fontSize: defaultStyles.medium2,\n    },\n    optionsBox: {\n        backgroundColor: defaultStyles.color11,\n        padding: '0.5rem',\n        border: `1px solid ${defaultStyles.color7}`,\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'space-Between',\n        padding: '0.25rem 0',\n    },\n    inputWrapper: {\n        width: '5.5rem',\n    },\n    name: {\n        alignSelf: 'center',\n    },\n    queueOptionsWrapper: {\n        paddingLeft: '0.65rem',\n        borderLeft: `1px solid ${defaultStyles.color7}`,\n        marginLeft: '0.35rem',\n    },\n    ignoreContainer: {\n        fontSize: '0.75rem',\n        marginBottom: '0.5rem',\n        marginTop: '1rem',\n    },\n    ignoreDescription: {\n        alignSelf: 'center',\n        fontSize: '0.875rem',\n        marginBottom: '0.5rem',\n    },\n    ignoreLabel: {\n        alignSelf: 'center',\n        cursor: 'pointer',\n        marginLeft: '0.5rem',\n    },\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './CommitDialogStyles';\nimport CheckBox from '@webui-one/components/ConfigRender/CheckBox/CheckBox';\nimport Input from '@webui-one/components/ConfigRender/Input/Input';\nimport Select from '@webui-one/components/ConfigRender/Select/Select';\n\nconst renderName = (isConfigMode, name, value) => (isConfigMode ? `${name}` : `${name}: ${value}`);\n\nconst CommitOption = ({\n    isConfigMode,\n    onSetCommmitOption,\n    option,\n}) => {\n    const {\n        formatOption,\n        id,\n        name,\n        selectOptions,\n        selectOptionsInfo,\n        type,\n        value,\n    } = option;\n\n    const onSetValue = useCallback(v => onSetCommmitOption(id, v), [id, onSetCommmitOption]);\n\n    if (isConfigMode || value) {\n        if (type === 'checkbox') {\n            return (\n                <div data-handle={id} style={style.row}>\n                    <div style={style.name}>{name}</div>\n                    {isConfigMode && (\n                        <CheckBox\n                            value={!!value}\n                            onSetValue={onSetValue}\n                        />\n                    )}\n                </div>\n            );\n        }\n        if (type === 'select') {\n            return (\n                <div data-handle={id} style={style.row}>\n                    <div style={style.name}>{renderName(isConfigMode, name, value)}</div>\n                    {isConfigMode && (\n                        <Select\n                            options={selectOptions}\n                            optionsInfo={selectOptionsInfo}\n                            formatOption={formatOption}\n                            onSetValue={onSetValue}\n                            value={value}\n                        />\n                    )}\n                </div>\n            );\n        }\n        if (type === 'input') {\n            return (\n                <div data-handle={id} style={style.row} onKeyDown={e => e.stopPropagation()} role=\"none\">\n                    <div style={style.name}>{renderName(isConfigMode, name, value)}</div>\n                    <div style={style.inputWrapper}>\n                        {isConfigMode && (\n                            <Input\n                                editable\n                                onSetValue={onSetValue}\n                                value={value}\n                            />\n                        )}\n                    </div>\n                </div>\n            );\n        }\n    }\n    return null;\n};\n\nCommitOption.propTypes = {\n    isConfigMode: PropTypes.bool,\n    onSetCommmitOption: PropTypes.func,\n    option: PropTypes.shape({\n        formatOption: PropTypes.func,\n        id: PropTypes.string,\n        name: PropTypes.string,\n        selectOptions: PropTypes.arrayOf(PropTypes.string),\n        selectOptionsInfo: PropTypes.arrayOf(PropTypes.string),\n        type: PropTypes.string,\n        value: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.string,\n        ]),\n    }),\n};\n\nexport default CommitOption;\n","export const COMMIT_OPTION_CONSTANTS = [\n    {\n        id: 'no-revision-drop',\n        name: 'No revision drop',\n        type: 'checkbox',\n    },\n    {\n        id: 'no-deploy',\n        name: 'No deploy',\n        type: 'checkbox',\n    },\n    {\n        id: 'no-networking',\n        name: 'No networking',\n        type: 'checkbox',\n    },\n    {\n        id: 'no-out-of-sync-check',\n        name: 'No out of sync check',\n        type: 'checkbox',\n    },\n    {\n        id: 'no-overwrite',\n        name: 'No overwrite',\n        type: 'checkbox',\n    },\n    {\n        id: 'use-lsa',\n        name: 'Use LSA',\n        type: 'checkbox',\n    },\n    {\n        id: 'no-lsa',\n        name: 'No LSA',\n        type: 'checkbox',\n    },\n    {\n        id: 'commit-queue',\n        name: 'Commit queue',\n        type: 'select',\n        selectOptions: ['', 'async', 'sync', 'bypass'],\n    },\n];\n\nexport const COMMIT_QUEUE_OPTION_CONSTANTS = [\n    {\n        id: 'commit-queue-atomic',\n        name: 'Atomic',\n        type: 'select',\n        selectOptions: ['', 'true', 'false'],\n    },\n    {\n        id: 'commit-queue-block-others',\n        name: 'Block others',\n        type: 'checkbox',\n    },\n    {\n        id: 'commit-queue-lock',\n        name: 'Lock',\n        type: 'checkbox',\n    },\n    {\n        id: 'commit-queue-tag',\n        name: 'Tag',\n        type: 'input',\n    },\n    {\n        id: 'commit-queue-timeout',\n        name: 'Timeout',\n        type: 'input',\n    },\n    {\n        id: 'commit-queue-error-option',\n        name: 'Error option',\n        type: 'select',\n        selectOptions: ['', 'continue-on-error', 'rollback-on-error', 'stop-on-error'],\n        selectOptionsInfo: ['', 'continue', 'rollback', 'stop'],\n        formatOption: (val, info) => info,\n    },\n];\n","import PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\nimport EditSymbol from '@webui-one/styles/static/EditSymbol';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport style from './CommitDialogStyles';\nimport { COMMIT_OPTION_CONSTANTS, COMMIT_QUEUE_OPTION_CONSTANTS } from './CommitOptionConstants';\nimport CommitOption from './CommitOption';\n\nconst mapValues = (options, values) => options.map((option) => {\n    const { id } = option;\n    return {\n        ...option,\n        value: values[id],\n    };\n});\n\nconst renderOptions = (options, isConfigMode, onSetCommmitOption) => options.map(option => (\n    <CommitOption\n        key={option.id}\n        isConfigMode={isConfigMode}\n        onSetCommmitOption={onSetCommmitOption}\n        option={option}\n    />\n));\n\nconst CommitOptions = ({ commitOptionValues, onSetCommmitOption }) => {\n    const [isConfigMode, setIsConfigMode] = useState(false);\n\n    const { 'commit-queue': commitQueue } = commitOptionValues;\n\n    const commitOptions = mapValues(COMMIT_OPTION_CONSTANTS, commitOptionValues);\n\n    const commitQueueOptions = mapValues(COMMIT_QUEUE_OPTION_CONSTANTS, commitOptionValues);\n\n    const hasOption = commitOptions.some(({ value }) => value);\n\n    const onClick = useCallback(() => setIsConfigMode(prev => !prev), []);\n\n    return (\n        <div style={style.frame}>\n            <div style={style.topRow}>\n                <div style={style.name}>\n                    {(isConfigMode || hasOption)\n                        ? 'Commit options:'\n                        : 'No commit options set'\n                    }\n                </div>\n                <button\n                    type=\"button\"\n                    data-handle=\"penButton\"\n                    onClick={onClick}\n                    style={style.editButton}\n                >\n                    <EditSymbol color={defaultStyles.color1} active={isConfigMode} />\n                </button>\n            </div>\n            {(isConfigMode || hasOption) && (\n                <div style={style.optionsBox}>\n                    {renderOptions(commitOptions, isConfigMode, onSetCommmitOption)}\n                    {(commitQueue && commitQueue !== 'bypass') && (\n                        <div style={style.queueOptionsWrapper}>\n                            {renderOptions(commitQueueOptions, isConfigMode, onSetCommmitOption)}\n                        </div>\n                  )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nCommitOptions.defaultProps = {\n    commitOptionValues: {},\n    onSetCommmitOption: () => null,\n};\n\nexport const CommitOptionsType = PropTypes.shape({\n    'commit-queue-atomic': PropTypes.boolean,\n    'commit-queue-block-others': PropTypes.boolean,\n    'commit-queue': PropTypes.boolean,\n    'commit-queue-error-option': PropTypes.string,\n    'commit-queue-lock': PropTypes.boolean,\n    'commit-queue-tag': PropTypes.string,\n    'commit-queue-timeout': PropTypes.string,\n    'no-deploy': PropTypes.boolean,\n    'no-lsa': PropTypes.boolean,\n    'no-networking': PropTypes.boolean,\n    'no-out-of-sync-check': PropTypes.boolean,\n    'no-overwrite': PropTypes.boolean,\n    'no-revision-drop': PropTypes.boolean,\n    'use-lsa': PropTypes.boolean,\n});\n\nCommitOptions.propTypes = {\n    commitOptionValues: CommitOptionsType,\n    onSetCommmitOption: PropTypes.func,\n};\n\n\nexport default CommitOptions;\n","import { connect } from 'react-redux';\nimport { setCommmitOptionsAction } from 'modules/transactions/actions';\nimport { selectCommitOptions } from 'modules/transactions/selectors';\nimport CommitOptions from './CommitOptions';\n\nconst mapStateToProps = state => ({ commitOptionValues: selectCommitOptions(state) });\n\nconst mapDispatchToProps = dispatch => ({\n    onSetCommmitOption(commitOption, value) {\n        dispatch(setCommmitOptionsAction(commitOption, value));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CommitOptions);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport NotificationBar, { BAR_TYPES } from '@webui-one/components/Notification/NotificationBar';\n\nconst getMsg = (status, timestamp, rollbackId) => {\n    const time = new Date(timestamp).toLocaleTimeString();\n\n    if (status === 'started') {\n        return `Commit started at ${time}`;\n    }\n    if (status === 'finished') {\n        return `Commit finished successfully at ${time} with rollback id ${rollbackId}`;\n    }\n    if (status === 'failed') {\n        return `Commit failed at ${time}`;\n    }\n    return null;\n};\n\nconst displayTime = 5000;\n\nconst CommitStatusBar = ({\n    commitCompleteTime,\n    commitFailTime,\n    commitInProgress,\n    commitStartTime,\n    rollbackId,\n}) => {\n    const [notificationMsg, setNotificationMsg] = useState(null);\n    const [alarmMsg, setAlarmMsg] = useState(null);\n    useEffect(() => {\n        if (commitInProgress) {\n            setNotificationMsg(getMsg('started', commitStartTime));\n        } else if (commitFailTime) {\n            setNotificationMsg(null);\n            setAlarmMsg(getMsg('failed', commitFailTime));\n            const timeoutId = setTimeout(() => {\n                setAlarmMsg(null);\n            }, displayTime);\n            return () => clearTimeout(timeoutId);\n        } else if (commitCompleteTime && Date.now() - commitCompleteTime <= displayTime) {\n            setNotificationMsg(getMsg('finished', commitCompleteTime, rollbackId));\n            const timeoutId = setTimeout(() => {\n                setNotificationMsg(null);\n            }, displayTime);\n            return () => clearTimeout(timeoutId);\n        } else {\n            setNotificationMsg(null);\n            setAlarmMsg(null);\n        }\n        return () => null;\n    }, [commitInProgress, commitFailTime, commitCompleteTime, commitStartTime, rollbackId]);\n\n    return (\n        <>\n            <NotificationBar message={notificationMsg} />\n            <NotificationBar message={alarmMsg} type={BAR_TYPES.ALARM} />\n        </>\n    );\n};\n\nCommitStatusBar.propTypes = {\n    commitInProgress: PropTypes.bool,\n    commitStartTime: PropTypes.number,\n    commitFailTime: PropTypes.number,\n    commitCompleteTime: PropTypes.number,\n    rollbackId: PropTypes.number,\n};\nexport default CommitStatusBar;\n\n","import { connect } from 'react-redux';\nimport {\n    selectCommitInProgress,\n    selectCommitFailTime,\n    selectCommitStartTime,\n    selectCommitCompleteTime,\n    selectRollbackId,\n} from 'modules/transactions/selectors';\nimport CommitStatusBar from './CommitStatusBar';\n\nconst mapStateToProps = state => ({\n    commitCompleteTime: selectCommitCompleteTime(state),\n    commitFailTime: selectCommitFailTime(state),\n    commitInProgress: selectCommitInProgress(state),\n    commitStartTime: selectCommitStartTime(state),\n    rollbackId: selectRollbackId(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    null,\n)(CommitStatusBar);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport CheckBox from '@webui-one/components/ConfigRender/CheckBox/CheckBox';\nimport style from './CommitDialogStyles';\n\nconst IgnoreWarnings = ({\n    ignoreWarnings,\n    onToggleIgnoreWarnings,\n    validationStatus,\n}) => (\n    <div style={style.ignoreContainer}>\n        <div style={style.ignoreDescription}>\n            {`This transaction contains ${validationStatus}.`}\n        </div>\n        <CheckBox\n            name=\"ignore-commit-warnings\"\n            onSetValue={onToggleIgnoreWarnings}\n            value={ignoreWarnings}\n        >\n            <span style={style.ignoreLabel}>\n                {`Ignore ${validationStatus}`}\n            </span>\n        </CheckBox>\n    </div>\n);\n\n\nIgnoreWarnings.defaultProps = {\n    ignoreWarnings: undefined,\n    onToggleIgnoreWarnings: () => null,\n    validationStatus: '',\n};\n\nIgnoreWarnings.propTypes = {\n    ignoreWarnings: PropTypes.bool,\n    onToggleIgnoreWarnings: PropTypes.func,\n    validationStatus: PropTypes.string,\n};\n\n\nexport default IgnoreWarnings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModalConfirm from '@webui-one/components/Modal/ModalConfirm';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport TabDeck from '@webui-one/components/TabDeck/TabDeck';\nimport { isString } from '@webui-one/core/utils/string';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { Messages, translate } from 'modules/intl';\nimport style from './LoadStyles';\n\nconst getConfirmButtonTitle = (pages, activePageIndex) => {\n    const customTitle = Array.isArray(pages) &&\n        pages[activePageIndex] &&\n        pages[activePageIndex].confirmButtonTitle;\n    return isString(customTitle)\n        ? customTitle\n        : translate(Messages.MODAL.LOAD_BUTTON_TITLE);\n};\n\nconst LoadButton = ({\n    activePageIndex,\n    closeModal,\n    enableModal,\n    enableLoadButton,\n    loadInProgress,\n    onChangeTab,\n    onLoad,\n    openModal,\n    showModal,\n    pages,\n}) => {\n    const confirmTitle = loadInProgress\n        ? (<Loader color={defaultStyles.color3} extraStyle={style.loadingDots} />)\n        : getConfirmButtonTitle(pages, activePageIndex);\n    return (\n        <div style={style.loadContainerStyle}>\n            <ModalConfirm\n                confirmTitle={confirmTitle}\n                title={translate(Messages.COMMITMANAGER.ROLLBACKBUTTON_DIALOG_TITLE)}\n                shouldRender={showModal}\n                onConfirm={onLoad}\n                formIsValid={!!enableLoadButton}\n                onCancel={closeModal}\n            >\n                <TabDeck\n                    extraStyle={style.tabDeck}\n                    onChangeTab={onChangeTab}\n                    tabs={pages}\n                    defaultIndex={activePageIndex}\n                />\n            </ModalConfirm>\n            <button\n                type=\"button\"\n                data-handle=\"show-load-save-modal-button\"\n                disabled={!enableModal}\n                style={defaultStyles.button2}\n                onClick={openModal}\n            >\n                Load/Save\n            </button>\n        </div>\n    );\n};\n\nLoadButton.propTypes = {\n    activePageIndex: PropTypes.number,\n    closeModal: PropTypes.func,\n    enableModal: PropTypes.bool,\n    enableLoadButton: PropTypes.bool,\n    loadInProgress: PropTypes.bool,\n    onChangeTab: PropTypes.func,\n    onLoad: PropTypes.func,\n    openModal: PropTypes.func,\n    pages: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n            page: PropTypes.element,\n        }),\n    ),\n    showModal: PropTypes.bool,\n};\n\nLoadButton.defaultProps = {\n    activePageIndex: 0,\n};\n\nexport default LoadButton;\n\nexport {\n    getConfirmButtonTitle as _getConfirmButtonTitle,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { isFunction } from '@webui-one/core/utils/functional';\nimport PropTypes from 'prop-types';\n\nimport {\n    selectLoadInProgress,\n} from 'modules/transactions/selectors';\nimport { Messages, translate } from 'modules/intl';\n\nimport LoadButton from './LoadButton';\nimport LoadFromPlainTextContainer from './LoadFromPlainTextContainer';\nimport LoadFromFileContainer from './LoadFromFileContainer';\nimport SaveToFileContainer from './SaveToFileContainer';\nimport RollbackContainer from './RollbackContainer';\n\nconst buildRollbacks = (registerLoad, setLoadButtonEnabled) => (\n    <RollbackContainer\n        registerLoad={registerLoad}\n        setLoadButtonEnabled={setLoadButtonEnabled}\n    />\n);\n\nconst buildFiles = (registerLoad, setLoadButtonEnabled) => (\n    <LoadFromFileContainer\n        registerLoad={registerLoad}\n        setLoadButtonEnabled={setLoadButtonEnabled}\n    />\n);\n\n\nconst buildText = (registerLoad, setLoadButtonEnabled) => (\n    <LoadFromPlainTextContainer\n        registerLoad={registerLoad}\n        setLoadButtonEnabled={setLoadButtonEnabled}\n    />\n);\n\nconst buildSave = (registerLoad, setLoadButtonEnabled) => (\n    <SaveToFileContainer\n        registerLoad={registerLoad}\n        setLoadButtonEnabled={setLoadButtonEnabled}\n    />\n);\n\nclass LoadButtonContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChangeTab = this.onChangeTab.bind(this);\n        this.onLoad = this.onLoad.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.registerLoad = this.registerLoad.bind(this);\n        this.setLoadButtonEnabled = this.setLoadButtonEnabled.bind(this);\n\n        this.state = {\n            activePageIndex: 0,\n            doLoad: null,\n            enableLoadButton: true,\n            showModal: false,\n        };\n    }\n\n    onLoad() {\n        const { doLoad } = this.state;\n        if (isFunction(doLoad)) {\n            this.setLoadButtonEnabled(false);\n            const prom = doLoad();\n            if (prom.then) {\n                return prom.then((res) => {\n                    if (!res || !res.error) {\n                        this.closeModal();\n                    }\n                    this.setLoadButtonEnabled(true);\n                });\n            }\n            this.closeModal();\n            this.setLoadButtonEnabled(true);\n        }\n        return Promise.resolve();\n    }\n\n    onChangeTab(activePageIndex) {\n        this.setState({ activePageIndex });\n    }\n\n    setLoadButtonEnabled(bool) {\n        this.setState({ enableLoadButton: bool });\n    }\n\n    closeModal() {\n        this.setState({ showModal: false });\n    }\n\n    openModal() {\n        this.setState({ showModal: true });\n    }\n\n    registerLoad(doLoad) {\n        this.setState({ doLoad });\n    }\n\n    buildPages() {\n        if (!this.pages) {\n            this.pages = [\n                {\n                    name: 'rollbacks',\n                    page: buildRollbacks(this.registerLoad, this.setLoadButtonEnabled),\n                    tab: 'Rollbacks',\n                },\n                {\n                    name: 'files',\n                    page: buildFiles(\n                        this.registerLoad,\n                        this.setLoadButtonEnabled,\n                    ),\n                    tab: 'Files',\n                },\n                {\n                    name: 'paste',\n                    page: buildText(\n                        this.registerLoad,\n                        this.setLoadButtonEnabled,\n                    ),\n                    tab: 'Paste',\n                },\n                {\n                    confirmButtonTitle: translate(Messages.MODAL.OK_BUTTON_TITLE),\n                    name: 'save',\n                    page: buildSave(\n                        this.registerLoad,\n                        this.setLoadButtonEnabled,\n                    ),\n                    tab: 'Save',\n                },\n            ];\n        }\n        return this.pages;\n    }\n\n    render() {\n        const {\n            loadInProgress,\n        } = this.props;\n        const {\n            activePageIndex,\n            enableLoadButton,\n            showModal,\n        } = this.state;\n        const pages = this.buildPages();\n        const enable = !!enableLoadButton && !loadInProgress;\n        return (\n            <LoadButton\n                activePageIndex={activePageIndex}\n                closeModal={this.closeModal}\n                enableModal\n                enableLoadButton={enable}\n                loadInProgress={loadInProgress}\n                onChangeTab={this.onChangeTab}\n                onLoad={this.onLoad}\n                openModal={this.openModal}\n                pages={pages}\n                showModal={showModal}\n            />\n        );\n    }\n}\n\nLoadButtonContainer.propTypes = {\n    loadInProgress: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n    loadInProgress: selectLoadInProgress(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    undefined,\n)(LoadButtonContainer);\n\nexport {\n    mapStateToProps as _mapStateToProps,\n    LoadButtonContainer as _LoadButtonContainer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { translate, Messages } from 'modules/intl';\nimport styles from './LoadStyles';\n\nconst renderFiles = (selectedFiles) => {\n    if (!Array.isArray(selectedFiles) || selectedFiles.length < 1) {\n        return null;\n    }\n    return (\n        <div data-handle=\"selected-files\" style={styles.selectedFilesStyle}>\n            {selectedFiles.map((filename, index) => (\n                <div key={`${index}`}>{filename}</div>\n            ))}\n        </div>\n    );\n};\n\nclass LoadFromFile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        this.fi.click();\n    }\n\n    render() {\n        const { errorText, selectedFiles, onChange, previewText } = this.props;\n        return (\n            <div style={styles.container}>\n                <div style={styles.fileUpload}>\n                    <button\n                        type=\"button\"\n                        data-handle=\"load-from-file-selector\"\n                        onClick={this.onClick}\n                        style={defaultStyles.button}\n                    >\n                        {translate(Messages.COMMITMANAGER.CHOOSE_FILE_BUTTON_TITLE)}\n                    </button>\n                    <input\n                        style={styles.fileSelector}\n                        onChange={onChange}\n                        ref={(r) => { this.fi = r; }}\n                        type=\"file\"\n                    />\n                </div>\n                {renderFiles(selectedFiles)}\n                <div style={styles.previewTextAreaContainer}>\n                    <textarea\n                        disabled\n                        rows=\"5\"\n                        onChange={onChange}\n                        style={styles.textAreaStyle}\n                        value={previewText}\n                    />\n                </div>\n                {errorText && (\n                    <div\n                        data-handle=\"load-from-file-error-text\"\n                        style={styles.errorMessage}\n                    >\n                        { errorText }\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default LoadFromFile;\nLoadFromFile.propTypes = {\n    errorText: PropTypes.string,\n    onChange: PropTypes.func,\n    previewText: PropTypes.string,\n    selectedFiles: PropTypes.arrayOf(PropTypes.string),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { isFunction } from '@webui-one/core/utils/functional';\nimport { isNonEmptyString } from '@webui-one/core/utils/string';\nimport { translate, Messages } from 'modules/intl';\n\nimport { loadFile } from 'modules/transactions/actions';\nimport { selectLoadFromFileError } from 'modules/transactions/selectors';\n\nimport LoadFromFile from './LoadFromFile';\n\n// NOTE(dbildstr): only allow preview of 5 MiB big files for now\nconst MAX_PREVIEW_SIZE = 5 * 1024 * 1024;\n\nconst hasFiles = files => !!(Array.isArray(files) && files.length > 0);\n\nconst getExtensionFromFilename = (file) => {\n    const match = /^(.*)\\.(.*)$/.exec(file.name);\n    return match && match.length > 2 ? match[2] : 'txt';\n};\n\nconst getSelectedFiles = files => (\n    hasFiles(files) ? Array.prototype.map.call(files, f => f.name) : []\n);\n\nconst browserSupportsFileAPI = () => isFunction(FileReader);\n\nclass LoadFromFileContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.doLoad = this.doLoad.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.files = [];\n\n        this.state = {\n            error: undefined,\n            previewText: '',\n            files: undefined,\n            format: 'xml',\n        };\n    }\n\n    componentDidMount() {\n        const { registerLoad, setLoadButtonEnabled } = this.props;\n        registerLoad(this.doLoad);\n        setLoadButtonEnabled(false);\n    }\n\n    onChange(evt) {\n        const { setLoadButtonEnabled } = this.props;\n        this.fi = evt.target;\n        this.files = Array.prototype.slice.call(this.fi.files);\n        this.setState({ files: getSelectedFiles(this.files) });\n        setLoadButtonEnabled(hasFiles(this.files));\n        this.updatePreview(this.files);\n    }\n\n    updatePreview(files) {\n        if (!hasFiles(files)) {\n            this.setState({\n                previewText: translate(\n                    Messages.COMMITMANAGER.PREVIEW_NO_ISSUES,\n                ),\n            });\n            return;\n        }\n        const theFile = files[0];\n\n        if (theFile.size > MAX_PREVIEW_SIZE) {\n            this.setState({\n                previewText: translate(\n                    Messages.COMMITMANAGER.PREVIEW_FILE_TO_BIG,\n                ),\n            });\n            return;\n        }\n\n        if (!browserSupportsFileAPI()) {\n            this.setState({\n                previewText: translate(\n                    Messages.COMMITMANAGER.PREVIEW_BROWSER_NOT_SUPPORTED,\n                ),\n            });\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.setState({ previewText: reader.result });\n        };\n        reader.onerror = () => {\n            this.setState({\n                previewText: translate(\n                    Messages.COMMITMANAGER.PREVIEW_FAILED_TO_READ_FILE,\n                ),\n            });\n        };\n        reader.readAsText(theFile);\n    }\n\n    doLoad() {\n        const { onLoadFile } = this.props;\n        this.setState({ loadFileError: null });\n        if (hasFiles(this.files)) {\n            return new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                const theFile = this.files[0];\n                const extension = getExtensionFromFilename(theFile);\n                reader.onload = () => {\n                    resolve({ result: reader.result, extension });\n                };\n                reader.onerror = error => reject(new Error(error));\n                reader.readAsBinaryString(theFile);\n            }).then(res => (\n                onLoadFile(res.result, res.extension)\n            )).catch((err) => {\n                this.setState({ loadFileError: err });\n                return { error: err };\n            });\n        }\n        return Promise.resolve();\n    }\n\n    render() {\n        const { loadFromFileError } = this.props;\n        const { loadFileError, files, previewText } = this.state;\n\n        let errorText;\n        if (loadFromFileError || loadFileError) {\n            if (isNonEmptyString(loadFromFileError)) {\n                errorText = loadFromFileError;\n            } else if (\n                loadFromFileError &&\n                loadFromFileError.data &&\n                loadFromFileError.data.message\n            ) {\n                errorText = loadFromFileError.data.message;\n            } else if (\n                loadFromFileError &&\n                loadFromFileError.data &&\n                loadFromFileError.data.reason\n            ) {\n                errorText = loadFromFileError.data.reason;\n            } else {\n                errorText = 'An error occurred';\n            }\n        }\n\n        return (\n            <LoadFromFile\n                onChange={this.onChange}\n                previewText={previewText}\n                selectedFiles={files}\n                errorText={errorText}\n            />\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onLoadFile(data, format) {\n        return dispatch(loadFile({ data, format }));\n    },\n});\n\nLoadFromFileContainer.propTypes = {\n    loadFromFileError: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]),\n    onLoadFile: PropTypes.func.isRequired,\n    registerLoad: PropTypes.func,\n    setLoadButtonEnabled: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n    loadFromFileError: selectLoadFromFileError(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(LoadFromFileContainer);\n\nexport {\n    MAX_PREVIEW_SIZE,\n    hasFiles as _hasFiles,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    LoadFromFileContainer as _LoadFromFileContainer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './LoadStyles';\n\nconst LoadFromPlainText = ({\n    errorText,\n    onBlur,\n    onChange,\n    value,\n}) => (\n    <div style={styles.container}>\n        <div style={styles.plainContainer}>\n            <div data-handle=\"transaction-data\" style={styles.textAreaContainer}>\n                <textarea\n                    rows=\"5\"\n                    onBlur={onBlur}\n                    onChange={onChange}\n                    placeholder=\"Paste your transaction data here.\"\n                    style={styles.textAreaStyle}\n                    value={value}\n                />\n            </div>\n        </div>\n        {errorText && (\n            <div data-handle=\"load-from-text-error-message\" style={styles.errorMessage}>\n                { errorText }\n            </div>\n        )}\n    </div>\n);\n\nLoadFromPlainText.propTypes = {\n    errorText: PropTypes.string,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n};\nexport default LoadFromPlainText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { isJson, isNonEmptyString, isXml } from '@webui-one/core/utils/string';\nimport { loadText } from 'modules/transactions/actions';\nimport { selectLoadFromTextError } from 'modules/transactions/selectors';\nimport LoadFromPlainText from './LoadFromPlainText';\n\nconst validFormats = ['json', 'xml'];\n\nconst isValidFormat = format => validFormats.includes(format);\nconst isValidString = str => isNonEmptyString(str);\nconst shouldEnableLoadButton = (format, value) => (\n    isValidFormat(format) && isValidString(value)\n);\n\nfunction guessFormat(value) {\n    if (isJson(value)) {\n        return 'json';\n    }\n    if (isXml(value)) {\n        return 'xml';\n    }\n    return '';\n}\n\nconst formatErrorMessage = 'Text is not valid JSON or XML.';\n\nclass LoadFromPlainTextContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.doLoad = this.doLoad.bind(this);\n        this.state = {\n            errorText: '',\n            format: '',\n            value: '',\n        };\n    }\n\n    componentDidMount() {\n        const { format, value } = this.state;\n        const { registerLoad, setLoadButtonEnabled } = this.props;\n        registerLoad(this.doLoad);\n        setLoadButtonEnabled(shouldEnableLoadButton(format, value));\n    }\n\n    componentDidUpdate(prevProps) {\n        const { loadFromTextError } = this.props;\n        const { loadFromTextError: prevError } = prevProps;\n        if (loadFromTextError && loadFromTextError !== prevError) {\n            let errorText;\n            if (isNonEmptyString(loadFromTextError)) {\n                errorText = loadFromTextError;\n            } else if (\n                loadFromTextError.data &&\n                loadFromTextError.data.message\n            ) {\n                errorText = loadFromTextError.data.message;\n            } else if (\n                loadFromTextError.data &&\n                loadFromTextError.data.reason\n            ) {\n                errorText = loadFromTextError.data.reason;\n            } else {\n                errorText = 'An error occurred';\n            }\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                errorText,\n            });\n        }\n    }\n\n    onBlur(e) {\n        const value = e.target.value;\n        const format = guessFormat(value);\n        const { setLoadButtonEnabled } = this.props;\n        const errorText = format !== '' ? '' : formatErrorMessage;\n        this.setState({ errorText, format, value });\n        setLoadButtonEnabled(true);\n        setLoadButtonEnabled(shouldEnableLoadButton(format, value));\n    }\n\n    onChange(e) {\n        const value = e.target.value;\n        this.setState({ value });\n    }\n\n    doLoad() {\n        const { onLoadText } = this.props;\n        const { format, value } = this.state;\n        if (shouldEnableLoadButton(format, value)) {\n            return onLoadText(value, format);\n        }\n        return Promise.resolve();\n    }\n\n    render() {\n        const { errorText, format, value } = this.state;\n        return (\n            <LoadFromPlainText\n                errorText={errorText}\n                format={format}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                value={value}\n            />\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onLoadText(data, format) {\n        return dispatch(loadText({ data, format }));\n    },\n});\n\nLoadFromPlainTextContainer.propTypes = {\n    loadFromTextError: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]),\n    onLoadText: PropTypes.func.isRequired,\n    registerLoad: PropTypes.func.isRequired,\n    setLoadButtonEnabled: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    loadFromTextError: selectLoadFromTextError(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(LoadFromPlainTextContainer);\n\nexport {\n    shouldEnableLoadButton,\n    formatErrorMessage,\n    isValidFormat,\n    isValidString,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    LoadFromPlainTextContainer as _LoadFromPlainTextContainer,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst textAreaContainer = {\n    display: 'flex',\n};\n\nexport default {\n    checkboxContainer: {\n        display: 'flex',\n        marginTop: '1rem',\n    },\n    container: {\n        minHeight: '12rem',\n        padding: '0.2rem',\n        minWidth: '35rem',\n\n    },\n    errorMessage: {\n        color: defaultStyles.color5,\n        fontSize: defaultStyles.medium1,\n        marginTop: '0.5rem',\n        ...defaultStyles.fontLight,\n    },\n    fileSelector: {\n        display: 'none',\n    },\n    fileUpload: {\n        display: 'flex',\n        marginTop: '1rem',\n    },\n    loadingDots: {\n        width: '0.3875rem',\n        height: '0.3875rem',\n        margin: '0 0.075rem',\n    },\n    plainContainer: {\n        marginTop: '1rem',\n    },\n    loadContainerStyle: {\n        position: 'relative',\n        alignSelf: 'center',\n        margin: '0 0.5rem',\n        display: 'flex',\n    },\n    selectedFilesStyle: {\n        marginTop: '1rem',\n        fontSize: defaultStyles.medium2,\n        ...defaultStyles.fontLight,\n    },\n    tabDeck: {\n        main: {\n            height: '100%',\n            padding: '1rem',\n            overflow: 'auto',\n        },\n    },\n    textAreaContainer,\n    previewTextAreaContainer: {\n        ...textAreaContainer,\n        marginTop: '1rem',\n    },\n    generateFileButton: {\n        ...defaultStyles.button,\n        width: '7.5rem',\n    },\n    generateFileButtonDisabled: {\n        ...defaultStyles.buttonDisabled,\n        width: '7.5rem',\n    },\n    textAreaStyle: {\n        fontFamily: defaultStyles.font3,\n        marginTop: '0.2rem',\n        overflow: 'auto',\n        padding: '0.5rem',\n        width: '100%',\n    },\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModalConfirm from '@webui-one/components/Modal/ModalConfirm';\nimport modalStyles from '@webui-one/components/Modal/ModalStyles';\nimport { Messages, translate } from 'modules/intl';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport style from './RevertButtonStyles';\n\nclass RevertButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.openModal = this.openModal.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.state = {\n            showModal: false,\n        };\n    }\n    onConfirm() {\n        const { th, onRevert } = this.props;\n        onRevert(th);\n    }\n\n    closeModal() {\n        this.setState({ showModal: false });\n    }\n\n    openModal() {\n        this.setState({ showModal: true });\n    }\n\n    render() {\n        const { enableRevert } = this.props;\n        const { showModal } = this.state;\n        return (\n            <div style={style.container}>\n                <ModalConfirm\n                    shouldRender={showModal}\n                    onConfirm={this.onConfirm}\n                    formIsValid\n                    onRequestClose={this.closeModal}\n                >\n                    <div style={modalStyles.header}>\n                        {translate(Messages.COMMITMANAGER.REVERTBUTTON_CONFIRM_TITLE)}\n                    </div>\n                    <div style={modalStyles.bread}>\n                        {translate(Messages.COMMITMANAGER.REVERTBUTTON_CONFIRM_BODY)}\n                    </div>\n                </ModalConfirm>\n                <button\n                    type=\"button\"\n                    disabled={!enableRevert}\n                    style={enableRevert ? defaultStyles.button2 : defaultStyles.button2Disabled}\n                    onClick={this.openModal}\n                    onMouseDown={this.showTooltip}\n                    onMouseUp={this.hideTooltip}\n                    onMouseEnter={this.showTooltip}\n                    onMouseLeave={this.hideTooltip}\n                    data-handle=\"revert\"\n                >\n                    Revert\n                </button>\n            </div>\n        );\n    }\n}\n\nRevertButton.propTypes = {\n    enableRevert: PropTypes.bool,\n    th: PropTypes.number,\n    onRevert: PropTypes.func,\n};\n\nexport default RevertButton;\n","import { connect } from 'react-redux';\nimport { deleteTransPending } from 'modules/transactions/actions';\nimport {\n    selectReadWrite,\n    transactionIsEmpty,\n    selectThIsBusy,\n} from 'modules/transactions/selectors';\nimport RevertButton from './RevertButton';\n\nconst mapStateToProps = (state) => {\n    const th = selectReadWrite(state);\n    const enableRevert = th !== undefined && !selectThIsBusy(state) && !transactionIsEmpty(state);\n    return { enableRevert, th };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRevert(th) {\n        dispatch(deleteTransPending(th));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(RevertButton);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","export default {\n    container: {\n        alignSelf: 'center',\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckBox from '@webui-one/components/ConfigRender/CheckBox/CheckBox';\nimport style from './RollbackStyles';\n\n// FIXME(dbildstr): fix no-static-element-interactions warning\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nconst buildRollback = (rollback, index, onSelectItem, selectedIndex) => (\n    <div\n        key={`${rollback.date}-${rollback.filename}`}\n        style={selectedIndex === index ? style.selectedRow : style.row}\n        onClick={() => { onSelectItem(index, rollback); }}\n    >\n        <div>\n            <span>\n                {`id: ${rollback.rollback_nr} - ${rollback.date} - ${rollback.creator} / ${rollback.via}`}\n            </span>\n        </div>\n    </div>\n);\n/* eslint-enable jsx-a11y/no-static-element-interactions */\nconst getRollbackFile = (selectedIndex, rollbacks) => (\n    selectedIndex !== -1 && selectedIndex < rollbacks.length\n        ? rollbacks[selectedIndex].rollback\n        : ''\n);\n\nconst getRollbackList = (rollbacks, selectedIndex, selectItem) => (\n    rollbacks.length > 0\n        ? rollbacks.map((rollback, index) => (\n            buildRollback(rollback, index, selectItem, selectedIndex)\n        ))\n        : <div>No rollbacks found</div>\n);\n\nconst Rollback = ({\n    rollbacks,\n    onChangeKeypath,\n    onSelective,\n    selectItem,\n    selective,\n    selectedIndex,\n}) => (\n    <div>\n        <div style={style.wrapper}>\n            {getRollbackList(rollbacks, selectedIndex, selectItem)}\n        </div>\n        <div key=\"rollback-keypath\" style={style.keypathWrapper}>\n            <div style={style.keypath}>\n                <div>Keypath:</div>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Keypath\"\n                        onChange={onChangeKeypath}\n                    />\n                </div>\n            </div>\n            {selectedIndex !== -1 && (\n                <div style={style.selectiveWrapper}>\n                    <CheckBox\n                        onSetValue={onSelective}\n                        value={selective}\n                        styleName=\"listStyles\"\n                    >\n                        <span style={style.checkboxSpan}>Selective</span>\n                    </CheckBox>\n                </div>\n            )}\n        </div>\n        <div\n            style={selectedIndex !== -1 ?\n                style.rollbackList :\n                style.rollbackList.hidden}\n        >\n            <pre>\n                {getRollbackFile(selectedIndex, rollbacks)}\n            </pre>\n        </div>\n    </div>\n);\n\nRollback.propTypes = {\n    onChangeKeypath: PropTypes.func,\n    onSelective: PropTypes.func,\n    selectItem: PropTypes.func,\n    selective: PropTypes.bool,\n    selectedIndex: PropTypes.number,\n    rollbacks: PropTypes.arrayOf(\n        PropTypes.shape({\n            comment: PropTypes.string,\n            creator: PropTypes.string,\n            date: PropTypes.string,\n            filename: PropTypes.string,\n            label: PropTypes.string,\n            nr: PropTypes.number,\n            via: PropTypes.string,\n        }),\n    ),\n};\n\nexport default Rollback;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n    selectRollbacks,\n} from 'modules/transactions/selectors';\nimport {\n    getRollbacks,\n    loadRollback,\n    readRollback,\n} from 'modules/transactions/actions';\n\nimport Rollback from './Rollback';\n\nclass RollbackContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.doLoad = this.doLoad.bind(this);\n        this.selectItem = this.selectItem.bind(this);\n        this.onSelective = this.onSelective.bind(this);\n        this.onChangeKeypath = this.onChangeKeypath.bind(this);\n\n        this.state = {\n            selectedIndex: -1,\n            selective: false,\n            keypath: '',\n        };\n    }\n\n    // eslint-disable-next-line camelcase, react/sort-comp\n    UNSAFE_componentWillMount() {\n        const { onRollbacks, registerLoad, setLoadButtonEnabled } = this.props;\n        const { selectedIndex } = this.state;\n        onRollbacks();\n        registerLoad(this.doLoad);\n        setLoadButtonEnabled(selectedIndex !== -1);\n    }\n\n    onChangeKeypath(e) {\n        const { value } = e.target;\n        this.setState({ keypath: value });\n    }\n\n    onSelective(selective) {\n        this.setState({ selective });\n    }\n\n    doLoad() {\n        const { keypath, selectedIndex, selective } = this.state;\n        const { onLoadRollback, rollbacks } = this.props;\n        return onLoadRollback(\n            rollbacks[selectedIndex].nr,\n            keypath || undefined,\n            selective || undefined,\n        );\n    }\n\n    selectItem(index) {\n        const { onReadRollback, rollbacks, setLoadButtonEnabled } = this.props;\n        const { selectedIndex: currentIndex } = this.state;\n        const selectedIndex = currentIndex !== index ? index : -1;\n        this.setState({ selectedIndex });\n        if (selectedIndex !== -1 && typeof rollbacks[selectedIndex].rollback !== 'string') {\n            onReadRollback(rollbacks[selectedIndex].nr);\n        }\n        setLoadButtonEnabled(selectedIndex !== -1);\n    }\n\n    render() {\n        const { rollbacks } = this.props;\n        const { selective, selectedIndex } = this.state;\n        return (\n            <Rollback\n                onChangeKeypath={this.onChangeKeypath}\n                rollbacks={rollbacks}\n                onSelective={this.onSelective}\n                selectItem={this.selectItem}\n                selective={selective}\n                selectedIndex={selectedIndex}\n            />\n        );\n    }\n}\n\nRollbackContainer.propTypes = {\n    onRollbacks: PropTypes.func,\n    onLoadRollback: PropTypes.func,\n    onReadRollback: PropTypes.func,\n    registerLoad: PropTypes.func,\n    setLoadButtonEnabled: PropTypes.func,\n    rollbacks: PropTypes.arrayOf(\n        PropTypes.shape({\n            comment: PropTypes.string,\n            creator: PropTypes.string,\n            date: PropTypes.string,\n            filename: PropTypes.string,\n            label: PropTypes.string,\n            nr: PropTypes.number,\n            rollback: PropTypes.string,\n            via: PropTypes.string,\n        }),\n    ),\n};\nconst mapStateToProps = state => ({\n    rollbacks: selectRollbacks(state) || [],\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onRollbacks() {\n        dispatch(getRollbacks());\n    },\n    onLoadRollback(nr, keypath, selective) {\n        return dispatch(loadRollback({ nr, keypath, selective }));\n    },\n    onReadRollback(nr) {\n        dispatch(readRollback(nr));\n    },\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(RollbackContainer);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    RollbackContainer as _RollbackContainer,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst row = {\n    color: 'rgb(51, 121, 173)',\n    fontSize: defaultStyles.medium2,\n    cursor: 'pointer',\n    padding: '0.4rem',\n};\n\nconst rollbackList = {\n    overflow: 'auto',\n    fontFamily: defaultStyles.font3,\n    fontWeight: 'normal',\n    width: '35rem',\n};\n\nexport default {\n    rollbackButtonContainer: {\n        position: 'relative',\n    },\n    rollback: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        width: '1.8rem',\n        cursor: 'pointer',\n        padding: '0',\n    },\n    keypathWrapper: {\n        height: '4rem',\n        overflow: 'auto',\n    },\n    rollbackList: {\n        ...rollbackList,\n        height: '15rem',\n        hidden: {\n            ...rollbackList,\n            height: '0rem',\n        },\n    },\n    checkboxSpan: {\n        height: '0.8rem',\n        fontSize: '0.8rem',\n        color: 'rgb(51, 51, 51)',\n        margin: '0.5rem 0.4rem 0.4rem',\n        display: 'inline-block',\n    },\n    keypath: {\n        display: 'none',\n        padding: '0.5rem',\n        lineHeight: '1.3rem',\n    },\n    wrapper: {\n        padding: '0.2rem',\n        height: '8rem',\n        overflow: 'auto',\n        width: '35rem',\n    },\n    selectiveWrapper: {\n        padding: '0.8rem',\n        display: 'flex',\n    },\n    selectedRow: {\n        ...row,\n        backgroundColor: defaultStyles.color11,\n    },\n    row: {\n        ...row,\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport { translate, Messages } from 'modules/intl';\nimport styles from './LoadStyles';\nimport style from './CommitButtonStyles';\n\nconst SaveToFile = ({\n    disableFileSelector,\n    errorText,\n    onGenerateFile,\n    saving,\n}) => {\n    const buttonStyle = !disableFileSelector\n        ? styles.generateFileButton\n        : styles.generateFileButtonDisabled;\n\n    const btnTitle = saving\n        ? (<div style={style.loader}><Loader color={defaultStyles.color3} /></div>)\n        : translate(Messages.COMMITMANAGER.GENERATE_FILE_BUTTON_TITLE);\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.fileUpload}>\n                <button\n                    type=\"button\"\n                    data-handle=\"save-to-file-generator\"\n                    onClick={onGenerateFile}\n                    style={buttonStyle}\n                    disabled={!!disableFileSelector}\n                >\n                    {btnTitle}\n                </button>\n            </div>\n            {errorText && (\n                <div\n                    data-handle=\"save-to-file-error-text\"\n                    style={styles.errorMessage}\n                >\n                    { errorText }\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SaveToFile;\nSaveToFile.propTypes = {\n    disableFileSelector: PropTypes.bool,\n    errorText: PropTypes.string,\n    onGenerateFile: PropTypes.func,\n    saving: PropTypes.bool,\n};\n\nSaveToFile.defaultProps = {\n    disableFileSelector: true,\n    saving: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { translate, Messages } from 'modules/intl';\nimport { outputToFile } from '@webui-one/core/utils/browser';\nimport { ensureConfigNode } from '@webui-one/core/utils/xml';\n\nimport { saveFile } from 'modules/transactions/actions';\nimport {\n    selectSaveToFileError,\n    transactionIsEmpty,\n    selectValid,\n} from 'modules/transactions/selectors';\n\nimport SaveToFile from './SaveToFile';\n\nconst mimeTypes = {\n    json: 'application/json',\n    xml: 'application/xml',\n};\n\nconst getMimeType = format => (\n    Object.keys(mimeTypes).includes(format) ? mimeTypes[format] : 'text/plain'\n);\n\nconst validFileEndings = ['json', 'xml'];\nconst getFileEnding = format => (\n    validFileEndings.includes(format) ? format : 'txt'\n);\n\nconst getData = (timestamp, blobdata, fileending) => ({\n    filename: `transaction-diff.${fileending}`,\n    href: URL.createObjectURL(blobdata),\n    timestamp,\n});\n\nconst saveDataToFile = format => (res) => {\n    const filedata = ensureConfigNode(res.result.local_node.data);\n    const type = getMimeType(format);\n    const fileending = getFileEnding(format);\n    const blobdata = new Blob([filedata || ''], { type });\n    const timestamp = Date.now();\n    const data = getData(timestamp, blobdata, fileending);\n    outputToFile(data);\n};\n\nclass SaveToFileContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.doSave = this.doSave.bind(this);\n        this.onGenerateFile = this.onGenerateFile.bind(this);\n        this.files = [];\n\n        this.state = {\n            error: undefined,\n            previewText: '',\n            files: undefined,\n            format: 'xml',\n            saving: false,\n        };\n    }\n\n    componentDidMount() {\n        const { emptyTransaction, registerLoad, setLoadButtonEnabled } = this.props;\n        registerLoad(this.doSave);\n        setLoadButtonEnabled(!emptyTransaction);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { emptyTransaction, setLoadButtonEnabled } = this.props;\n        if (emptyTransaction !== prevProps.emptyTransaction) {\n            setLoadButtonEnabled(!emptyTransaction);\n        }\n    }\n\n    onGenerateFile() {\n        const { emptyTransaction, onSaveFile, validTrans } = this.props;\n        const format = 'xml';\n\n        if (emptyTransaction || !validTrans) {\n            return Promise.resolve();\n        }\n\n        return this.setAsyncState({ saving: true })\n            .then(() => onSaveFile(format))\n            .then(saveDataToFile(format))\n            .then(() => this.setAsyncState({ saving: false }));\n    }\n\n    setAsyncState(newState) {\n        return new Promise(resolve => this.setState(newState, () => resolve()));\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    doSave() {\n        return Promise.resolve();\n    }\n\n    render() {\n        const {\n            emptyTransaction,\n            saveToFileError,\n            validTrans,\n        } = this.props;\n        const { loadFileError, previewText, data, saving } = this.state;\n        const errorText = (saveToFileError || loadFileError)\n            ? translate(Messages.COMMITMANAGER.LOAD_ERROR_MESSAGE)\n            : null;\n        const disableFileSelector = saving || !validTrans || !!emptyTransaction;\n        return (\n            <SaveToFile\n                disableFileSelector={disableFileSelector}\n                onGenerateFile={this.onGenerateFile}\n                previewText={previewText}\n                selectedFiles={data}\n                errorText={errorText}\n                saving={saving}\n            />\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSaveFile(value, type) {\n        return dispatch(saveFile(value, type));\n    },\n});\n\nSaveToFileContainer.propTypes = {\n    emptyTransaction: PropTypes.bool,\n    onSaveFile: PropTypes.func.isRequired,\n    registerLoad: PropTypes.func,\n    saveToFileError: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]),\n    setLoadButtonEnabled: PropTypes.func,\n    validTrans: PropTypes.bool,\n};\nSaveToFileContainer.defaultProps = {\n    emptyTransaction: true,\n};\n\nconst mapStateToProps = state => ({\n    emptyTransaction: transactionIsEmpty(state),\n    saveToFileError: selectSaveToFileError(state),\n    validTrans: selectValid(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SaveToFileContainer);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    SaveToFileContainer as _SaveToFileContainer,\n};\n","import { getSchema } from 'modules/schemas/actions';\nimport {\n    query,\n} from 'modules/nodes/actions';\n\nimport {\n    PATH,\n    PATH_QUEUE,\n    QUERY_SELECTION,\n    getQueueItemQueryParams,\n} from './path';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getCommitQueue = (chunkSize, offset, columnKey, sortorder, xpathExpression) =>\n    dispatch => dispatch(getSchema({\n        path: PATH,\n        params: {\n            levels: -1,\n            stop_on_list: true,\n        },\n        reload: true,\n    })).then(() => dispatch(query({\n        selection: QUERY_SELECTION,\n        path: PATH_QUEUE,\n        sort: columnKey,\n        sortOrder: sortorder,\n        initialOffset: offset,\n        chunkSize,\n        result_as: 'string',\n        xpathExpr: xpathExpression,\n        contextNode: PATH,\n    })));\n\nexport const getDevicesOfQueueItem = queueItemId =>\n    dispatch => Promise.all(getQueueItemQueryParams(queueItemId).map(({ path, selection }) =>\n        dispatch(query({ selection, path })),\n    ));\n","export const QUERY_SELECTION = ['id', 'age', 'status', 'is-atomic'];\nexport const PATH = '/ncs:devices/commit-queue';\nexport const PATH_QUEUE = `${PATH}/queue-item`;\n\n\nexport const QUEUE_ITEM_DEVICES = 'devices';\nexport const QUEUE_ITEM_WAITING = 'waiting-for';\nexport const QUEUE_ITEM_TRANSIENT = 'transient-errors';\nexport const QUEUE_ITEM_COMPLETED = 'completed';\nexport const QUEUE_ITEM_FAILED = 'failed';\n\nexport const QUEUE_ITEM_DEVICE_LISTS = [\n    QUEUE_ITEM_DEVICES,\n    QUEUE_ITEM_WAITING,\n    QUEUE_ITEM_TRANSIENT,\n    QUEUE_ITEM_COMPLETED,\n    QUEUE_ITEM_FAILED,\n];\n\nexport const QUEUE_ITEM_DEVICE_LISTS_SELECTION = {\n    [QUEUE_ITEM_FAILED]: ['name'],\n};\n\nexport const itemIdToPath = queueItemId => leaf => ({\n    path: `/ncs:devices/commit-queue/queue-item{${queueItemId}}/${leaf}`,\n    selection: QUEUE_ITEM_DEVICE_LISTS_SELECTION[leaf],\n});\n\nexport const getQueueItemQueryParams = queueItemId =>\n    QUEUE_ITEM_DEVICE_LISTS.map(itemIdToPath(queueItemId));\n","import {\n    createNodeRowSelector,\n    selectLoading,\n    selectOffset,\n    selectSortColumn,\n    selectsortOrder,\n    selectNode,\n    selectRows,\n} from 'modules/nodes/selectors';\n\nimport {\n    selectTotalNumberOfResults,\n} from 'modules/data/selectors';\n\nimport { selectSchemaIsLoading } from 'modules/schemas2/selectors';\n\nimport {\n    PATH,\n    PATH_QUEUE,\n    QUEUE_ITEM_COMPLETED,\n    QUEUE_ITEM_DEVICES,\n    QUEUE_ITEM_DEVICE_LISTS,\n    QUEUE_ITEM_FAILED,\n    QUEUE_ITEM_TRANSIENT,\n    QUEUE_ITEM_WAITING,\n    getQueueItemQueryParams,\n} from './path';\n\nconst nodeSelector = createNodeRowSelector();\nexport const selectCommitQueueRows = (state, ownProps) => (\n    nodeSelector(state, { ...ownProps, path: PATH_QUEUE })\n);\nexport const selectCommitQueueLoading = state => selectSchemaIsLoading(state, PATH) ||\n    selectLoading(state, PATH_QUEUE);\nexport const selectCommitQueueOffset = state => selectOffset(state, PATH_QUEUE);\nexport const selectCommitQueueSortColumn = state => selectSortColumn(state, PATH_QUEUE);\nexport const selectCommitQueueSortOrder = state => selectsortOrder(state, PATH_QUEUE);\nexport const selectTotalNumberOfCommitQueues = state =>\n    selectTotalNumberOfResults(state, PATH_QUEUE);\n\nexport const getIdFromProps = ownProps => ownProps.rowKey.replace(/[^0-9]/g, '');\n\nexport const selectQueueItemIsLoading = (state, ownProps) =>\n    getQueueItemQueryParams(getIdFromProps(ownProps)).reduce(\n        (acc, { path }) => {\n            const node = selectNode(state, path);\n            return acc || (node.isLoading !== undefined && node.isLoading);\n        },\n        false,\n    );\n\nconst determineState = (deviceName, deviceLists) => {\n    if (deviceLists[QUEUE_ITEM_TRANSIENT].find(e => deviceName === e[0])) return 'transient';\n    if (deviceLists[QUEUE_ITEM_WAITING].find(e => deviceName === e[0])) return 'wait';\n    if (deviceLists[QUEUE_ITEM_COMPLETED].find(e => deviceName === e[0])) return 'complete';\n    if (deviceLists[QUEUE_ITEM_FAILED].find(e => deviceName === e.name)) return 'failed';\n    return 'device';\n};\n\nexport const selectQueueItemDevices = (state, ownProps) => {\n    const queryParams = getQueueItemQueryParams(getIdFromProps(ownProps));\n    const lists = queryParams.map(qp => selectRows(state, qp.path));\n    const deviceLists = QUEUE_ITEM_DEVICE_LISTS.reduce((acc, k, i) => ({\n        ...acc,\n        [k]: lists[i],\n    }), {});\n    return deviceLists[QUEUE_ITEM_DEVICES].map((d) => {\n        const deviceName = d[0];\n        return ({\n            device: deviceName,\n            state: determineState(deviceName, deviceLists),\n        });\n    });\n};\n\nexport {\n    determineState as _determineState,\n};\n"],"names":["rowPropTypes","lineNum","PropTypes","number","text","string","PlusRow","style","tr","leftColNumber","leftCol","rightColAdd","propTypes","MinusRow","leftColDelete","rightCol","BothRow","renderRow","row","rowIx","length","key","DiffTable","rows","data","split","map","table","addColor","marginTop","width","fontFamily","fontSize","fontWeight","whiteSpace","background","leftColAdd","BAR_TYPES","ALARM","ERROR","NOTIFICATION","WARNING","ENUM_PROP","Object","values","DEFAULT_STYLE","NotificationBar","message","type","additionalStyles","styles","shape","oneOf","defaultProps","bar","color","defaultStyles","textColor4","medium2","padding","fontLight","alarm","backgroundColor","color5","error","notification","color10","warning","textColor2","color17","startsWith","endsWith","EditSymbol","active","x","y","viewBox","id","fill","d","bool","ChangesTab","changes","isEmptyArray","renderHeader","renderBody","arrayOf","path","op","value","old","ChangesTabContainer","React","Component","constructor","props","super","this","hasLoadedSchemaFor","componentDidUpdate","onGetSchema","filter","c","undefined","forEach","render","device","func","isRequired","mapDispatchToProps","dispatch","getSchema","params","levels","mapStateToProps","state","selectChangesWithDefaultValues","connect","tableWrapper","marginBottom","boxSizing","overflow","tableName","medium3","textAlign","textColor1","renderTableWithName","i","name","result","local_node","lsa_node","nodesData","n","loader","loaderbox","color9","CommitDryRunTabContainer","componentDidMount","onCommitDryRun","th","emptyTransaction","hasLatestCommitDryRunResult","thIsBusy","commitDryRunError","hasNotError","commitDryRun","selectThIsBusy","selectCommitDryRunResult","selectCommitDryRunError","selectReadWrite","selectHasLatestCommitDryRunResult","transactionIsEmpty","getStatusElement","transactionEmpty","transStatus","loading","statusStyles","statusValid","statusEmpty","transactionStatus","INVALID","statusInvalid","getTabStyle","page","isDisabled","tabStyle","disabledtab","isActive","activeTab","tab","TabLink","LinkComponent","Link","to","tabButton","SelectTh","thList","onSelectTh","selectedTh","selectTh","includes","editable","extraSelectStyle","activeThSelect","onSetValue","options","placeholder","pageProp","oneOfType","object","additionalComponentsRight","CommitManager","children","pages","warningMessage","application","secondHeader","contentWrapper","title","spacer","commitButton","shadow","scrollingContainer","maxWidth","main","tabContainer","index","node","APP_NAME","PAGE_CHANGES","PAGE_QUEUE","PAGE_ERROR","PAGE_WARNINGS","PAGE_CONFIG","PAGE_NATIVE","PAGES","LoaderBox","getPage","formatPath","getChangesPage","getCommitDryRunPage","getNativeCommitDryRunPage","countNumberOfErrors","errors","Array","isArray","getTransName","tag","convertWarningsToErrors","warnings","isNonEmptyArray","getWarningsPage","onReevaluateTrans","numberOfWarnings","warningsNumberContainer","onRevalidateTrans","getErrorsPage","conflicts","resolveConflictsCb","thTag","numberOfErrors","emptyMessage","onResolveConflicts","disableDataContainer","TAGS","WEBUI_ONE","CommitContent","hasInitiated","CommitManagerContainer","handleReevaluateTrans","bind","resolveConflicts","forceActivePage","reevaluateCalled","redirected","onGetWriteTrans","onGetAdditionalTrans","setState","shouldComponentUpdate","nextProps","nextState","currentPage","isDeepEqual","prevProps","transError","setRedirected","componentWillUnmount","onReevaluate","router","push","disableDryRun","isNonEmpty","properPageId","find","onChangeTab","location","paths","reason","getAdditionalTrans","getWriteTrans","reevaluate","option","newTh","isNonEmptyString","thStr","match","toNumber","setActiveThAction","getTransChanges","ownProps","funcs","selectSchema","_selectSchema","routeParams","splat","substr","selectWarnings","selectValidateTransactionError","schema","trans","selectWriteTrans","hasMultiWriteTh","WARNING_MULTIPLE_WEBUI_ONE","selectConflicts","selectReadWriteThTag","selectStatus","statusText","color2","margin","display","flexFlow","height","backgroundImage","pattern1","flexGrow","warningsContainer","minHeight","small3","marginLeft","warningsNumberLabel","position","borderRadius","right","color11","borderTop","alignItems","textOverflow","tabDeck","minWidth","marginRight","alignSelf","thead","color3","borderBottom","color7","fontCondensed","tbody","wordBreak","fontRegular","td","lineHeight","a","color1","textDecoration","resultSearchBar","nativeDevice","nativeCommitDiff","font3","medium1","nativeCommitPane","left","checkboxStyle","checkbox","checkboxWrapper","label","warningStyles","revalidateContainer","errorHeader","messageContainer","errorWrapper","cursor","tabs","flexDirection","border","CommitQueueDeviceCell","check","CommitQueueDevicesCellContainer","isLoading","onLoad","devices","rowKey","selectQueueItemDevices","selectQueueItemIsLoading","getDevicesOfQueueItem","getIdFromProps","backgroundColor1","borderWidth","borderStyle","color16","borderColor","transient","wait","complete","color6","failed","STYLE_NAME","listStyle","createQueueLink","getLinkWithPath","list","link","createCell","createTextCellFactory","createAgeCell","ageToRelativeTimeString","createDevicesCell","CommitQueueListContainer","onChangeSortOrder","onGoToPage","onRefresh","sortColumn","sortOrder","wasLoading","resetRefresh","clearTimeout","refreshTimeout","columnKey","newSortorder","newColumnKey","offset","setTimeout","sortOrdering","totalNumberOfResults","visibility","isDesc","createHeader","createSortableHeaderFactory","columns","getDefaultColumn","additionalElements","chunkSize","styleName","shouldPadRows","shouldRetainColumnsSize","nrOfStaticColumns","getCommitQueue","selectCommitQueueLoading","selectCommitQueueOffset","selectCommitQueueRows","keyNames","selectCommitQueueSortColumn","selectCommitQueueSortOrder","selectTotalNumberOfCommitQueues","item","escapeKey","change","ix","NativeCommitDryRunTab","NativeCommitDryRunTabContainer","shouldCallDryRun","handleNativeCommitDryRun","onNativeCommitDryRun","nativeResult","nativeCommitDryRun","selectNativeCommitDryRunResult","renderErrorHeader","numErrors","renderError","arr","newPaths","reduce","acc","e","truncatedPaths","getTruncatedPaths","contextLink","kind","breadcrumbStyles","getParentPath","applicationName","CONFIGURATION_EDITOR_NAME","hideIndicators","hideContainers","hideLists","includeSubfolders","showEmpty","showConfig","isEditMode","renderErrors","renderErrorMessage","renderErrorDataMessage","container","WarningsTab","disableRevalidateButton","disabled","isObject","isEmpty","button","reValidateButton","onClick","renderConflicts","CommitButton","commitInProgress","enableCommit","onCommit","shouldShowDone","wrapper","buttonDisabled","translate","Messages","COMMITMANAGER","COMMIT_BUTTON_DONE","COMMIT_BUTTON_COMMIT","CommitButtonContainer","toggleIgnoreWarnings","labelTimeout","shouldIgnoreWarnings","shouldShowDialog","commitIsDone","showDoneLabel","hideDialog","msecs","hideDoneLabel","showDialog","parseCommitFlags","commitOptions","activeOptions","keys","validationStatus","Number","isFinite","isOkToCommit","ignoreWarnings","onToggleIgnoreWarnings","onCancel","extraStyles","CommitOptionsType","selectCommitInProgress","selectCommitOptions","selectValidationStatus","flags","validateAndCommit","transform","CommitDialog","confirmTitle","onConfirm","formIsValid","header","large1","editButton","frame","topRow","justifyContent","optionsBox","inputWrapper","queueOptionsWrapper","paddingLeft","borderLeft","ignoreContainer","ignoreDescription","ignoreLabel","renderName","isConfigMode","CommitOption","onSetCommmitOption","formatOption","selectOptions","selectOptionsInfo","useCallback","v","optionsInfo","onKeyDown","stopPropagation","role","val","info","mapValues","renderOptions","CommitOptions","commitOptionValues","useState","setIsConfigMode","commitQueue","COMMIT_OPTION_CONSTANTS","commitQueueOptions","COMMIT_QUEUE_OPTION_CONSTANTS","hasOption","some","prev","boolean","commitOption","setCommmitOptionsAction","getMsg","status","timestamp","rollbackId","time","Date","toLocaleTimeString","displayTime","CommitStatusBar","commitCompleteTime","commitFailTime","commitStartTime","notificationMsg","setNotificationMsg","alarmMsg","setAlarmMsg","useEffect","timeoutId","now","selectCommitCompleteTime","selectCommitFailTime","selectCommitStartTime","selectRollbackId","IgnoreWarnings","getConfirmButtonTitle","activePageIndex","customTitle","confirmButtonTitle","isString","MODAL","LOAD_BUTTON_TITLE","LoadButton","closeModal","enableModal","enableLoadButton","loadInProgress","openModal","showModal","extraStyle","loadingDots","loadContainerStyle","ROLLBACKBUTTON_DIALOG_TITLE","shouldRender","defaultIndex","button2","element","buildFiles","registerLoad","setLoadButtonEnabled","buildText","buildSave","LoadButtonContainer","doLoad","isFunction","prom","then","res","Promise","resolve","buildPages","OK_BUTTON_TITLE","enable","selectLoadInProgress","LoadFromFile","fi","click","errorText","selectedFiles","onChange","previewText","fileUpload","CHOOSE_FILE_BUTTON_TITLE","fileSelector","ref","r","selectedFilesStyle","filename","renderFiles","previewTextAreaContainer","textAreaStyle","errorMessage","MAX_PREVIEW_SIZE","hasFiles","files","LoadFromFileContainer","format","evt","target","prototype","slice","call","f","updatePreview","PREVIEW_NO_ISSUES","theFile","size","PREVIEW_FILE_TO_BIG","FileReader","PREVIEW_BROWSER_NOT_SUPPORTED","reader","onload","onerror","PREVIEW_FAILED_TO_READ_FILE","readAsText","onLoadFile","loadFileError","reject","extension","file","exec","getExtensionFromFilename","Error","readAsBinaryString","catch","err","loadFromFileError","loadFile","selectLoadFromFileError","LoadFromPlainText","onBlur","plainContainer","textAreaContainer","validFormats","isValidFormat","isValidString","str","shouldEnableLoadButton","formatErrorMessage","LoadFromPlainTextContainer","loadFromTextError","prevError","isJson","isXml","guessFormat","onLoadText","loadText","selectLoadFromTextError","checkboxContainer","generateFileButton","generateFileButtonDisabled","RevertButton","onRevert","enableRevert","onRequestClose","modalStyles","REVERTBUTTON_CONFIRM_TITLE","bread","REVERTBUTTON_CONFIRM_BODY","button2Disabled","onMouseDown","showTooltip","onMouseUp","hideTooltip","onMouseEnter","onMouseLeave","deleteTransPending","Rollback","rollbacks","onChangeKeypath","onSelective","selectItem","selective","selectedIndex","rollback","onSelectItem","date","selectedRow","rollback_nr","creator","via","buildRollback","getRollbackList","keypathWrapper","keypath","selectiveWrapper","checkboxSpan","rollbackList","hidden","getRollbackFile","comment","nr","RollbackContainer","UNSAFE_componentWillMount","onRollbacks","onLoadRollback","onReadRollback","selectRollbacks","getRollbacks","loadRollback","readRollback","rollbackButtonContainer","SaveToFile","disableFileSelector","onGenerateFile","saving","buttonStyle","btnTitle","GENERATE_FILE_BUTTON_TITLE","mimeTypes","json","xml","validFileEndings","SaveToFileContainer","doSave","onSaveFile","validTrans","setAsyncState","filedata","ensureConfigNode","getMimeType","fileending","getFileEnding","blobdata","Blob","href","URL","createObjectURL","getData","outputToFile","newState","saveToFileError","LOAD_ERROR_MESSAGE","saveFile","selectSaveToFileError","selectValid","sortorder","xpathExpression","PATH","stop_on_list","reload","query","selection","QUERY_SELECTION","PATH_QUEUE","sort","initialOffset","result_as","xpathExpr","contextNode","queueItemId","all","getQueueItemQueryParams","QUEUE_ITEM_DEVICES","QUEUE_ITEM_WAITING","QUEUE_ITEM_TRANSIENT","QUEUE_ITEM_COMPLETED","QUEUE_ITEM_FAILED","QUEUE_ITEM_DEVICE_LISTS","QUEUE_ITEM_DEVICE_LISTS_SELECTION","itemIdToPath","leaf","nodeSelector","createNodeRowSelector","selectSchemaIsLoading","selectLoading","selectOffset","selectSortColumn","selectsortOrder","selectTotalNumberOfResults","replace","selectNode","determineState","deviceName","deviceLists","lists","qp","selectRows","k"],"sourceRoot":""}