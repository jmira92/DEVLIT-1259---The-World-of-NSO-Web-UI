{"version":3,"file":"337.cc80ae27f6bd0650ed05.chunk.js","mappings":"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","sources":["webpack://webui/./packages/components/Breadcrumb/BreadcrumbStyles.js","webpack://webui/./packages/components/ConfigRender/ActionLink.jsx","webpack://webui/./packages/components/ConfigRender/ActionOutput.jsx","webpack://webui/./packages/components/ConfigRender/ActionOutputStyles.js","webpack://webui/./packages/components/ConfigRender/ActionRunButton.jsx","webpack://webui/./packages/components/ConfigRender/BackToSourceLink/BackToSourceLink.jsx","webpack://webui/./packages/components/ConfigRender/BackToSourceLink/BackToSourceLinkStyles.js","webpack://webui/./packages/components/ConfigRender/ContentIndicator.jsx","webpack://webui/./packages/components/ConfigRender/ContentIndicators.jsx","webpack://webui/./packages/components/ConfigRender/ContentIndicatorsStyles.js","webpack://webui/./packages/components/ConfigRender/EmptyLeaf/EmptyLeaf.jsx","webpack://webui/./packages/components/ConfigRender/EmptyLeaf/EmptyLeafStyles.js","webpack://webui/./packages/components/ConfigRender/NoData.jsx","webpack://webui/./packages/components/ConfigRender/NotFound.jsx","webpack://webui/./packages/components/ConfigRender/PresenceButton/PresenceButton.jsx","webpack://webui/./packages/components/ConfigRender/PresenceButton/PresenceButtonStyles.js","webpack://webui/./packages/components/ConfigRender/SchemaHeader.jsx","webpack://webui/./packages/components/ConfigRender/SchemaHeaderStyles.js","webpack://webui/./packages/components/ConfigRender/StateButton.jsx","webpack://webui/./packages/components/ConfigRender/StateButtonStyles.jsx","webpack://webui/./packages/components/Grid/Grid.jsx","webpack://webui/./packages/components/Grid/GridStyles.js","webpack://webui/./packages/styles/static/CrossSymbol.jsx","webpack://webui/./src/Common/Components/ConfigRender/ActionContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/ActionContainerStyles.js","webpack://webui/./src/Common/Components/ConfigRender/ActionLinkContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/ActionOutputContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/BackToSourceLink/BackToSourceLinkContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/Case.jsx","webpack://webui/./src/Common/Components/ConfigRender/CaseContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/CaseStyles.js","webpack://webui/./src/Common/Components/ConfigRender/Choice.jsx","webpack://webui/./src/Common/Components/ConfigRender/ChoiceContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/ChoiceStyles.js","webpack://webui/./src/Common/Components/ConfigRender/DataContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/List/EmptyCellContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/List/ListContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/NoCapabilitiesContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/SchemaContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/SchemaHeaderContainer.jsx","webpack://webui/./src/modules/devices/actions.js","webpack://webui/./src/modules/ipc/propTypes.js"],"sourcesContent":["import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst link = {\n    color: defaultStyles.color1,\n    textDecoration: 'none',\n    fontSize: defaultStyles.medium2,\n    lineHeight: 'normal',\n    alignSelf: 'center',\n};\n\nexport default {\n    crumbs: {\n        display: 'flex',\n        alignSelf: 'center',\n        marginLeft: '0.5rem',\n        minWidth: '5rem',\n        overflow: 'hidden',\n        flexShrink: '0',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        ...defaultStyles.fontCondensed,\n    },\n    link,\n    blackLink: {\n        ...link,\n        color: defaultStyles.textColor2,\n    },\n    navHome: {\n        alignSelf: 'center',\n        width: '1.25rem',\n    },\n    navUp: {\n        alignSelf: 'center',\n        width: '1.25rem',\n    },\n};\n\nconst labelDropdown = {\n    wordBreak: 'break-all',\n    position: 'absolute',\n    backgroundColor: 'rgb(248, 248, 248)',\n    padding: '0.6rem',\n    boxShadow: '0 0 0.5rem #888888',\n    minWidth: '6rem',\n    zIndex: '1',\n};\n\nconst deviceGroupsOptions = {\n    display: 'flex',\n    color: 'grey',\n    fontSize: '0.8rem',\n    cursor: 'pointer',\n    padding: '.2rem',\n};\n\nconst input = {\n    labelFilter: {\n        alignSelf: 'center',\n        fontSize: '0.6rem',\n    },\n    labelDropdown,\n    deviceGroupsOptions,\n    deviceGroupsOptionsActive: {\n        ...deviceGroupsOptions,\n        background: 'rgba(0, 0, 0, 0.05)',\n    },\n    input: {\n        width: '3rem',\n    },\n    highlight: {\n        fontWeight: 'bold',\n        color: defaultStyles.color2,\n    },\n};\n\nexport {\n    input,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InformationButton from './Information/InformationButton';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport ActionSymbol from '@webui-one/styles/static/ActionSymbol';\nimport { overlayStyle, actionStyle as style } from '@webui-one/styles/LeafStyles';\nimport Link from '../Link';\n\nconst ActionLink = ({\n    isEditMode,\n    isOperdata,\n    label,\n    LinkComponent,\n    path,\n    to,\n}) => (\n    <div\n        data-handle={label}\n        style={style.actionContainer}\n    >\n        <div style={style.wrapperWrapper}>\n            <LinkComponent\n                to={to}\n                style={isOperdata ? style.actionWrapperOperdata : style.actionWrapper}\n            >\n                <div style={style.symbol}>\n                    <ActionSymbol color={defaultStyles.color3} />\n                </div>\n                <div style={style.label}>{label}</div>\n            </LinkComponent>\n            {isEditMode && (\n                <div style={overlayStyle.editModeOverlay} data-handle=\"overlay\">\n                    <div style={overlayStyle.symbol}>\n                        {<InformationButton\n                            circleColor={defaultStyles.color3}\n                            iColor={defaultStyles.color1}\n                            path={path}\n                         />\n                        }\n                    </div>\n                </div>\n            )}\n        </div>\n    </div>\n);\n\nActionLink.propTypes = {\n    label: PropTypes.string,\n    LinkComponent: PropTypes.elementType,\n    to: PropTypes.string,\n    path: PropTypes.string,\n    isEditMode: PropTypes.bool,\n    isOperdata: PropTypes.bool,\n};\n\nActionLink.defaultProps = {\n    LinkComponent: Link,\n};\n\nexport default ActionLink;\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { pathToObjects } from '@webui-one/core/keypath/kp-parser';\nimport { isObject, stringifyObject } from '@webui-one/core/utils/object';\nimport { flatten, isNonEmptyArray } from '@webui-one/core/utils/array';\nimport {\n    isNonEmptyString,\n    lstrip,\n    rstrip,\n} from '@webui-one/core/utils/string';\nimport { timeStampToISOLocale } from '@webui-one/core/utils/time';\nimport { color11, color1 } from '@webui-one/styles/ApplicationDefaultStyles';\nimport CrossSymbol from '@webui-one/styles/static/CrossSymbol';\nimport Loader from '../Loading/Loader';\nimport style from './ActionOutputStyles';\n\nconst isResultOk = (resultObj) => {\n    if (!resultObj) return false;\n    if (!Array.isArray(resultObj)) return false;\n    if (resultObj.length !== 2) return false;\n\n    const result = resultObj[0];\n    if (!isObject(result)) return false;\n    if (typeof result.name === 'undefined') return false;\n    if (typeof result.value === 'undefined') return false;\n    if (result.name === 'result' && result.value === 'true') return true;\n    return false;\n};\n\nconst createResult = (result) => {\n    if (!Array.isArray(result)) {\n        return (\n            <ul style={style.list.body} data-handle=\"action-output\">\n                <li style={style.list.row.even}>\n                    <p style={style.list.value}>{ JSON.stringify(result) }</p>\n                </li>\n            </ul>\n        );\n    }\n\n    const rows = result.map((r, ix) => (\n        <li\n            style={ix % 2 === 0 ? style.list.row.even : style.list.row.odd}\n            key={`action-output-result-${ix}`}\n        >\n            <p style={style.list.p}>{ r.name }</p>\n            <p style={style.list.value}>{ r.value }</p>\n        </li>\n    ));\n    return (\n        <ul style={style.list.body} data-handle=\"action-output\">\n            { rows }\n        </ul>\n    );\n};\n\nfunction formatRelativePath(path, absolutePath) {\n    const pathObjs = pathToObjects(path);\n    const basePath = isNonEmptyString(absolutePath)\n        ? rstrip(absolutePath, '/')\n        : absolutePath;\n\n    return pathObjs.reduce((acc, obj) => {\n        if (obj.path === basePath) {\n            return `./${lstrip(path.substring(obj.path.length), '/')}`;\n        }\n        return acc;\n    }, path);\n}\n\nfunction formatTransValidationFailed(e, actionPath) {\n    const errors = Array.isArray(e.data.errors) ? e.data.errors : [];\n\n    const errorArray = flatten(errors.map((err) => {\n        if (!isNonEmptyArray(err.paths)) return err;\n        return err.paths.map(path => ({ reason: err.reason, path }));\n    }));\n\n    const total = errorArray.length;\n\n    const items = errorArray.map(({ path, reason }, ix) => {\n        const index = ix + 1;\n        const formattedPath = formatRelativePath(path, actionPath);\n        const message = path ? `${formattedPath} ${reason}` : reason;\n\n        return (\n            <p\n                key={`validation-failed-${index}`}\n                style={style.list.value}\n            >\n                {`${index}/${total}: ${message}`}\n            </p>\n        );\n    });\n\n    if (items.length === 0) {\n        return null;\n    }\n\n    if (items.length === 1) {\n        return items.pop();\n    }\n\n    return (\n        <>\n            {items}\n        </>\n    );\n}\n\nfunction formatErrorData(e, p) {\n    if (e.type === 'trans.validation_failed') {\n        return formatTransValidationFailed(e, p);\n    }\n\n    return (\n        <p style={style.list.value}>{stringifyObject(e.data)}</p>\n    );\n}\n\nconst ActionOutput = ({\n    error,\n    path,\n    result,\n    resultPending,\n    completedAt,\n    hideSuccessfullOutput,\n    onClearActionOutput,\n}) => {\n    const containerRef = useRef(null);\n    let contents = false;\n\n    useEffect(() => {\n        if (containerRef.current) {\n            containerRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest',\n            });\n        }\n    }, [completedAt, containerRef]);\n\n    if (error) {\n        contents = (\n            <ul style={style.list.body} data-handle=\"action-output\">\n                <li style={style.list.row.even} data-handle=\"action-error\">\n                    <p style={style.list.value}>Error</p>\n                </li>\n                {['type', 'code', 'message'].reduce((acc, errorKey) => {\n                    if (errorKey in error) {\n                        const comp = (\n                            <li style={style.list.row.even} data-handle={`action-error-${errorKey}`} key={errorKey}>\n                                <p style={style.list.value}>{`${errorKey}:`}</p>\n                                <p style={style.list.value}>{error[errorKey]}</p>\n                            </li>\n                        );\n                        acc.push(comp);\n                    }\n                    return acc;\n                }, [])}\n                {'data' in error && (\n                    <li\n                        style={style.list.row.errorData}\n                        data-handle=\"action-error-data\"\n                    >\n                        {formatErrorData(error, path)}\n                    </li>\n                )}\n            </ul>\n        );\n    }\n\n    // If there was no error in the JsonRpc call itself and\n    // The result is OK and\n    // You want to hide the successfull output.\n    if (!contents && isResultOk(result) && hideSuccessfullOutput) {\n        return null;\n    }\n    if (result) {\n        contents = createResult(result);\n    }\n    if (resultPending) {\n        contents = <div style={style.loader}><Loader color={color11} /></div>;\n    }\n    return (\n        <div\n            ref={containerRef}\n            data-handle=\"action-output-container\"\n            style={{ position: 'relative' }}\n        >\n            { !resultPending && (result || error) && (\n                <button\n                    type=\"button\"\n                    data-handle={'clearActionOutput'}\n                    style={style.clearActionOutputButton}\n                    onClick={() => { onClearActionOutput(); }}\n                >\n                    <CrossSymbol color={color1} />\n                </button>\n            )}\n            {contents}\n            {!resultPending && completedAt && (\n                <p style={style.p.info} data-handle=\"completed-at\">\n                    {`Completed at ${timeStampToISOLocale(completedAt)}`}\n                </p>\n            )}\n        </div>\n    );\n};\n\nActionOutput.propTypes = {\n    completedAt: PropTypes.number,\n    error: PropTypes.shape({\n        data: PropTypes.shape({}),\n    }),\n    path: PropTypes.string,\n    result: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.string,\n        PropTypes.shape({}),\n        PropTypes.arrayOf(\n            PropTypes.shape({}),\n        ),\n    ]),\n    resultPending: PropTypes.bool,\n    hideSuccessfullOutput: PropTypes.bool,\n    onClearActionOutput: PropTypes.func,\n};\n\nActionOutput.defaultProps = {\n    hideSuccessfullOutput: false,\n};\n\nexport default ActionOutput;\n\nexport {\n    isResultOk as _isResultOk,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst rows = {\n    display: 'flex',\n    padding: '0.5rem',\n};\n\nconst even = {\n    ...rows,\n    backgroundColor: defaultStyles.backgroundColor4,\n};\n\nconst odd = {\n    ...rows,\n    backgroundColor: defaultStyles.color3,\n};\n\nexport default {\n    list: {\n        body: {\n            margin: '1rem 0',\n        },\n        p: {\n            width: '20rem',\n            padding: '0.25rem',\n        },\n        value: {\n            whiteSpace: 'pre',\n            padding: '0.25rem',\n            overflow: 'auto',\n        },\n        row: {\n            odd,\n            errorData: {\n                ...even,\n                flexDirection: 'column',\n            },\n            even,\n        },\n    },\n    p: {\n        info: {\n            fontStyle: 'italic',\n        },\n    },\n    loader: { width: '3rem', margin: '0 auto' },\n    clearActionOutputButton: {\n        position: 'absolute',\n        top: '0.4rem',\n        right: '0.35rem',\n        width: '1.5rem',\n        height: '1.5rem',\n        display: 'block',\n        padding: '0.3rem',\n        cursor: 'pointer',\n        border: 'none',\n        backgroundColor: 'transparent',\n    },\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ActionSymbol from '@webui-one/styles/static/ActionSymbol';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { actionStyle as style } from '@webui-one/styles/LeafStyles';\n\nconst ActionRunButton = ({ enabled, label, onClick }) =>\n    (\n    /* eslint-disable jsx-a11y/no-static-element-interactions */\n        <div style={style.wrapperWrapper}>\n            <div\n                data-handle={'ActionRunButton'}\n                disabled={!enabled}\n                style={style.actionWrapper}\n                onClick={onClick}\n            >\n                <div style={style.symbol}>\n                    <ActionSymbol\n                        color={defaultStyles.color3}\n                    />\n                </div>\n                <div style={style.label}>{`Run ${label} action`}</div>\n            </div>\n        </div>\n    );\n\n\nActionRunButton.propTypes = {\n    enabled: PropTypes.bool,\n    label: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nexport default ActionRunButton;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { pathToObjects } from '@webui-one/core/keypath/kp-parser';\nimport { isFunction } from '@webui-one/core/utils/functional';\nimport { last } from '@webui-one/core/utils/array';\nimport { isObject } from '@webui-one/core/utils/object';\nimport Link from '../../Link';\nimport styles from './BackToSourceLinkStyles';\n\nconst getServicePointNames = servicePoints =>\n    Object\n        .values(servicePoints)\n        .map(sp => last(pathToObjects(sp.path)));\n\nconst tryFindDeviceData = (pathObjects) => {\n    const item = pathObjects[2];\n    if (item && item.parentPath === '/ncs:devices/device') {\n        return item;\n    }\n    return null;\n};\n\nconst tryFindServiceData = (pathObjects, servicesPoints) => {\n    const servicePathObjects = servicesPoints\n        ? getServicePointNames(servicesPoints)\n        : [];\n    let item;\n\n    pathObjects.forEach(pathObject => servicePathObjects.forEach((s) => {\n        if (s.path === pathObject.parentPath) {\n            item = pathObject;\n        }\n    }));\n\n    return item;\n};\nfunction BackToSourceLink({\n    actionPath,\n    LinkComponent,\n    onLoad,\n    path,\n    servicePoints,\n}) {\n    useEffect(() => {\n        if (!isObject(servicePoints) && isFunction(onLoad)) {\n            onLoad();\n        }\n    }, [actionPath, onLoad, path, servicePoints]);\n    if (!path) return null;\n    const pathObjects = pathToObjects(path);\n\n    if (actionPath && actionPath !== path) {\n        return (\n            <LinkComponent\n                key=\"3\"\n                data-handle=\"action-path\"\n                style={styles.backToSourceLink}\n                to={`/webui-one/ConfigurationEditor${actionPath}`}\n            >\n                {`Navigate to action container '${actionPath}'`}\n            </LinkComponent>\n        );\n    }\n\n    const deviceData = tryFindDeviceData(pathObjects);\n    if (deviceData) {\n        return (\n            <LinkComponent\n                key=\"1\"\n                data-handle=\"device-manager-source-link\"\n                style={styles.backToSourceLink}\n                to=\"/webui-one/DeviceManager\"\n            >\n                {`See '${deviceData.name}' in Device manager`}\n            </LinkComponent>\n        );\n    }\n\n    const serviceData = tryFindServiceData(pathObjects, servicePoints);\n    if (serviceData) {\n        return (\n            <LinkComponent\n                key=\"2\"\n                data-handle=\"service-manager-source-link\"\n                style={styles.backToSourceLink}\n                to={`/webui-one/ServiceManager${serviceData.parentPath}`}\n            >\n                {`See '${serviceData.name}' in Service manager`}\n            </LinkComponent>\n        );\n    }\n\n    return null;\n}\n\nBackToSourceLink.propTypes = {\n    path: PropTypes.string.isRequired,\n    servicePoints: PropTypes.shape(Object),\n    actionPath: PropTypes.string,\n    LinkComponent: PropTypes.elementType,\n    onLoad: PropTypes.func,\n};\n\nBackToSourceLink.defaultProps = {\n    LinkComponent: Link,\n};\n\nexport {\n    tryFindDeviceData as _tryFindDeviceData,\n    tryFindServiceData as _tryFindServiceData,\n};\n\nexport default BackToSourceLink;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst backToSourceLink = {\n    color: defaultStyles.color1,\n    fontSize: defaultStyles.medium2,\n    padding: '0.6rem 1rem',\n    display: 'inline-block',\n    backgroundColor: defaultStyles.color3,\n    borderRadius: '2rem',\n    textDecoration: 'none',\n    fontWeight: 'normal',\n    fontStretch: 'condensed',\n};\n\nexport default {\n    backToSourceLink,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ToolTip from '../ToolTip/ToolTip';\n\nexport default class ContentIndicator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.showTooltip = this.showTooltip.bind(this);\n        this.hideTooltip = this.hideTooltip.bind(this);\n    }\n\n    showTooltip() {\n        this.tooltip.show();\n    }\n\n    hideTooltip() {\n        this.tooltip.hide();\n    }\n\n    render() {\n        const {\n            direction,\n            toolTipText,\n            toolTipStyle,\n        } = this.props;\n\n        return (\n            <div\n                style={toolTipStyle}\n                onMouseEnter={this.showTooltip}\n                onMouseLeave={this.hideTooltip}\n                data-handle={'content-indicator'}\n            >\n                <ToolTip\n                    direction={direction}\n                    toolTipText={toolTipText}\n                    ref={(tt) => { this.tooltip = tt; }}\n                />\n            </div>\n        );\n    }\n}\n\nContentIndicator.propTypes = {\n    direction: PropTypes.string.isRequired,\n    toolTipText: PropTypes.string.isRequired,\n    toolTipStyle: PropTypes.shape({}).isRequired,\n};\n\nContentIndicator.defaultProps = {\n    direction: 'up',\n    toolTipText: '',\n    toolTipStyle: PropTypes.shape({}),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    isObject,\n} from '@webui-one/core/utils/object';\nimport { operIndicatorStyle, actionIndicatorStyle } from './ContentIndicatorsStyles';\nimport ContentIndicator from './ContentIndicator';\n\nconst ContentIndicators = ({ schemaIncludes }) => {\n    if (!isObject(schemaIncludes)\n        || (schemaIncludes.oper === false\n            && schemaIncludes.actions === false\n        )\n    ) {\n        return null;\n    }\n\n    const content = [];\n\n    if (schemaIncludes.oper) {\n        content.push(\n            <ContentIndicator\n                key={2}\n                direction={'lowerLeft'}\n                toolTipText={'There is operational data on this page'}\n                toolTipStyle={operIndicatorStyle}\n            />,\n        );\n    }\n\n    if (schemaIncludes.actions) {\n        content.push(\n            <ContentIndicator\n                key={3}\n                direction={'lowerLeft'}\n                toolTipText={'There are actions on this page'}\n                toolTipStyle={actionIndicatorStyle}\n            />,\n        );\n    }\n\n    return (\n        <div style={{ display: 'flex' }}>\n            <>\n                {content}\n            </>\n        </div>\n    );\n};\n\nContentIndicators.propTypes = {\n    schemaIncludes: PropTypes.shape({\n        oper: PropTypes.bool.isRequired,\n        actions: PropTypes.bool.isRequired,\n    }),\n};\n\nContentIndicators.defaultProps = {\n};\n\nexport default ContentIndicators;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst indicatorStyle = {\n    position: 'relative',\n    border: 'none',\n    borderRadius: '0.125rem',\n    width: '1rem',\n    marginLeft: '0.5rem',\n    marginTop: '0.15rem',\n    marginBottom: '-0.5rem',\n    height: '0.25rem',\n};\n\nconst operIndicatorStyle = {\n    ...indicatorStyle,\n    backgroundColor: defaultStyles.color12,\n};\n\nconst actionIndicatorStyle = {\n    ...indicatorStyle,\n    backgroundColor: defaultStyles.color1,\n};\n\nexport {\n    operIndicatorStyle,\n    actionIndicatorStyle,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddSymbol from '@webui-one/styles/static/AddSymbol';\nimport styles from './EmptyLeafStyles';\n\n\nfunction EmptyLeaf({ onCreate, exists, editable }) {\n    return (\n        <div style={styles.container}>\n            {!exists && editable ? (\n                <button\n                    type=\"button\"\n                    data-handle=\"empty-leaf-create\"\n                    style={styles.btn}\n                    onClick={onCreate}\n                >\n                    <AddSymbol />\n                </button>\n              )\n                :\n                <span data-handle=\"empty-leaf-exists\" />\n            }\n        </div>\n    );\n}\n\nEmptyLeaf.propTypes = {\n    onCreate: PropTypes.func.isRequired,\n    exists: PropTypes.bool,\n    editable: PropTypes.bool,\n};\n\nEmptyLeaf.defaultProps = {\n    onCreate: () => (null),\n};\n\nexport default EmptyLeaf;\n","const btn = {\n    border: 'none',\n    borderRadius: '1.5rem',\n    marginLeft: '0.5rem',\n    height: '1.5rem',\n    width: '1.5rem',\n    alignSelf: 'center',\n    padding: '0',\n    cursor: 'pointer',\n    marginTop: '0.5rem',\n};\n\nconst container = {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 0,\n};\n\nexport default {\n    container,\n    btn,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageBox from './MessageBox';\nimport style from './MessageBoxStyles';\n\n\nconst NoData = (props) => {\n    const { onClick } = props;\n    return (\n        <MessageBox name=\"no-data-box\">\n            <>\n                All content in this view is hidden.\n                <button\n                    type=\"button\"\n                    style={style.button}\n                    onClick={onClick}\n                    data-handle=\"show-everything-button\"\n                >\n                    Show all\n                </button>\n            </>\n        </MessageBox>\n    );\n};\n\nNoData.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default NoData;\n","import React from 'react';\nimport MessageBox from './MessageBox';\n\nconst NotFound = () => (\n    <MessageBox name=\"not-found\">\n        This path does not exist\n    </MessageBox>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddSymbol from '@webui-one/styles/static/AddSymbol';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport useSafeOnClick from '../../hooks/useSafeOnClick';\nimport style from './PresenceButtonStyles';\n\nconst PresenceButton = ({ onCreate, disabled, path }) => (\n    <button\n        type=\"button\"\n        style={style.button}\n        disabled={disabled}\n        onClick={useSafeOnClick(onCreate)}\n        data-handle={`PresenceButton-${path}`}\n    >\n        {disabled && (\n            <AddSymbol\n                symbolColor={defaultStyles.color6}\n                borderColor={defaultStyles.color6}\n                bgColor={defaultStyles.color3}\n            />\n        )}\n        {!disabled && <AddSymbol />}\n    </button>\n);\n\nPresenceButton.propTypes = {\n    disabled: PropTypes.bool,\n    onCreate: PropTypes.func,\n    path: PropTypes.string,\n};\n\nPresenceButton.defaultProps = {\n    disabled: false,\n};\n\nexport default PresenceButton;\n","\nexport default {\n    button: {\n        width: '100%',\n        height: '100%',\n        border: 'none',\n        backgroundColor: 'transparent',\n        padding: '0',\n        cursor: 'pointer',\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@webui-one/router';\nimport TrashcanSymbol from '@webui-one/styles/static/TrashcanSymbol';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport useSafeOnClick from '../hooks/useSafeOnClick';\nimport InformationButton from './Information/InformationButton';\nimport PresenceButton from './PresenceButton/PresenceButton';\nimport style from './SchemaHeaderStyles';\n\nconst SchemaHeader = ({\n    exists,\n    isDirty,\n    isEditMode,\n    isOperdata,\n    isPresenceContainer,\n    isRootPath,\n    link,\n    linkPostfix,\n    name,\n    onCreate,\n    onDelete,\n    path,\n    presenceContainerOnConfigEditorRoot,\n}) => {\n    const safeOnClick = useSafeOnClick(onDelete);\n\n    if (isRootPath && !presenceContainerOnConfigEditorRoot) return null;\n\n    const shouldDisplayPresenceButton = (\n        isPresenceContainer && !exists && !isOperdata\n    );\n    const shouldDisplayTrashcan = isPresenceContainer && isEditMode && exists;\n    const shouldDisplayInfoButton = isEditMode;\n    const disablePresenceButton = (\n        !isPresenceContainer || exists === true\n    );\n\n    const linkName = `${name}${linkPostfix}`;\n\n    return (\n        <div style={style.rootContainer} data-handle={name}>\n            <div style={isOperdata ? style.linkWrapperOper : style.linkWrapper}>\n                {isDirty && (<div style={style.dot} data-handle=\"dot\" />)}\n                {shouldDisplayPresenceButton && (\n                    <div style={style.button}>\n                        <PresenceButton\n                            key={`${path}-presence-button`}\n                            path={path}\n                            disabled={disablePresenceButton}\n                            onCreate={onCreate}\n                        />\n                    </div>\n                )}\n                {shouldDisplayTrashcan && (\n                    <button\n                        type=\"button\"\n                        style={style.button}\n                        onClick={safeOnClick}\n                        data-handle=\"deleteContainer\"\n                    >\n                        <TrashcanSymbol color={defaultStyles.color1} />\n                    </button>\n                )}\n                {shouldDisplayInfoButton && (\n                    <div\n                        style={style.button}\n                        data-handle=\"infoContainer\"\n                    >\n                        <InformationButton\n                            circleColor={defaultStyles.color1}\n                            iColor={defaultStyles.color3}\n                            path={path}\n                        />\n                    </div>\n                )}\n                {!presenceContainerOnConfigEditorRoot &&\n                    <Link style={style.textLink} to={link}>{linkName}</Link>\n                }\n                {presenceContainerOnConfigEditorRoot &&\n                    <span style={style.text}>{linkName}</span>\n                }\n            </div>\n            <div style={style.line} />\n        </div>\n    );\n};\n\nSchemaHeader.propTypes = {\n    exists: PropTypes.bool,\n    isDirty: PropTypes.bool,\n    isEditMode: PropTypes.bool,\n    isOperdata: PropTypes.bool,\n    isPresenceContainer: PropTypes.bool,\n    isRootPath: PropTypes.bool,\n    link: PropTypes.string.isRequired,\n    linkPostfix: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    onCreate: PropTypes.func,\n    onDelete: PropTypes.func,\n    path: PropTypes.string.isRequired,\n    presenceContainerOnConfigEditorRoot: PropTypes.bool,\n};\n\nSchemaHeader.defaultProps = {\n    dirty: false,\n    dirtyRefCount: 0,\n    exists: false,\n    isPresenceContainer: false,\n    linkPostfix: '/',\n};\n\nexport default SchemaHeader;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst linkWrapper = {\n    position: 'relative',\n    borderColor: defaultStyles.color7,\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    backgroundColor: defaultStyles.color11,\n    display: 'flex',\n    padding: '0.282rem 0.5rem',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'break-all',\n};\n\nexport default {\n    rootContainer: {\n        display: 'flex',\n        margin: '1rem 0',\n    },\n    linkWrapper,\n    linkWrapperOper: {\n        ...linkWrapper,\n        backgroundColor: defaultStyles.color12,\n        borderColor: defaultStyles.color12,\n    },\n    dot: {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        margin: '-1px',\n        padding: '1px',\n        width: '4px',\n        height: '100%',\n        backgroundColor: defaultStyles.color10,\n    },\n    textLink: {\n        textDecoration: 'none',\n        color: defaultStyles.color1,\n        ...defaultStyles.fontCondensed,\n    },\n    text: {\n        textDecoration: 'none',\n        color: defaultStyles.color8,\n        ...defaultStyles.fontCondensed,\n    },\n    button: {\n        border: 'none',\n        cursor: 'pointer',\n        width: '1rem',\n        height: '1rem',\n        padding: '0',\n        marginRight: '0.5rem',\n        backgroundColor: 'transparent',\n    },\n    line: {\n        backgroundColor: defaultStyles.color7,\n        flexGrow: '1',\n        alignSelf: 'center',\n        height: '1px',\n    },\n    precenceTogglerWrapper: {\n        position: 'relative',\n    },\n    precenceToggler: {\n        position: 'absolute',\n        right: '0',\n        bottom: '0.6rem',\n    },\n};\n","import React, {\n    useCallback,\n    useEffect,\n    useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport { delay } from '@webui-one/core/utils/async';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport style from './StateButtonStyles';\n\nconst states = {\n    DONE: 'done',\n    ERROR: 'error',\n    IDLE: 'idle',\n    PENDING: 'pending',\n};\n\nconst COOLDOWN_TIME = 2000;\n\nconst useAsyncState = (\n    func,\n    cooldownTime,\n    {\n        funcs: {\n            AbortCtrl = AbortController,\n        } = {},\n    } = {},\n) => {\n    const [state, setState] = useState(states.IDLE);\n    const [running, setRunning] = useState(false);\n    const execute = useCallback(() => { setRunning(true); }, []);\n\n    useEffect(() => {\n        if (!running) return () => undefined;\n        const controller = new AbortCtrl();\n        const signal = controller.signal;\n        const updateState = newState => setState(newState);\n        const updateRunning = newState => setRunning(newState);\n\n        const stop = () => {\n            updateState(states.IDLE);\n            updateRunning(false);\n        };\n\n        async function run() {\n            try {\n                updateState(states.PENDING);\n                await func({ signal });\n                updateState(states.DONE);\n                await delay(cooldownTime)();\n            } catch (error) {\n                updateState(states.ERROR);\n                await delay(cooldownTime)();\n            }\n            stop();\n        }\n\n        run();\n\n        return () => {\n            controller.abort();\n            stop();\n        };\n    }, [AbortCtrl, cooldownTime, func, running, setRunning, setState]);\n\n    return [state, execute];\n};\n\n\nfunction StateButton({\n    dataHandle,\n    cooldownTime = COOLDOWN_TIME,\n    doneLabel = 'done',\n    enabled,\n    errorLabel = 'error',\n    label,\n    onClick,\n    styles: {\n        disabledStyle = defaultStyles.buttonDisabled,\n        enabledStyle = defaultStyles.button,\n        loaderColor = defaultStyles.color3,\n        loaderStyle = style.loader,\n        wrapperStyle = style.wrapper,\n    } = {},\n    funcs: {\n        useFunc = useAsyncState,\n    } = {},\n} = {}) {\n    const [state, execute] = useFunc(onClick, cooldownTime);\n    const disabled = !enabled || state !== states.IDLE;\n\n    return (\n        <div style={wrapperStyle}>\n            <button\n                data-handle={dataHandle}\n                disabled={disabled}\n                onClick={execute}\n                style={disabled ? disabledStyle : enabledStyle}\n                type=\"button\"\n            >\n                <div style={style.label}>\n                    {(state === states.IDLE) && (\n                        <div>{label}</div>\n                    )}\n                    {(state === states.ERROR) && (\n                        <div>{errorLabel}</div>\n                    )}\n                    {(state === states.DONE) && (\n                        <div>{doneLabel}</div>\n                    )}\n                    {(state === states.PENDING) && (\n                        <div style={loaderStyle}>\n                            <Loader color={loaderColor} />\n                        </div>\n                    )}\n                </div>\n            </button>\n        </div>\n    );\n}\n\nStateButton.propTypes = {\n    cooldownTime: PropTypes.number,\n    dataHandle: PropTypes.string,\n    doneLabel: PropTypes.string,\n    enabled: PropTypes.bool,\n    errorLabel: PropTypes.string,\n    funcs: PropTypes.shape({\n        useFunc: PropTypes.func,\n    }),\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    styles: PropTypes.shape({\n        enabledStyle: PropTypes.shape({}),\n        disabledStyle: PropTypes.shape({}),\n        loaderStyle: PropTypes.shape({}),\n        wrapperStyle: PropTypes.shape({}),\n    }),\n};\n\nexport default StateButton;\n\nexport {\n    states,\n    COOLDOWN_TIME,\n    useAsyncState,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    loader: {\n        transform: 'scale(0.5)',\n    },\n    wrapper: {\n        backgroundColor: defaultStyles.color3,\n        margin: '0.3rem 0.0rem 0.3rem 0.0rem',\n        borderRadius: '0rem',\n        cursor: 'pointer',\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isDeepEqual } from '@webui-one/core/utils/object';\n\nimport {\n    style,\n    getGridCellStyle,\n    getGridColumnsStyle,\n} from './GridStyles';\n\n\nconst getRowContentWidth = (rows) => {\n    if (rows && rows.children && rows.children.length > 0) {\n        const widths = Array.from(rows.children).map(c => c.getBoundingClientRect().width);\n        return Math.max(...widths);\n    }\n    return undefined;\n};\n\nconst getContainerWidth = (container) => {\n    if (!container) return undefined;\n    return container.getBoundingClientRect().width;\n};\n\n// 16 might seems like a magic number but it should be same amount as column gap (1rem).\nconst COLUMN_GAP_WIDTH = 16;\nconst calculateGrid = (widthOfColumn, widthOfContainer, numChildren, minimumRows) => {\n    let columnCount;\n\n    if (widthOfContainer && widthOfColumn) {\n        columnCount = Math.floor(widthOfContainer / (widthOfColumn + COLUMN_GAP_WIDTH)) || 1;\n    }\n    let rowCount = Math.ceil(numChildren / (columnCount || 1));\n    rowCount = rowCount < minimumRows ?\n        Math.min(minimumRows, numChildren) : rowCount;\n\n    return { columnCount, rowCount };\n};\n\nconst hasStateChanged = (state, nextState) => {\n    const { columnCount, rowCount, widthOfColumn } = state;\n    if (columnCount !== nextState.columnCount) return true;\n    if (rowCount !== nextState.rowCount) return true;\n    if (widthOfColumn !== nextState.widthOfColumn) return true;\n    return false;\n};\n\nconst hasPropsChanged = (props, nextProps) => {\n    const { children } = props;\n    if (!isDeepEqual(children, nextProps.children)) return true;\n    return false;\n};\n\nconst shouldRenderBindingLine = (ix, rowCount, numElements) =>\n    (ix % rowCount) + 1 !== rowCount && (ix + 1) !== numElements;\n\nconst getGridChildren = children => children.reduce((acc, cur) => {\n    if (cur && cur.props && cur.props.spanRow === true) return acc;\n    acc.push(cur);\n    return acc;\n}, []);\n\nconst getSpanChildren = children => children.reduce((acc, cur, ix) => {\n    if (cur && cur.props && cur.props.spanRow === true) {\n        acc.push([cur, ix - 1]);\n    }\n    return acc;\n}, []);\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateDimensions = this.updateDimensions.bind(this);\n        this.state = {\n            columnCount: undefined,\n            rowCount: undefined,\n            widthOfColumn: undefined,\n        };\n    }\n\n    componentDidMount() {\n        const { children, minimumRows } = this.props;\n        if (children.length) {\n            const widthOfColumn = getRowContentWidth(this.columnsDivRef);\n            const widthOfContainer = getContainerWidth(this.containerDivRef);\n\n            const { columnCount, rowCount } = calculateGrid(\n                widthOfColumn,\n                widthOfContainer,\n                getGridChildren(children).length,\n                minimumRows,\n            );\n            // NOTE (stelarss):\n            // From react/no-did-mount-set-state documentation\n            // \"Updating the state after a component mount will trigger a second render()\"\n            // But in this case is a second render the thing we want\n            //\n            // eslint-disable-next-line react/no-did-mount-set-state\n            this.setState({\n                widthOfColumn,\n                columnCount,\n                rowCount,\n            });\n            this.subscribeResize();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (hasStateChanged(this.state, nextState)) return true;\n        if (hasPropsChanged(this.props, nextProps)) return true;\n        return false;\n    }\n\n    componentWillUnmount() {\n        if (this.resizeObserver) this.resizeObserver.disconnect();\n    }\n\n    subscribeResize() {\n        if (this.containerDivRef && typeof ResizeObserver !== 'undefined') {\n            const ro = new ResizeObserver((entries) => {\n                entries.forEach((entry) => {\n                    const cr = entry.contentRect;\n                    this.updateDimensions(cr.width);\n                });\n            });\n            ro.observe(this.containerDivRef);\n            this.resizeObserver = ro;\n        }\n    }\n\n    updateDimensions(newWidthOfContainer) {\n        const { widthOfColumn, columnCount: oldColumnCount } = this.state;\n        const { children, minimumRows } = this.props;\n        const { columnCount, rowCount } = calculateGrid(\n            widthOfColumn,\n            newWidthOfContainer,\n            getGridChildren(children).length,\n            minimumRows,\n        );\n        if (oldColumnCount === columnCount) {\n            return;\n        }\n        this.setState({\n            columnCount,\n            rowCount,\n        });\n    }\n\n    renderAsGrid(columnCount, rowCount, children) {\n        const { shouldAddBinder, rowGap } = this.props;\n\n        const spanCellIndex = children.findIndex(c => c && c.props && c.props.spanRow);\n\n        const columnsStyle = getGridColumnsStyle(columnCount, rowCount, { rowGap, spanCellIndex });\n        const items = getGridChildren(children).map((child, ix) => {\n            const cellStyle = getGridCellStyle(ix, rowCount, columnCount, child);\n            return (\n                <div\n                    style={cellStyle}\n                    key={ix}\n                >\n                    {shouldAddBinder && shouldRenderBindingLine(ix, rowCount, children.length) && (\n                        <div style={style.grid.bindingLine} />\n                    )}\n                    {child}\n                </div>\n            );\n        });\n\n        const spanItems = getSpanChildren(children).map(([child, ix]) => {\n            const cellStyle = getGridCellStyle(ix, rowCount, columnCount, child);\n            return (\n                <div\n                    style={cellStyle}\n                    key={ix}\n                >\n                    {child}\n                </div>\n            );\n        });\n\n        return (\n            <div\n                style={columnsStyle}\n                ref={(r) => { this.columnsDivRef = r; }}\n            >\n                { items }\n                { spanItems }\n            </div>\n        );\n    }\n\n    render() {\n        const { children, dataHandle } = this.props;\n        const { columnCount, rowCount } = this.state;\n        if (children.length < 1) {\n            return null;\n        }\n\n        const content = this.renderAsGrid(columnCount, rowCount, children);\n\n        return (\n            <div\n                ref={(c) => { this.containerDivRef = c; }}\n                data-handle={dataHandle}\n                style={style.grid.container}\n            >\n                {content}\n            </div>\n        );\n    }\n}\n\nGrid.propTypes = {\n    children: PropTypes.arrayOf(Object).isRequired,\n    dataHandle: PropTypes.string,\n    minimumRows: PropTypes.number,\n    rowGap: PropTypes.string,\n    shouldAddBinder: PropTypes.bool,\n};\n\nGrid.defaultProps = {\n    minimumRows: 3,\n};\n\nexport default (Grid);\n\nexport {\n    calculateGrid as _calculateGrid,\n    getContainerWidth as _getContainerWidth,\n    getRowContentWidth as _getRowContentWidth,\n    hasPropsChanged as _hasPropsChanged,\n    hasStateChanged as _hasStateChanged,\n    shouldRenderBindingLine as _shouldRenderBindingLine,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { range, range1 } from '@webui-one/core/utils/array';\n\nconst style = {\n    grid: {\n        container: {\n            overflow: 'visible',\n            margin: '1rem 0',\n        },\n        columns: {\n            overflow: 'visible',\n            display: 'grid',\n            gridAutoFlow: 'column',\n        },\n        columnItem: {\n            WebkitColumnBreakInside: 'avoid',\n            pageBreakInside: 'avoid',\n            breakInside: 'avoid',\n            display: 'flex',\n            backgroundColor: 'inherit',\n            position: 'relative',\n        },\n        bindingLine: {\n            backgroundColor: defaultStyles.backgroundColor1,\n            bottom: '-17px',\n            height: '1.1rem',\n            left: '50%',\n            position: 'absolute',\n            width: '0.125rem',\n        },\n    },\n};\nconst getGridColumnGapStyle = (columnIndex, rowCount) => {\n    if (!columnIndex) return {};\n    if (!rowCount) return {};\n\n    return {\n        gridArea: `1 / ${columnIndex} / ${rowCount + 1} / ${columnIndex}`,\n    };\n};\n\nconst shouldAppendSpanRow = (spanCellIndex, rowIndex, rowCount, columnCount) => {\n    if (spanCellIndex < 0) return false;\n    const rowCells = range(0, columnCount).map(c => rowIndex + rowCount * c);\n\n    if (rowCells.includes(spanCellIndex - 1)) {\n        return true;\n    }\n    return false;\n};\n\nconst getGridColumnsStyle = (\n    columnCount,\n    rowCount,\n    {\n        rowGap = 'normal',\n        spanCellIndex = -1,\n    } = {},\n) => {\n    if (!(columnCount && rowCount)) {\n        return { display: 'flex' };\n    }\n\n    const gridTemplateAreas = range1(1, rowCount).reduce((acc, cur, ix) => {\n        const cells = range(0, columnCount).map(c => `c${ix + rowCount * c}`);\n        acc.push(`'${cells.join(' ')}'`);\n        if (shouldAppendSpanRow(spanCellIndex, ix, rowCount, columnCount)) {\n            const row = range(0, columnCount).map(() => `span-row-${ix}`);\n            acc.push(`'${row.join(' ')}'`);\n        }\n        return acc;\n    }, []).join(' ');\n\n    return {\n        ...style.grid.columns,\n        rowGap,\n        columnGap: '1rem',\n        gridTemplateAreas,\n        gridTemplateColumns: [...Array(columnCount)].map(() => '1fr').join(' '),\n    };\n};\n\nconst getRowIndex = (ix, rowCount) => ix % rowCount;\n\nconst getGridCellStyle = (ix, rowCount, columnCount, child) => {\n    let gridArea = `c${ix}`;\n\n    if (child && child.props && child.props.spanRow === true) {\n        gridArea = range(0, columnCount).map(\n            () => `span-row-${getRowIndex(ix, rowCount)}`,\n        ).join(' / ');\n    }\n\n    return {\n        ...style.grid.columnItem,\n        gridArea,\n    };\n};\n\nexport {\n    style,\n    getGridCellStyle,\n    getGridColumnsStyle,\n    getGridColumnGapStyle,\n    getRowIndex as _getRowIndex,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CrossSymbol = ({ color }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path fill={color} d=\"M14.83,12l8.59-8.59A2,2,0,0,0,20.59.59L12,9.17,3.41.59A2,2,0,0,0,.59,3.41L9.17,12,.59,20.59a2,2,0,1,0,2.83,2.83L12,14.83l8.59,8.59a2,2,0,0,0,2.83-2.83Z\" />\n    </svg>\n);\n\nCrossSymbol.propTypes = {\n    color: PropTypes.string,\n};\n\nCrossSymbol.defaultProps = {\n    color: 'white',\n};\n\nexport default CrossSymbol;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { selectKeepInputParams as _selectKeepInputParams } from 'modules/yangActions/selectors';\nimport {\n    loadActionAction as _loadActionAction,\n    resetActionThunk as _resetActionThunk,\n    runActionThunk as _runActionThunk,\n    keepInputParamsAction as _keepInputParamsAction,\n} from 'modules/yangActions/actions';\nimport StateButton from '@webui-one/components/ConfigRender/StateButton';\nimport ActionRunButton from '@webui-one/components/ConfigRender/ActionRunButton';\nimport ActionOutputContainer from './ActionOutputContainer';\nimport CheckBox from '@webui-one/components/ConfigRender/CheckBox/CheckBox';\nimport useSafeOnClick from '@webui-one/components/hooks/useSafeOnClick';\nimport style from './ActionContainerStyles';\n\nfunction ActionContainer({\n    enabled,\n    hideSuccessfullOutput,\n    keepInputParams,\n    label,\n    onKeepInputParams,\n    onLoadAction,\n    onResetAction,\n    onRunAction,\n    hasChildren,\n    path,\n    refreshPath,\n} = {}) {\n    useEffect(() => {\n        onLoadAction(path);\n    }, [onLoadAction, path]);\n\n    const onClick = () => {\n        const shouldRefresh = path === refreshPath && !keepInputParams;\n        return onRunAction(path, shouldRefresh, keepInputParams);\n    };\n\n    const safeOnClick = useSafeOnClick(onClick);\n    const onResetClick = useSafeOnClick(() => onResetAction(path));\n\n    return (\n        <>\n            <div style={style.wrapper}>\n                <ActionRunButton\n                    enabled={enabled}\n                    onClick={safeOnClick}\n                    label={label}\n                />\n                { hasChildren && (\n                    <>\n                        <StateButton\n                            onClick={onResetClick}\n                            dataHandle=\"reset-action-parameters\"\n                            enabled\n                            label=\"Reset action parameters\"\n                            styles={{ wrapperStyle: style.resetContainerStyles }}\n                        />\n                        <div style={style.checkboxWrapper}>\n                            <CheckBox\n                                editable\n                                value={keepInputParams}\n                                onSetValue={() => onKeepInputParams(path)}\n                                name=\"keepInputParams\"\n                            >\n                                <div style={style.checkboxLabel}>keep input parameters</div>\n                            </CheckBox>\n                        </div>\n                    </>\n                )}\n            </div>\n            <ActionOutputContainer\n                path={path}\n                hideSuccessfullOutput={hideSuccessfullOutput}\n            />\n        </>\n    );\n}\n\nActionContainer.propTypes = {\n    enabled: PropTypes.bool,\n    label: PropTypes.string,\n    path: PropTypes.string,\n    keepInputParams: PropTypes.bool,\n    onLoadAction: PropTypes.func,\n    onResetAction: PropTypes.func,\n    onRunAction: PropTypes.func,\n    onKeepInputParams: PropTypes.func,\n    hasChildren: PropTypes.bool,\n    hideSuccessfullOutput: PropTypes.bool,\n    refreshPath: PropTypes.string,\n};\n\nActionContainer.defaultProps = {\n    hideSuccessfullOutput: false,\n    enabled: true,\n    label: 'action',\n    keepInputParams: false,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const {\n        path,\n        funcs: {\n            selectKeepInputParams = _selectKeepInputParams,\n        } = {},\n    } = ownProps;\n    return ({\n        keepInputParams: selectKeepInputParams(state, path),\n    });\n};\n\nconst mapDispatchToProps = (\n    dispatch,\n    {\n        funcs: {\n            loadActionAction = _loadActionAction,\n            resetActionThunk = _resetActionThunk,\n            runActionThunk = _runActionThunk,\n            keepInputParamsAction = _keepInputParamsAction,\n        } = {},\n    } = {},\n) => ({\n    onLoadAction(actionPath) {\n        dispatch(loadActionAction({ actionPath }));\n    },\n    onResetAction(actionPath) {\n        return dispatch(resetActionThunk({ actionPath }));\n    },\n    onRunAction(actionPath, shouldRefresh, keepInputParams) {\n        return dispatch(runActionThunk({ actionPath, shouldRefresh, keepInputParams }));\n    },\n    onKeepInputParams(actionPath) {\n        dispatch(keepInputParamsAction(actionPath));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ActionContainer);\n\nexport {\n    ActionContainer as _ActionContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    wrapper: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    checkboxWrapper: {\n        backgroundColor: defaultStyles.backgroundColor1,\n        padding: '0.25rem 0.5rem',\n    },\n    checkboxLabel: {\n        margin: '0 0.5rem',\n        fontSize: '0.875rem',\n        alignSelf: 'center',\n    },\n    resetContainerStyles: {\n        backgroundColor: defaultStyles.color1,\n        margin: '0.3rem 0.5rem 0.3rem 0.0rem',\n        borderRadius: '2rem',\n        cursor: 'pointer',\n    },\n};\n","import { connect } from 'react-redux';\nimport { Link } from '@webui-one/router';\nimport {\n    selectLocationPathnameFromPath,\n} from 'modules/routing/selectors';\nimport { selectIsEditMode } from 'ConfigurationEditor/reducer';\nimport {\n    selectName,\n} from 'modules/schemas/reducer';\n\nimport ActionLink from '@webui-one/components/ConfigRender/ActionLink';\n\nconst mapStateToProps = (state, { path }) => ({\n    isEditMode: selectIsEditMode(state),\n    label: selectName(state, path),\n    LinkComponent: Link,\n    path,\n    to: selectLocationPathnameFromPath(state, path),\n});\n\nexport default connect(\n    mapStateToProps,\n)(ActionLink);\n","import { connect } from 'react-redux';\nimport {\n    selectError,\n    selectResult,\n    selectResultPending,\n    selectCompletedAt,\n} from 'modules/yangActions/selectors';\nimport { clearActionOutputAction } from 'modules/yangActions/actions';\nimport ActionOutput from '@webui-one/components/ConfigRender/ActionOutput';\n\nconst mapStateToProps = (state, ownProps) => ({\n    error: selectError(state, ownProps.path),\n    path: ownProps.path,\n    result: selectResult(state, ownProps.path),\n    resultPending: selectResultPending(state, ownProps.path),\n    completedAt: selectCompletedAt(state, ownProps.path),\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onClearActionOutput() {\n        dispatch(clearActionOutputAction(ownProps.path));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ActionOutput);\n","import { connect } from 'react-redux';\nimport { Link } from '@webui-one/router';\nimport BackToSourceLink from '@webui-one/components/ConfigRender/BackToSourceLink/BackToSourceLink';\nimport { selectActionPath } from 'modules/transactions/selectors';\nimport { selectServicePoints } from 'modules/services/selectors';\nimport { getServicePointsAndSchemas } from 'modules/services/actions';\n\nconst mapStateToProps = (state, ownProps) => {\n    const actionPath = selectActionPath(state, ownProps.path);\n    const servicePoints = selectServicePoints(state);\n\n    return {\n        actionPath,\n        LinkComponent: Link,\n        servicePoints,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad() {\n        dispatch(getServicePointsAndSchemas());\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(BackToSourceLink);\n\nexport {\n    BackToSourceLink as _BackToSourceLinkContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport style from './CaseStyles';\n\nimport { CONFIGURATION_EDITOR_NAME } from 'ConfigurationEditor/defines';\n\n// TODO: ENG-18495 fix hardcoded props to SchemaContainer\n// eslint-disable-next-line\nclass Case extends React.Component {\n    render() {\n        const { isLoading, path, SchemaContainer } = this.props;\n\n        return (\n            <div style={style.wrapper}>\n                <SchemaContainer\n                    key={path}\n                    path={path}\n                    applicationName={CONFIGURATION_EDITOR_NAME}\n                    includeSubfolders\n                    isEditMode\n                    isCase\n                    showActions\n                    showEmpty\n                    showOperdata\n                />\n                {isLoading && (\n                <div style={style.loader}>\n                    <Loader color={defaultStyles.color6} />\n                </div>\n)}\n            </div>\n        );\n    }\n}\n\nCase.propTypes = {\n    path: PropTypes.string.isRequired,\n    isLoading: PropTypes.bool,\n    SchemaContainer: PropTypes.elementType.isRequired,\n};\n\nexport default Case;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { loadStatus as caseLoadStatus } from 'modules/nodes/reducer';\nimport { selectNode } from 'modules/nodes/selectors';\n\nimport Case from './Case';\n\nconst CaseContainer = ({ path, isLoading, SchemaContainer }) => (\n    <Case path={path} isLoading={isLoading} SchemaContainer={SchemaContainer} />\n);\n\nCaseContainer.propTypes = {\n    path: PropTypes.string,\n    isLoading: PropTypes.bool,\n    SchemaContainer: PropTypes.elementType.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const { path } = ownProps;\n    const { loadStatus } = selectNode(state, path);\n    const isLoading = loadStatus === caseLoadStatus.LOADING;\n    return {\n        path,\n        isLoading,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n)(CaseContainer);\n","export default {\n    wrapper: {\n        position: 'relative',\n    },\n    loader: {\n        position: 'absolute',\n        top: '-1rem',\n        left: '-0.75rem',\n        transform: 'scale(.5)',\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CaseContainer from 'Common/Components/ConfigRender/CaseContainer';\nimport style from './ChoiceStyles';\n\nconst getMarkerStyle = (isSetCase, isVisibleCase) => {\n    if (!isSetCase) return style.noMarker;\n    if (isVisibleCase) return style.selectedMarker;\n    return style.marker;\n};\n\nclass Choice extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onSelectCase = this.onSelectCase.bind(this);\n        this.state = {};\n    }\n\n    onSelectCase(newSelectedCaseValue) {\n        const { selectedCaseValue } = this.state;\n        if (selectedCaseValue === newSelectedCaseValue) return;\n        this.setState({ selectedCaseValue: newSelectedCaseValue });\n    }\n\n    render() {\n        const { caseValue, cases, name, path, SchemaContainer } = this.props;\n        const { selectedCaseValue } = this.state;\n        const visibleCase = selectedCaseValue || caseValue || cases[0];\n\n        const caseTabs = cases.map(c => (\n            <div\n                key={c}\n                style={c === visibleCase ? style.activeTab : style.tab}\n                data-handle={`case-${c}`}\n                data-case-selected={c === visibleCase}\n                data-case-active={c === caseValue}\n            >\n                <button\n                    type=\"button\"\n                    data-handle={`case-button-${c}`}\n                    style={style.tabButton}\n                    onClick={() => this.onSelectCase(c)}\n                >\n                    {c}\n                    <div style={getMarkerStyle(c === caseValue, c === visibleCase)} />\n                </button>\n            </div>\n        ));\n\n        const visibleCasePath = `${path}/${visibleCase}`;\n\n        return (\n            <div style={style.main} data-handle={`choice-${name}`}>\n                <div style={style.title}>{name}</div>\n                <div style={style.tabContainer}>\n                    {caseTabs}\n                </div>\n                <div style={style.caseWrapper}>\n                    <CaseContainer\n                        key={visibleCasePath}\n                        path={visibleCasePath}\n                        SchemaContainer={SchemaContainer}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nChoice.propTypes = {\n    cases: PropTypes.arrayOf(PropTypes.string),\n    caseValue: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    SchemaContainer: PropTypes.elementType.isRequired,\n};\n\nexport default Choice;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { loadStatus as caseLoadStatus } from 'modules/nodes/reducer';\nimport { selectNode } from 'modules/nodes/selectors';\nimport { isDeepEqual, isEmpty } from '@webui-one/core/utils/object';\n\nimport {\n    clearCaseAction,\n} from 'modules/nodes/actions';\n\nimport {\n    getCaseThunk,\n} from 'modules/nodes/thunks';\n\nimport {\n    reloadCaseDataThunk,\n} from 'modules/data/actions';\n\nimport Choice from './Choice';\n\nclass ChoiceContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const {\n            choicePath,\n            loadStatus,\n            nodepath,\n            path,\n            onGetCase,\n        } = this.props;\n\n        if (loadStatus !== caseLoadStatus.LOADING) {\n            onGetCase(path, nodepath, choicePath);\n        }\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const {\n            cases,\n            caseValue,\n            loadStatus,\n        } = this.props;\n\n        if (loadStatus !== nextProps.loadStatus) return true;\n        if (caseValue !== nextProps.caseValue) return true;\n        if (!isDeepEqual(cases, nextProps.cases)) return true;\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            caseValue,\n            choicePath,\n            loadStatus,\n            nodepath,\n            path,\n            onGetCase,\n            onReloadCaseData,\n        } = this.props;\n\n        if (loadStatus === undefined || path !== prevProps.path) {\n            onGetCase(path, nodepath, choicePath);\n        }\n        if (loadStatus !== 'LOADING' && caseValue !== undefined && caseValue !== prevProps.caseValue) {\n            onReloadCaseData(caseValue);\n        }\n    }\n\n    componentWillUnmount() {\n        const { onClearCase, path } = this.props;\n        onClearCase(path);\n    }\n\n    render() {\n        const {\n            caseValue,\n            cases,\n            name,\n            path,\n            SchemaContainer,\n        } = this.props;\n\n        if (cases && cases.length === 0) return null;\n\n        return (\n            <Choice\n                cases={cases}\n                caseValue={caseValue}\n                name={name}\n                path={path}\n                SchemaContainer={SchemaContainer}\n            />\n        );\n    }\n}\n\nChoiceContainer.propTypes = {\n    cases: PropTypes.arrayOf(PropTypes.string),\n    caseValue: PropTypes.string,\n    choicePath: PropTypes.string.isRequired,\n    loadStatus: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    nodepath: PropTypes.string.isRequired,\n    onClearCase: PropTypes.func,\n    onGetCase: PropTypes.func,\n    onReloadCaseData: PropTypes.func,\n    path: PropTypes.string.isRequired,\n    SchemaContainer: PropTypes.elementType.isRequired,\n};\n\nconst selectCaseNode = (state, ownProps) => {\n    const { path, nodepath } = ownProps;\n    const node = selectNode(state, nodepath);\n    if (!isEmpty(node)) return node;\n    return selectNode(state, path);\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const node = selectCaseNode(state, ownProps);\n\n    const { caseValue, loadStatus } = node;\n\n    return {\n        caseValue,\n        loadStatus,\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onClearCase(path) {\n        dispatch(clearCaseAction(path));\n    },\n    onGetCase(path, nodepath, choice) {\n        dispatch(getCaseThunk({ path, nodepath, choice }));\n    },\n    onReloadCaseData(caseValue) {\n        const {\n            showOperdata,\n            path,\n            parentNodepath,\n        } = ownProps;\n        dispatch(reloadCaseDataThunk({\n            path,\n            parentNodepath,\n            caseValue,\n            showOperdata,\n        }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ChoiceContainer);\n\nexport {\n    ChoiceContainer as _ChoiceContainer,\n    mapStateToProps as _mapStateToProps,\n    mapDispatchToProps as _mapDispatchToProps,\n    selectCaseNode as _selectCaseNode,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst tab = {\n    backgroundColor: defaultStyles.color7,\n    color: defaultStyles.color1,\n    cursor: 'pointer',\n    padding: '0.625rem 0.75rem 0.375rem 0.75rem',\n};\n\nconst marker = {\n    backgroundColor: defaultStyles.color1,\n    height: '0.25rem',\n    marginTop: '0.0625rem',\n};\n\nexport default {\n    main: {\n        backgroundColor: defaultStyles.color3,\n        margin: '1rem 0',\n        border: `1px solid ${defaultStyles.color7}`,\n    },\n    title: {\n        backgroundColor: defaultStyles.color7,\n        padding: '.8125rem 1rem',\n        fontSize: defaultStyles.medium2,\n        color: defaultStyles.textColor2,\n    },\n    tab,\n    caseWrapper: {\n        padding: '0 1rem',\n    },\n    activeTab: {\n        ...tab,\n        color: defaultStyles.textColor2,\n        backgroundColor: defaultStyles.color3,\n        cursor: 'unset',\n    },\n    tabButton: {\n        padding: '0',\n        border: 'none',\n        backgroundColor: 'transparent',\n        fontSize: defaultStyles.medium2,\n        color: 'inherit',\n        cursor: 'inherit',\n        ...defaultStyles.fontCondensed,\n    },\n    tabContainer: {\n        backgroundColor: defaultStyles.color7,\n        display: 'flex',\n    },\n    marker,\n    noMarker: {\n        ...marker,\n        backgroundColor: 'transparent',\n    },\n    selectedMarker: {\n        ...marker,\n        backgroundColor: defaultStyles.color2,\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { _JsonRpcError as JsonRpcError } from '@webui-one/core/jsonrpc';\nimport { isChildOfPath } from '@webui-one/core/utils/path';\nimport { isFunction } from '@webui-one/core/utils/functional';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport { selectRawLoading as selectLoading } from 'modules/nodes/selectors';\nimport { getDataThunk } from 'modules/data/actions';\nimport { selectError } from 'modules/data/selectors';\nimport ipcPropTypes from 'modules/ipc/propTypes';\nimport ErrorBox from '@webui-one/components/ConfigRender/ErrorBox';\nimport SchemaContainer from 'Common/Components/ConfigRender/SchemaContainer';\n\nconst currentPathModified = (path, modifiedPath) => (\n    path === modifiedPath || isChildOfPath(path, modifiedPath)\n);\n\nclass DataContainer extends React.Component {\n    componentDidMount() {\n        this.load();\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const {\n            error,\n            includeSubfolders,\n            ipcModification,\n            path,\n            showActions,\n            showEmpty,\n            showOperdata,\n        } = this.props;\n\n        if (nextProps.ipcModification\n            && ipcModification !== nextProps.ipcModification\n            && currentPathModified(path, nextProps.ipcModification.path)\n        ) {\n            return true;\n        }\n\n        if (error !== nextProps.error) {\n            return true;\n        }\n\n        if (path !== nextProps.path) {\n            return true;\n        }\n        if (includeSubfolders !== nextProps.includeSubfolders) {\n            return true;\n        }\n        if (showOperdata !== nextProps.showOperdata) {\n            return true;\n        }\n        if (showEmpty !== nextProps.showEmpty) {\n            return true;\n        }\n        if (showActions !== nextProps.showActions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            includeSubfolders,\n            ipcModification,\n            path,\n            showEmpty,\n            showOperdata } = this.props;\n        const {\n            includeSubfolders: prevSubfolders,\n            ipcModification: prevIpcModification,\n            path: prevPath,\n            showEmpty: prevShowEmpty,\n            showOperdata: prevShowOperdata,\n        } = prevProps;\n\n        if (prevPath !== path ||\n            prevSubfolders !== includeSubfolders ||\n            prevShowEmpty !== showEmpty ||\n            prevIpcModification !== ipcModification ||\n            prevShowOperdata !== showOperdata) {\n            this.load();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.aborter && isFunction(this.aborter.abort)) {\n            this.aborter.abort();\n        }\n    }\n\n    load() {\n        const { onLoad, path, includeSubfolders, showEmpty, showOperdata } = this.props;\n        if (this.aborter && isFunction(this.aborter.abort)) {\n            this.aborter.abort();\n        }\n        this.aborter = onLoad(path, includeSubfolders, showEmpty, showOperdata);\n    }\n\n    render() {\n        const { error, isLoading } = this.props;\n        if (isLoading === true) {\n            return <Loader color=\"white\" />;\n        }\n        if (error) {\n            return <ErrorBox error={error} />;\n        }\n        return (\n            <SchemaContainer {...this.props} />\n        );\n    }\n}\n\nDataContainer.defaultProps = {\n    hideIndicators: false,\n    showBackToSourceLink: false,\n    isLoading: false,\n    path: '',\n};\n\nDataContainer.propTypes = {\n    error: PropTypes.oneOfType([\n        PropTypes.instanceOf(JsonRpcError),\n        PropTypes.objectOf(Object),\n    ]),\n    hideIndicators: PropTypes.bool,\n    includeSubfolders: PropTypes.bool,\n    ipcModification: ipcPropTypes.ipcModification,\n    isLoading: PropTypes.bool,\n    onLoad: PropTypes.func.isRequired,\n    path: PropTypes.string.isRequired,\n    showActions: PropTypes.bool,\n    showBackToSourceLink: PropTypes.bool,\n    showEmpty: PropTypes.bool,\n    showOperdata: PropTypes.bool,\n};\n\nconst mapStateToProps = (state, { path }) => ({\n    error: selectError(state, path),\n    isLoading: selectLoading(state, path),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad(path, includeSubfolders, showEmpty, showOperdata) {\n        return dispatch(getDataThunk({\n            path,\n            includeSubfolders,\n            showEmpty,\n            showOperdata,\n        }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(DataContainer);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    DataContainer as _DataContainer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { selectNode } from 'modules/nodes/selectors';\nimport { existsThunk } from 'modules/nodes/thunks';\n\nclass EmptyCellContainer extends React.Component {\n    componentDidMount() {\n        const { exists, onExists, existsPending } = this.props;\n\n        if (typeof exists === 'undefined' && !existsPending) {\n            onExists();\n        }\n    }\n\n    render() {\n        const { exists } = this.props;\n        return <div style={{ fontStyle: 'italic' }}>{exists && 'exists'}</div>;\n    }\n}\n\nEmptyCellContainer.propTypes = {\n    exists: PropTypes.bool,\n    existsPending: PropTypes.bool,\n    onExists: PropTypes.func,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    exists: selectNode(state, ownProps.path).exists,\n    existsPending: selectNode(state, ownProps.path).existsPending,\n});\n\nconst mapDispatchToPropsEmptyLeaf = (dispatch, ownProps) => ({\n    onExists() {\n        const { path } = ownProps;\n        dispatch(existsThunk({ path }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToPropsEmptyLeaf,\n)(EmptyCellContainer);\n\nexport {\n    EmptyCellContainer as _EmptyCellContainer,\n};\n","import { Link } from '@webui-one/router';\nimport { isNonEmptyArray } from '@webui-one/core/utils/array';\nimport { quoteKey } from '@webui-one/core/utils/key';\nimport {\n    getQuerySelection,\n    isVisibleColumn,\n} from '@webui-one/core/utils/list';\nimport { escapeKey } from '@webui-one/core/utils/path';\nimport { sequence } from '@webui-one/core/utils/promise';\nimport {\n    lstrip,\n    truncateLongString,\n} from '@webui-one/core/utils/string';\nimport AddSymbol from '@webui-one/styles/static/AddSymbol';\nimport RemoveSymbol from '@webui-one/styles/static/RemoveSymbol';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport ErrorBox from '@webui-one/components/ConfigRender/ErrorBox';\nimport InformationButton from '@webui-one/components/ConfigRender/Information/InformationButton';\nimport ModalSchemaInputContainer from 'Common/Components/Modal/ModalSchemaInputContainer';\nimport {\n    createNodeRowAndChangesSelector,\n    selectNode,\n    selectDirty,\n    selectOffset,\n    selectsortOrder,\n    selectSortColumn,\n} from 'modules/nodes/selectors';\nimport {\n    createDisallowExistsThunk,\n    deleteNodesThunk,\n} from 'modules/nodes/thunks';\nimport {\n    reEvaluateSchemaThunk,\n} from 'modules/schemas/thunks';\nimport * as nodesActions from 'modules/nodes/actions';\nimport * as nodesActionTypes from 'modules/nodes/actionTypes';\nimport {\n    createColumnsVisibilitySelector,\n} from 'modules/userdata/selectors';\nimport {\n    selectConfigIsLoading,\n    selectTotalNumberOfResults,\n} from 'modules/data/selectors';\nimport { selectApplicationName } from 'modules/application/selectors';\nimport {\n    selectIsEditMode,\n    selectShowEmpty,\n} from 'ConfigurationEditor/reducer';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Messages, translate } from 'modules/intl';\nimport {\n    selectLocationPathnameFromApplicationName,\n} from 'modules/routing/selectors';\nimport List from '@webui-one/components/ConfigRender/List/List';\nimport { overlayStyle } from '@webui-one/styles/LeafStyles';\n\nimport {\n    createCheckBoxCellFactory,\n    createCheckboxHeaderFactory,\n    createDirtyCell,\n    createEmptyHeader,\n    createHeader as createNonSortableHeader,\n    createDataCellFactory,\n    createSortableHeaderFactory,\n    getDefaultColumn,\n} from '@webui-one/components/ConfigRender/List/ListCells';\nimport Pagination from '@webui-one/components/ConfigRender/List/Pagination';\nimport SelectMenu from '@webui-one/components/ConfigRender/List/SelectMenu';\nimport styles from '@webui-one/components/ConfigRender/List/ListStyles';\nimport EmptyCellContainer from './EmptyCellContainer';\nimport { parseKeypathKeys } from '@webui-one/core/keypath/keypath-parser';\nimport { pathToObjects } from '@webui-one/core/keypath/kp-parser';\n\n\nconst style = styles();\n\nconst createEmptyCellFactory = column => (name, cellKey, rowKey) =>\n    <EmptyCellContainer path={`${rowKey}/${column}`} />;\n\nconst buildWidgetLeaf = (child, name, isEmptyLeaf) => {\n    if (isEmptyLeaf) {\n        return {\n            ...child,\n            createHeader: getDefaultColumn().createHeader,\n            createCell: createEmptyCellFactory(name),\n        };\n    }\n    return child;\n};\n\nconst buildColsDataFromSchemaChildren = (children, createHeader, createCell) => (\n    (children || []).map((c) => {\n        const { isEmptyLeaf, kind, name } = c;\n        const child = {\n            ...getDefaultColumn(),\n            title: name,\n            key: name,\n            createHeader,\n            createCell,\n        };\n\n        if (kind === 'key') {\n            return {\n                ...child,\n                canBeHidden: false,\n            };\n        }\n\n        return buildWidgetLeaf(child, name, isEmptyLeaf);\n    })\n);\n\nconst validateForm = values => (\n    Object.values(values).reduce((acc, value) => (\n        acc && value.length > 0\n    ), true)\n);\n\nconst createColumn = (key, title, createHeader, createCell) => ({\n    ...getDefaultColumn(),\n    key,\n    canBeHidden: false,\n    title,\n    createHeader,\n    createCell,\n    isSticky: true,\n});\n\nconst createIsDirtyColumn = (createHeader, createCell) => (\n    createColumn('isDirty', 'Changed', createHeader, createCell)\n);\n\nconst createIsSelectedColumn = (createHeader, createCell) => (\n    createColumn('isSelected', 'Is selected', createHeader, createCell)\n);\n\nconst createBaseColumns = (editable, createIsSelectedColumnHeader, createIsSelectedColumnCell) => {\n    if (editable) {\n        return [\n            createIsDirtyColumn(createEmptyHeader, createDirtyCell),\n            createIsSelectedColumn(createIsSelectedColumnHeader, createIsSelectedColumnCell),\n        ];\n    }\n    return [];\n};\n\nconst createColumns = ({\n    isLeafList,\n    columnChildren,\n    columnsVisibility,\n    createHeader,\n    applicationName,\n} = {}) => {\n    if (isLeafList) {\n        return [{\n            ...getDefaultColumn(),\n            title: '',\n            key: 0,\n            createNonSortableHeader,\n        }];\n    }\n\n    if (!isNonEmptyArray(columnChildren)) return [];\n\n    const visibleColumns = columnChildren.reduce((acc, c) => {\n        acc.push({\n            ...c,\n            isVisible: isVisibleColumn(columnsVisibility, { ...c, key: c.name }),\n        });\n        return acc;\n    }, []);\n\n    const formatter = value => truncateLongString(\n        value,\n        180,\n        40,\n        visibleColumns.filter(c => c.isVisible).length,\n    );\n    const createCell = createDataCellFactory(applicationName, Link, formatter);\n\n    return buildColsDataFromSchemaChildren(visibleColumns, createHeader, createCell);\n};\n\n// Input format should be: '[ <space sepparated list> ]'\nconst isInputFormatValid = (input) => {\n    if (input.startsWith('[ ') && !input.endsWith(' ]')) {\n        return false;\n    }\n    if (!input.startsWith('[ ') && input.endsWith(' ]')) {\n        return false;\n    }\n    return true;\n};\n\nconst isSpaceSepparatedList = (input) => {\n    if (input.startsWith('[ ') && input.endsWith(' ]')) {\n        return true;\n    }\n    return false;\n};\n\n// Matches a string against white spaces\n// Doesn't split if surrouded with quotes e.g [ \"foo bar\" ] is 1 key.\n// Doesn't split on unmatched quotes e.g [ Mario's Luigi's ] is correcly split as 2 keys.\nconst makeSpaceSepparatedList = (str) => {\n    const tokens = parseKeypathKeys(\n        str,\n        { options: { initialQuotesOnly: true, quoteChars: ['\"'] } },\n    );\n    const keys = tokens.map(token => token.key);\n    return keys.length > 0 ? keys : null;\n};\n\nclass ListContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onDeleteSelected = this.onDeleteSelected.bind(this);\n        this.onSelectAllRows = this.onSelectAllRows.bind(this);\n        this.onSelectRow = this.onSelectRow.bind(this);\n        this.showAddListItemModal = this.showAddListItemModal.bind(this);\n        this.selectVisibleColumn = this.selectVisibleColumn.bind(this);\n        this.changeSortOrder = this.changeSortOrder.bind(this);\n        this.onGoToPage = this.onGoToPage.bind(this);\n        this.state = {\n            formKeyValues: {},\n            hasCheckboxes: true,\n            hasSelectedAll: false,\n            selectMenuIsActive: false,\n            shouldShowColumnSelector: false,\n            showAddListItemModal: false,\n            errorOnCreate: undefined,\n        };\n    }\n\n    componentDidMount() {\n        const {\n            chunkSize,\n            onQueryData,\n            isActionInput,\n            isLeafList,\n            isLoading,\n            totalNumberOfResults,\n        } = this.props;\n        if (!isLoading && isActionInput) {\n            onQueryData({ chunkSize });\n            return;\n        }\n        if (!isLoading && totalNumberOfResults > 0 && !isLeafList) {\n            onQueryData({ chunkSize });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            chunkSize,\n            isModified,\n            offset,\n            rows,\n            totalNumberOfResults,\n        } = this.props;\n        const {\n            isModified: prevModified,\n        } = prevProps;\n        const { hasSelectedAll } = this.state;\n        if (isModified && !prevModified) {\n            this.onGoToPage(1);\n        }\n        if (Array.isArray(rows)) {\n            const rowCount = rows.length;\n            const selectedCount = rows.filter(r => r.data.isSelected).length;\n            if (hasSelectedAll && (rowCount === 0 || selectedCount < rowCount)) {\n                // eslint-disable-next-line react/no-did-update-set-state\n                this.setState({ hasSelectedAll: false });\n            } else if (!hasSelectedAll && rowCount > 0 && selectedCount === rowCount) {\n                // eslint-disable-next-line react/no-did-update-set-state\n                this.setState({ hasSelectedAll: true });\n            }\n        }\n        if (rows && rows.length === 0 && totalNumberOfResults > 0) {\n            this.onGoToPage(Math.max(1, offset - chunkSize));\n        }\n    }\n    componentDidCatch(error) {\n        this.setState({\n            hasError: true,\n            error,\n        });\n    }\n    onChange(e) {\n        const { formKeyValues } = this.state;\n        const { value } = e.target;\n        const keyName = e.target.dataset.keyName;\n        const values = { ...formKeyValues, [keyName]: value };\n        this.setState({\n            formIsValid: validateForm(values),\n            formKeyValues: values,\n            formKeyValue: value,\n        });\n    }\n\n    onClose() {\n        this.setState({\n            showAddListItemModal: false,\n            errorOnCreate: undefined,\n        });\n    }\n\n    // eslint-disable-next-line sonarjs/cognitive-complexity\n    onConfirm(createPath, data) {\n        const {\n            chunkSize,\n            isLeafList,\n            onDeleteRows,\n            onCreate,\n            onError,\n            onReevaluateSchema,\n        } = this.props;\n\n        if (isLeafList) {\n            const obj = pathToObjects(createPath).pop();\n            const keyValue = obj.keys.pop();\n            const path = obj.parentPath;\n            if (!isInputFormatValid(keyValue)) {\n                return onError(path, 'Input format is invalid');\n            }\n\n            if (keyValue === '[  ]' || keyValue === '[ ]') {\n                return onDeleteRows([path], path, chunkSize).then(() => {\n                    this.onClose();\n                });\n            }\n\n            if (isSpaceSepparatedList(keyValue)) {\n                // Strip starting '[ ' and ending ' ]'\n                const keyList = makeSpaceSepparatedList(keyValue.substr(2, keyValue.length - 3));\n                if (!keyList) {\n                    return onError(path, 'Input format is invalid');\n                }\n                return onDeleteRows([path], path, chunkSize).then(() => {\n                    const promiseChain = keyList.map(key => (\n                        () => (onCreate(`${path}{${quoteKey(key)}}`, { chunkSize }))\n                    ));\n                    return sequence(promiseChain).then((results) => {\n                        const errors = results.filter((result) => {\n                            if (result.type && result.type === nodesActionTypes.CREATE_ERROR) {\n                                return true;\n                            }\n                            return false;\n                        });\n                        if (errors.length === 0) {\n                            this.onClose();\n                            onReevaluateSchema();\n                        }\n                    });\n                });\n            }\n        }\n        return onCreate(createPath, { chunkSize, data }).then((result) => {\n            if (!result.error) {\n                this.onClose();\n                onReevaluateSchema();\n            } else {\n                let errorOnCreate = result.error.message;\n                if (typeof result.error === 'string') {\n                    errorOnCreate = result.error;\n                }\n                if (result.error\n                    && result.error.data\n                    && result.error.data.reason\n                ) {\n                    errorOnCreate = result.error.data.reason;\n                }\n                this.setState({ errorOnCreate });\n            }\n            return result;\n        });\n    }\n\n    onDeleteSelected() {\n        const { chunkSize, rows, onDeleteRows, path } = this.props;\n        if (!rows) return;\n        const selectedRows = rows.filter(row => row.data.isSelected);\n        onDeleteRows(selectedRows.map(row => row.rowKey), path, chunkSize);\n    }\n\n    onSelectAllRows(value) {\n        const { path, rows, onSetCheckBoxValues } = this.props;\n        this.setState({ hasSelectedAll: value });\n        if (!rows) return;\n        onSetCheckBoxValues(path, rows.map(row => row.rowKey), value);\n    }\n\n    onSelectRow(value, keyPath) {\n        const { path, onSetCheckBoxValues } = this.props;\n        onSetCheckBoxValues(path, [keyPath], value);\n    }\n\n    onGoToPage(offset) {\n        const {\n            onQueryData,\n            isLoading,\n            chunkSize,\n        } = this.props;\n\n        if (!isLoading) {\n            onQueryData({ chunkSize, offset });\n        }\n    }\n\n    getAddButton() {\n        return (\n            <button\n                type=\"button\"\n                onClick={this.showAddListItemModal}\n                style={style.list.header.button}\n                data-handle=\"list-add-button\"\n            >\n                <AddSymbol />\n            </button>\n        );\n    }\n\n\n    getButtons(columns) {\n        const { editable, isLeafList, path, rows } = this.props;\n\n        const props = {\n            resetHide: this.resetHide,\n            initHide: this.initHide,\n            hideSelectMenu: this.hideSelectMenu,\n            toggleMenuIsActive: this.toggleMenuIsActive,\n            onChange: (y, value) => this.selectVisibleColumn(y, value),\n            path,\n        };\n\n        const empty = !(rows && rows.length > 0);\n        const hasSelection = !empty && rows.filter(row => row.data.isSelected).length > 0;\n        const stl = style.list.header;\n        return (\n            <div key=\"buttons\" style={style.selectColumns.buttonWrapper}>\n                {(isLeafList || empty) || (\n                    <SelectMenu\n                        {...props}\n                        styleName=\"rightSelectMenu\"\n                        columns={columns.filter(c => c.canBeHidden)}\n                    />\n                )}\n                {(editable && !empty) && (\n                    <button\n                        type=\"button\"\n                        key={`${path}btn1`}\n                        data-handle=\"list-delete-button\"\n                        style={hasSelection ? stl.button : stl.buttonDisabled}\n                        disabled={!hasSelection}\n                        onClick={this.onDeleteSelected}\n                    >\n                        { hasSelection\n                            ? (<RemoveSymbol />)\n                            : (\n                                <RemoveSymbol\n                                    symbolColor={defaultStyles.color6}\n                                    borderColor={defaultStyles.color6}\n                                    bgColor={defaultStyles.color3}\n                                />\n                            )\n                        }\n                    </button>\n                )}\n                {(editable && empty) &&\n                    <div style={style.list.centeredText}>Add list item →</div>\n                }\n                {editable && this.getAddButton()}\n            </div>\n        );\n    }\n\n    getColumns() {\n        const {\n            applicationName,\n            columnChildren,\n            columnsVisibility,\n            editable,\n            isLeafList,\n            name,\n            sortColumn,\n            sortOrder,\n        } = this.props;\n        const { hasSelectedAll } = this.state;\n        const legacySort = { columnKey: sortColumn, isDesc: sortOrder === 'descending' };\n        const createHeader = createSortableHeaderFactory(this.changeSortOrder, legacySort);\n\n        const createSelectedColumnHeader =\n            createCheckboxHeaderFactory(hasSelectedAll, this.onSelectAllRows);\n\n        const createSelectedColumnCell = createCheckBoxCellFactory(this.onSelectRow);\n        const columns = [\n            ...createBaseColumns(editable, createSelectedColumnHeader, createSelectedColumnCell),\n            ...createColumns({\n                name,\n                isLeafList,\n                columnChildren,\n                columnsVisibility,\n                createHeader,\n                applicationName,\n            }),\n        ];\n        columns.forEach((c, index) => {\n            columns[index].isVisible = isVisibleColumn(columnsVisibility, c);\n        });\n        return columns;\n    }\n\n    selectVisibleColumn(key, value) {\n        const { onSetColumnVisible, path } = this.props;\n        onSetColumnVisible(path, key, value);\n    }\n\n    changeSortOrder(columnKey) {\n        const {\n            chunkSize,\n            isLoading,\n            onQueryData,\n            sortColumn,\n            sortOrder,\n        } = this.props;\n\n        if (!isLoading) {\n            const isDesc = columnKey === sortColumn && sortOrder !== 'descending';\n            const isNone = columnKey === sortColumn && sortOrder === 'descending';\n\n            let newSortorder = 'ascending';\n            let newColumnKey = columnKey;\n            if (isDesc) newSortorder = 'descending';\n            if (isNone) {\n                newSortorder = undefined;\n                newColumnKey = undefined;\n            }\n\n            const offset = 1;\n\n            onQueryData({ chunkSize, offset, sortColumn: newColumnKey, sortOrder: newSortorder });\n        }\n    }\n\n    showAddListItemModal() {\n        this.setState({ showAddListItemModal: true });\n    }\n\n    render() {\n        const {\n            chunkSize,\n            editable,\n            isActionInput,\n            isDirty,\n            isEditMode,\n            isLeafList,\n            isLoading,\n            isOperdata,\n            kindpath,\n            link,\n            name,\n            offset,\n            path,\n            rows,\n            showEmpty,\n            totalNumberOfResults,\n        } = this.props;\n        const { hasError, error } = this.state;\n        if (hasError) {\n            return (\n                <div style={style.list.main}>\n                    <div>{name}</div>\n                    <ErrorBox error={error} />\n                </div>\n            );\n        }\n        if (!isActionInput && !showEmpty && totalNumberOfResults < 1) {\n            return null;\n        }\n        const { showAddListItemModal, errorOnCreate } = this.state;\n\n        const columns = this.getColumns();\n        const buttons = this.getButtons(columns);\n        const empty = !(rows && rows.length > 0);\n        const additionalElements = [\n            (empty && !isLoading) && (\n                <div data-handle=\"emptyMessage\" key=\"empty\" style={style.list.emptyMessage} >\n                    This list is empty\n                </div>\n            ),\n            buttons,\n            <Pagination\n                key=\"pagination\"\n                totalNumberOfResults={totalNumberOfResults}\n                onGoToPage={this.onGoToPage}\n                chunkSize={chunkSize}\n                offset={offset}\n            />,\n        ];\n        const headerElements = [\n            <div style={style.list.optionsWrapper} key={'options'}>\n                <Link style={style.list.link} to={link}>{name}</Link>\n                {isEditMode && (\n                    <div\n                        data-handle=\"informationButton\"\n                        style={overlayStyle.symbol}\n                    >\n                        <InformationButton\n                            circleColor={defaultStyles.color1}\n                            iColor={defaultStyles.color3}\n                            path={path}\n                        />\n                    </div>\n                )}\n            </div>,\n        ];\n        const stl = style.list.container;\n        return (\n            <div style={!isLeafList ? { margin: '1rem 0', ...stl } : { ...stl, width: '100%' }}>\n                <List\n                    additionalElements={additionalElements}\n                    chunkSize={chunkSize}\n                    columns={columns.filter(c => c.isVisible)}\n                    headerElements={headerElements}\n                    isLoading={isLoading}\n                    isOperdata={isOperdata}\n                    name={name}\n                    nrOfStaticColumns={editable ? 2 : 0}\n                    offset={offset}\n                    rows={rows}\n                />\n                {(isDirty) && <div data-handle=\"dirty\" style={style.list.emptyDirty} />}\n                {showAddListItemModal && (\n                    <ModalSchemaInputContainer\n                        title={translate(Messages.LIST.ADD_NEW_ITEM_TITLE)}\n                        kindpath={kindpath}\n                        paths={[path]}\n                        closeOnConfirm={false}\n                        onClose={this.onClose}\n                        onConfirm={this.onConfirm}\n                        error={errorOnCreate}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nListContainer.propTypes = {\n    applicationName: PropTypes.string.isRequired,\n    chunkSize: PropTypes.number,\n    columnChildren: PropTypes.arrayOf(PropTypes.shape({\n        kind: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        isEmptyLeaf: PropTypes.boolean,\n    })),\n    columnsVisibility: PropTypes.shape(Object),\n    editable: PropTypes.bool,\n    info: PropTypes.arrayOf(PropTypes.object),\n    isActionInput: PropTypes.bool,\n    isDirty: PropTypes.bool,\n    isEditMode: PropTypes.bool,\n    isLeafList: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isModified: PropTypes.bool,\n    isOperdata: PropTypes.bool,\n    isSchemaLoaded: PropTypes.bool,\n    kindpath: PropTypes.arrayOf(PropTypes.shape({\n        kind: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        rootPath: PropTypes.string,\n    })),\n    link: PropTypes.string,\n    name: PropTypes.string,\n    offset: PropTypes.number,\n    onCreate: PropTypes.func.isRequired,\n    onError: PropTypes.func,\n    onDeleteRows: PropTypes.func.isRequired,\n    onQueryData: PropTypes.func.isRequired,\n    onSetCheckBoxValues: PropTypes.func.isRequired,\n    onSetColumnVisible: PropTypes.func.isRequired,\n    onReevaluateSchema: PropTypes.func.isRequired,\n    path: PropTypes.string.isRequired,\n    rows: PropTypes.arrayOf(Object),\n    schema: PropTypes.shape(Object),\n    showEmpty: PropTypes.bool,\n    sortColumn: PropTypes.string,\n    sortOrder: PropTypes.string,\n    totalNumberOfResults: PropTypes.number,\n};\n\nListContainer.defaultProps = {\n    chunkSize: 10,\n    columnsVisibility: undefined,\n    editable: true,\n    isModified: false,\n    isOperdata: false,\n    offset: 1,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { dispatch } = dispatchProps;\n    const mergedProps = { ...ownProps, ...stateProps };\n    const onQueryData = (args) => {\n        const {\n            columnChildren,\n            isLeafList,\n            isSchemaLoaded,\n            offset,\n            path,\n            sortColumn,\n            sortOrder,\n            chunkSize,\n        } = { ...mergedProps, ...args };\n\n        let selection;\n        if (!isSchemaLoaded) {\n            return Promise.resolve(undefined);\n        }\n\n        if (!isLeafList) {\n            selection = getQuerySelection({ columnChildren });\n        }\n        return dispatch(nodesActions.query({\n            selection,\n            path,\n            sort: sortColumn,\n            sortOrder,\n            initialOffset: offset,\n            chunkSize,\n        }));\n    };\n\n    return ({\n        ...mergedProps,\n        onCreate(createPath, { chunkSize, data }) {\n            return dispatch(createDisallowExistsThunk({ path: createPath, data }))\n                .then((result) => {\n                    if (result && result.error) return result;\n                    return onQueryData({ chunkSize });\n                });\n        },\n        onError(path, error) {\n            return dispatch(nodesActions.createErrorAction(path, new Error(error)));\n        },\n        onDeleteRows(keyPaths, loadingPath, chunkSize) {\n            return dispatch(deleteNodesThunk({\n                dependants: mergedProps.dependants,\n                isActionInput: mergedProps.isActionInput,\n                path: mergedProps.path,\n                paths: keyPaths,\n                loadingPath,\n            })).then(() => onQueryData({ chunkSize }));\n        },\n\n        onSetCheckBoxValues(path, keyPaths, value) {\n            return dispatch(nodesActions.setCheckBoxValues(path, keyPaths, value));\n        },\n\n        onSetColumnVisible(path, columnKey, value) {\n            return dispatch(nodesActions.setColumnVisibilityAction(path, columnKey, value));\n        },\n\n        onReevaluateSchema() {\n            return dispatch(reEvaluateSchemaThunk(mergedProps.dependants));\n        },\n        onQueryData,\n    });\n};\n\nconst makeMapStateToProps = () => {\n    const rowsSelector = createNodeRowAndChangesSelector();\n    const columnsSelector = createColumnsVisibilitySelector();\n\n    return (state, ownProps) => {\n        const { path } = ownProps;\n        const applicationName = selectApplicationName(state);\n        const name = lstrip(path.split('/').pop(), '/');\n        const link = selectLocationPathnameFromApplicationName(\n            applicationName,\n            escapeKey(path),\n        );\n\n        const node = selectNode(state, path) || {};\n        const isLoading = node.isLoading || selectConfigIsLoading(state, path);\n        const isModified = node.isModified;\n        const rows = rowsSelector(state, ownProps);\n\n        return {\n            applicationName,\n            columnsVisibility: columnsSelector(state, ownProps),\n            isEditMode: selectIsEditMode(state),\n            isDirty: selectDirty(state, path),\n            isLoading,\n            isModified,\n            link,\n            name,\n            offset: selectOffset(state, path),\n            rows,\n            showEmpty: selectShowEmpty(state),\n            sortColumn: selectSortColumn(state, path),\n            sortOrder: selectsortOrder(state, path),\n            totalNumberOfResults: selectTotalNumberOfResults(state, path),\n        };\n    };\n};\n\nexport default connect(\n    makeMapStateToProps,\n    undefined,\n    mergeProps,\n)(ListContainer);\n\nexport {\n    ListContainer as _ListContainer,\n    buildColsDataFromSchemaChildren as _buildColsDataFromSchemaChildren,\n    buildWidgetLeaf as _buildWidgetLeaf,\n    createBaseColumns as _createBaseColumns,\n    createColumn as _createColumn,\n    createColumns as _createColumns,\n    createEmptyCellFactory as _createEmptyCellFactory,\n    createIsDirtyColumn as _createIsDirtyColumn,\n    createIsSelectedColumn as _createIsSelectedColumn,\n    makeSpaceSepparatedList as _makeSpaceSepparatedList,\n    makeMapStateToProps as _makeMapStateToProps,\n    mergeProps as _mergeProps,\n    validateForm as _validateForm,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Messages, translate } from 'modules/intl';\nimport { loadModules } from 'modules/devices/actions';\n\nimport {\n    selectCompletedAt,\n} from 'modules/yangActions/selectors';\n\nimport {\n    tryGetDeviceName,\n} from '@webui-one/core/utils/path';\n\nimport ActionContainer from './ActionContainer';\nimport MessageBox from '@webui-one/components/ConfigRender/MessageBox';\n\nclass NoCapabilitiesContainer extends React.Component {\n    componentDidUpdate(nextProps) {\n        const { connectActionCompletedAt, onLoadModules, path } = this.props;\n        if (connectActionCompletedAt !== nextProps.connectActionCompletedAt) {\n            onLoadModules(path);\n        }\n    }\n    render() {\n        const { deviceKey, path } = this.props;\n        return (\n            <>\n                <MessageBox name={path}>\n                    {translate(Messages.COMMON.NO_CAPABILITIES_FOUND_FOR_DEVICE)}\n                </MessageBox>\n                <ActionContainer\n                    key={`/ncs:devices/device{${deviceKey}}/connect`}\n                    label={'connect'}\n                    path={`/ncs:devices/device{${deviceKey}}/connect`}\n                    hideSuccessfullOutput\n                    refreshPath={path}\n                />\n            </>\n        );\n    }\n}\n\nNoCapabilitiesContainer.propTypes = {\n    path: PropTypes.string,\n    deviceKey: PropTypes.string,\n    onLoadModules: PropTypes.func.isRequired,\n    connectActionCompletedAt: PropTypes.number,\n};\n\nconst mapStateToProps = (state, { path }) => {\n    const deviceKey = tryGetDeviceName(path);\n    return ({\n        deviceKey,\n        connectActionCompletedAt:\n            selectCompletedAt(state, `/ncs:devices/device{${deviceKey}}/connect`),\n    });\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onLoadModules(path) {\n        return dispatch(loadModules(path));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoCapabilitiesContainer);\n\nexport {\n    NoCapabilitiesContainer as _NoCapabilitiesContainer,\n    mapStateToProps as _mapStateToProps,\n    mapDispatchToProps as _mapDispatchToProps,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport Grid from '@webui-one/components/Grid/Grid';\nimport ComboBox from '@webui-one/components/ConfigRender/ComboBox/ComboBox';\nimport * as S from '@webui-one/core/schema';\nimport ContentIndicators from '@webui-one/components/ConfigRender/ContentIndicators';\nimport {\n    getLastListEntryKeypath,\n    isListEntry,\n    pathToObjects,\n    pathWithoutKeys,\n    schemaPathToKeypath,\n} from '@webui-one/core/keypath/kp-parser';\nimport { toKeypathEvalNedId } from '@webui-one/core/kindpath';\nimport { isNonEmptyArray } from '@webui-one/core/utils/array';\nimport {\n    isObject,\n    isNonEmpty,\n    isDeepEqual,\n    hasProp,\n} from '@webui-one/core/utils/object';\nimport {\n    isNonEmptyString,\n    isString,\n} from '@webui-one/core/utils/string';\nimport { isPositiveNumber } from '@webui-one/core/utils/number';\nimport { getColumnChildren } from '@webui-one/core/utils/list';\nimport {\n    getParentPath,\n    isDeviceConfig,\n} from '@webui-one/core/utils/path';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { loadModules } from 'modules/devices/actions';\nimport {\n    selectModule,\n    selectModuleIsLoading,\n} from 'modules/devices/selectors';\nimport {\n    getWidgetKind,\n    selectGroupedSchemas as _selectGroupedSchemas,\n    selectShouldReEvaluate,\n    toSchemaPath,\n} from 'modules/schemas/reducer';\nimport {\n    selectSchema as _selectSchema,\n} from 'modules/schemas/selectors';\nimport {\n    isBigYangPath,\n    isDeviceRootPath,\n    loadStatus,\n} from 'modules/schemas/utils';\n\nimport {\n    selectPathIsNotEmpty,\n    selectConfigIsLoading,\n    selectConfig,\n    selectExists,\n} from 'modules/data/selectors';\n\nimport * as widgetTypes from '@webui-one/core/schema/widgetTypes';\nimport * as widgetKinds from '@webui-one/core/schema/widgetKinds';\n\nimport NoData from '@webui-one/components/ConfigRender/NoData';\nimport NotFound from '@webui-one/components/ConfigRender/NotFound';\nimport NotSupported from '@webui-one/components/ConfigRender/NotSupported';\nimport {\n    selectIsEditMode,\n    selectShowOperdata,\n} from 'ConfigurationEditor/reducer';\nimport {\n    showAllAction,\n} from 'ConfigurationEditor/actions';\nimport ActionContainer from './ActionContainer';\nimport ActionLinkContainer from './ActionLinkContainer';\nimport ChoiceContainer from './ChoiceContainer';\nimport SchemaHeaderContainer from './SchemaHeaderContainer';\nimport NoCapabilitiesContainer from './NoCapabilitiesContainer';\nimport LeafContainer from './LeafContainer';\nimport ListContainer from './List/ListContainer';\nimport PlanContainer from './Plan/PlanContainer';\nimport EmptyLeaf from '@webui-one/components/ConfigRender/EmptyLeaf/EmptyLeaf';\nimport BackToSourceLinkContainer from 'Common/Components/ConfigRender/BackToSourceLink/BackToSourceLinkContainer';\nimport { servicesSelector } from 'modules/services/selectors';\nimport {\n    getLeafWidget,\n} from './SchemaContainerUtils';\n\nconst loaderStyle = {\n    position: 'absolute',\n    transform: 'translate(-50%, -50%)',\n    left: '50%',\n    top: '50%',\n};\n\n\nconst isEditable = schema => (\n    schema.data.config !== false && schema.widgetKind !== widgetKinds.KIND_KEY\n);\n\nexport const LIST_CHUNK_SIZE = 10;\nexport const LEAF_LIST_CHUNK_SIZE = 5;\nconst LEAF_LIST_KEYS = Object.freeze([0]);\n\nconst handleKindLeafList = (keypath, schema) => {\n    const editable = isEditable(schema);\n    const path = S.nodepath(schema) || keypath;\n    const isOperdata = !S.isConfig(schema);\n    const isActionInput = S.isActionInput(schema);\n    const name = S.name(schema);\n\n    return (\n        <ListContainer\n            chunkSize={LEAF_LIST_CHUNK_SIZE}\n            editable={editable}\n            dependants={schema.dependants}\n            isActionInput={isActionInput}\n            isLeafList\n            isOperdata={isOperdata}\n            isSchemaLoaded={!!schema && schema.loadStatus !== loadStatus.LOADING}\n            key={`${path}-leaf-list`}\n            keyNames={LEAF_LIST_KEYS}\n            name={name}\n            path={path}\n        />\n    );\n};\n\nconst handleTypeLeafref = (keypath, schema) => {\n    const deletable = S.deletable(schema);\n    const editable = isEditable(schema);\n    const isConfigFalseCallpoint = S.isConfigFalseCallpoint(schema);\n    const isMandatory = S.mandatory(schema) && editable;\n    const isOperdata = !S.isConfig(schema);\n    const defaultValue = S.defaultValue(schema);\n    const name = S.name(schema);\n    const path = S.nodepath(schema) || keypath;\n    const caseAncestors = schema.caseAncestors;\n    return (\n        <LeafContainer\n            caseAncestors={caseAncestors}\n            deletable={deletable}\n            editable={editable}\n            key={keypath}\n            name={name}\n            path={path}\n            deps={S.deps(schema)}\n            dependants={schema.dependants}\n            defaultValue={defaultValue}\n            isConfigFalseCallpoint={isConfigFalseCallpoint}\n            isLeafref\n            isMandatory={isMandatory}\n            isOperdata={isOperdata}\n        >\n            <ComboBox\n                name={name}\n                key={keypath}\n                editable={editable}\n            />\n        </LeafContainer>\n    );\n};\n\nconst handleTypeLeafEmpty = (keypath, schema) => {\n    const deletable = S.deletable(schema);\n    const editable = isEditable(schema);\n    const isConfigFalseCallpoint = S.isConfigFalseCallpoint(schema);\n    const isMandatory = S.mandatory(schema) && editable;\n    const isOperdata = !S.isConfig(schema);\n    const name = S.name(schema);\n    const path = S.nodepath(schema) || keypath;\n    const caseAncestors = schema.caseAncestors;\n\n    return (\n        <LeafContainer\n            caseAncestors={caseAncestors}\n            deletable={deletable}\n            editable={editable}\n            key={keypath}\n            name={name}\n            path={path}\n            deps={S.deps(schema)}\n            dependants={schema.dependants}\n            isEmptyLeaf\n            isConfigFalseCallpoint={isConfigFalseCallpoint}\n            isMandatory={isMandatory}\n            isOperdata={isOperdata}\n        >\n            <EmptyLeaf editable={editable} />\n        </LeafContainer>\n    );\n};\n\nconst handleTypeLeaf = (keypath, schema) => {\n    const defaultValue = S.defaultValue(schema);\n    const deletable = S.deletable(schema);\n    const editable = isEditable(schema);\n    const isConfigFalseCallpoint = S.isConfigFalseCallpoint(schema);\n    const isMandatory = S.mandatory(schema) && editable;\n    const isOperdata = !S.isConfig(schema);\n    const name = S.name(schema);\n    const path = S.nodepath(schema) || keypath;\n    const caseAncestors = schema.caseAncestors;\n    return (\n        <LeafContainer\n            caseAncestors={caseAncestors}\n            deletable={deletable}\n            dependants={schema.dependants}\n            editable={editable}\n            key={keypath}\n            name={name}\n            isMandatory={isMandatory}\n            path={path}\n            isConfigFalseCallpoint={isConfigFalseCallpoint}\n            defaultValue={defaultValue}\n            isOperdata={isOperdata}\n        >\n            { getLeafWidget(keypath, schema) }\n        </LeafContainer>\n    );\n};\n\nconst handleTypeLeafEnum = (keypath, schema) => {\n    const defaultValue = S.defaultValue(schema);\n    const deletable = S.deletable(schema);\n    const editable = isEditable(schema);\n    const isConfigFalseCallpoint = S.isConfigFalseCallpoint(schema);\n    const isMandatory = S.mandatory(schema) && editable;\n    const isOperdata = !S.isConfig(schema);\n    const name = S.name(schema);\n    const path = S.nodepath(schema) || keypath;\n    const caseAncestors = schema.caseAncestors;\n\n    const isEnum = schema.widgetType === widgetTypes.LEAF_ENUMERATION;\n    const options = S.enumerationOptions(schema).map(e => e.label);\n    return (\n        <LeafContainer\n            caseAncestors={caseAncestors}\n            deletable={deletable}\n            dependants={schema.dependants}\n            editable={editable}\n            key={keypath}\n            name={name}\n            isMandatory={isMandatory}\n            isEnum={isEnum}\n            options={options}\n            path={path}\n            isConfigFalseCallpoint={isConfigFalseCallpoint}\n            defaultValue={defaultValue}\n            isOperdata={isOperdata}\n        >\n            { getLeafWidget(keypath, schema) }\n        </LeafContainer>\n    );\n};\n\nconst getLeaf = (keypath, schema) => {\n    if (schema.widgetKind === widgetKinds.KIND_LEAFLIST) {\n        return handleKindLeafList(keypath, schema);\n    }\n\n    if (schema.widgetType === widgetTypes.LEAF_LEAFREF\n        && !S.isOper(schema)\n        && S.canUpdate(schema)) {\n        return handleTypeLeafref(keypath, schema);\n    }\n\n    if (schema.widgetType === widgetTypes.LEAF_EMPTY) {\n        return handleTypeLeafEmpty(keypath, schema);\n    }\n\n    if (schema.widgetType === widgetTypes.LEAF_ENUMERATION) {\n        return handleTypeLeafEnum(keypath, schema);\n    }\n\n    return handleTypeLeaf(keypath, schema);\n};\n\nconst getLeafItems = (keypath, leafs) => (\n    Object.keys(leafs || {}).reduce((acc, currentSchemaPath) => {\n        const currentKeypath = schemaPathToKeypath(currentSchemaPath, keypath);\n        const leafSchema = leafs[currentSchemaPath];\n        acc.push(getLeaf(currentKeypath, leafSchema));\n        return acc;\n    }, [])\n);\n\nconst getLeafGrid = (items, key, minimumRows = 3, shouldAddBinder = true) => {\n    if (!items || items.length === 0) return null;\n\n    return (\n        <Grid\n            key={key}\n            dataHandle={key}\n            minimumRows={minimumRows}\n            shouldAddBinder={shouldAddBinder}\n            rowGap=\"1rem\"\n        >\n            { items }\n        </Grid>\n    );\n};\n\nconst getActionGrid = (keypath, schema) => {\n    const actions = schema.actions;\n    const isOperdata = !S.isConfig(schema);\n\n    if (!actions || Object.keys(actions).length === 0) return null;\n\n    const items = Object.keys(actions).map((currentSchemaPath) => {\n        const currentKeypath = schemaPathToKeypath(currentSchemaPath, keypath);\n        return (\n            <ActionLinkContainer\n                key={currentKeypath}\n                path={currentKeypath}\n                isOperdata={isOperdata}\n            />\n        );\n    });\n    const key = `grid-${keypath}-actions`;\n    return <Grid key={key} dataHandle={key}>{ items }</Grid>;\n};\n\nconst filterItems = (items, filterFunc) => Object.keys(items).reduce((acc, currentPath) => {\n    if (filterFunc(items[currentPath]) === true) {\n        Object.assign(acc, { [currentPath]: items[currentPath] });\n    }\n    return acc;\n}, {});\n\nconst hasInputChildren = schema => hasProp(schema, 'children')\n        && isNonEmptyArray(schema.children.filter(c =>\n            c.is_action_input && c.evaluated_when_entry !== false,\n        ));\n\nconst getAction = (keypath, schema) => (\n    <ActionContainer\n        key={keypath}\n        hasChildren={hasInputChildren(schema)}\n        label={S.name(schema)}\n        path={keypath}\n        refreshPath={keypath}\n    />\n);\n\nconst getChoicePath = (keyPath, schemas, choiceSchema) => {\n    if (choiceSchema && choiceSchema.meta && choiceSchema.meta.choicePath) {\n        return choiceSchema.meta.choicePath;\n    }\n    const res = pathToObjects(keyPath).reduceRight((acc, p) => {\n        if (acc.found) return acc;\n        const schema = schemas[pathWithoutKeys(p.path)];\n        if (isListEntry(p.path) || (schema && schema.data && S.isParent(schema))) {\n            return { ...acc, found: true };\n        }\n        return {\n            ...acc,\n            acc: [p.name, ...acc.acc],\n        };\n    }, { found: false, acc: [] });\n    return res.acc.join('/');\n};\n\nconst getCases = (cases, parentPrefix) => {\n    if (!cases || Object.keys(cases).length === 0) return [];\n    return Object.keys(cases).filter(p => cases[p].hasEvaluatedWhenEntries).map((p) => {\n        const cas = cases[p];\n        return cas.qname.startsWith(parentPrefix) ? cas.name : cas.qname;\n    });\n};\n\nconst getNodeKeypath = (parentPath, schema) => {\n    const rootPath = getLastListEntryKeypath(parentPath);\n    const nodepath = S.nodepath(schema);\n    const keypath = S.keypath(schema);\n    if (nodepath) return schemaPathToKeypath(nodepath, rootPath);\n    if (keypath) return schemaPathToKeypath(keypath, rootPath);\n    return undefined;\n};\n\nconst handleKindAction = (acc, keypath, schema) => {\n    const leafs = getLeafItems(keypath, schema.leafs);\n    const leafLists = getLeafItems(keypath, schema.leafLists);\n\n    acc.push(getLeafGrid(leafs, `${keypath}-leafs-grid`));\n    acc.push(getLeafGrid(leafLists, `${keypath}-leaf-lists-grid`, 1, false));\n    return acc;\n};\n\nconst handleKindChoice = (acc, parentPath, keypath, schema, schemas, options) => {\n    const cases = getCases(schema.cases, schema.meta.prefix);\n    const name = S.name(schema);\n    const choicePath = getChoicePath(keypath, schemas, schema);\n    const nodepath = getNodeKeypath(parentPath, schema);\n    const parentNodepath = getParentPath(nodepath);\n    const { showOperdata } = options;\n\n    acc.push(\n        <ChoiceContainer\n            cases={cases}\n            choicePath={choicePath}\n            key={`${keypath}-choice`}\n            name={name}\n            nodepath={nodepath}\n            showOperdata={showOperdata}\n            parentNodepath={parentNodepath}\n            path={keypath}\n            // eslint-disable-next-line no-use-before-define\n            SchemaContainer={ConnectedSchemaContainer}\n        />,\n    );\n    return acc;\n};\n\nconst isPlan = (headerPath, schema) =>\n    !S.isConfig(schema) &&\n    /\\/plan(-history\\/plan\\{[^}]+\\})?$/.test(headerPath) &&\n    !!Object.keys(schema.leafs).find(k => /(time|failed)$/.test(k));\n\nconst handleKindContainer = (\n    acc,\n    applicationName,\n    parentPath,\n    keypath,\n    schema,\n    config,\n    options) => {\n    const nodeKeypath = getNodeKeypath(parentPath, schema);\n    const headerPath = nodeKeypath || keypath;\n\n    const leafs = getLeafItems(keypath, schema.leafs);\n    const leafLists = getLeafItems(keypath, schema.leafLists);\n    const isPresenceContainer = S.isPresenceContainer(schema);\n    const isConfig = S.isConfig(schema);\n    const isOperdata = !S.isConfig(schema);\n    const kind = S.kind(schema);\n\n    if (!options.showEmpty && !selectPathIsNotEmpty(config, headerPath)) {\n        return acc;\n    }\n\n    acc.push(\n        <SchemaHeaderContainer\n            applicationName={applicationName}\n            caseAncestors={schema.caseAncestors}\n            dependants={schema.dependants}\n            key={headerPath}\n            path={headerPath}\n            isOperdata={isOperdata}\n            isPresenceContainer={isPresenceContainer}\n            isConfig={isConfig}\n            kind={kind}\n        />,\n    );\n\n    if (isPlan(headerPath, schema)) {\n        acc.push(\n            <div key={`${headerPath}-plan`} style={{ backgroundColor: defaultStyles.color11 }}>\n                <PlanContainer\n                    backgroundColor={defaultStyles.color11}\n                    path={headerPath}\n                />\n            </div>,\n        );\n    }\n\n    acc.push(getLeafGrid(leafs, `${keypath}-leafs-grid`));\n    acc.push(getLeafGrid(leafLists, `${keypath}-leaf-lists-grid`, 1, false));\n    acc.push(getActionGrid(keypath, schema));\n\n    return acc;\n};\n\nconst handleKindCase = (acc, parentPath, keypath, schema) => {\n    const leafs = getLeafItems(keypath, schema.leafs);\n    const leafLists = getLeafItems(keypath, schema.leafLists);\n\n    acc.push(getLeafGrid(leafs, `${keypath}-leafs-grid`));\n    acc.push(getLeafGrid(leafLists, `${keypath}-leaf-lists-grid`, 1, false));\n    acc.push(getActionGrid(keypath, schema));\n\n    return acc;\n};\n\n\nconst handleKindLeaf = (acc, keypath, schemaPath, schema) => {\n    const leafs = getLeafItems(keypath, { [schemaPath]: schema });\n    const grid = getLeafGrid(leafs, `${keypath}-leaf-grid`);\n    acc.push(grid);\n    return acc;\n};\n\nconst handleKindList = (acc, parentPath, keypath, schema) => {\n    const nodeKeypath = toKeypathEvalNedId(\n        schema.kindpath,\n        schema.meta.keypath,\n        schema.data['ned-id'],\n    );\n    const isOperdata = !S.isConfig(schema);\n    const isActionInput = S.isActionInput(schema);\n    const columnChildren = getColumnChildren(schema);\n    const keyNames = S.keyNames(schema);\n\n    acc.push(\n        <ListContainer\n            chunkSize={LIST_CHUNK_SIZE}\n            key={keypath}\n            path={nodeKeypath || keypath}\n            editable={schema.data.config !== false}\n            isOperdata={isOperdata}\n            isActionInput={isActionInput}\n            isLeafList={false}\n            isSchemaLoaded={!!schema && schema.loadStatus !== loadStatus.LOADING}\n            keyNames={keyNames}\n            kindpath={schema.kindpath}\n            columnChildren={columnChildren}\n        />,\n    );\n    return acc;\n};\n\nconst widgetsFactory = (applicationName, path, schema, schemas, config, options) => (\n    Object.keys(schemas).reduce((acc, currentSchemaPath) => {\n        const keypath = schemaPathToKeypath(currentSchemaPath, path);\n        const currentSchema = schemas[currentSchemaPath];\n\n        switch (currentSchema.widgetKind) {\n        case widgetKinds.KIND_ACTION:\n            return handleKindAction(acc, keypath, currentSchema);\n        case widgetKinds.KIND_CASE:\n            return handleKindCase(acc, path, keypath, currentSchema);\n        case widgetKinds.KIND_CHOICE:\n            return handleKindChoice(\n                acc,\n                path,\n                keypath,\n                currentSchema,\n                schemas,\n                options,\n            );\n        case widgetKinds.KIND_LISTENTRY:\n        case widgetKinds.KIND_CONTAINER: {\n            return handleKindContainer(\n                acc,\n                applicationName,\n                path,\n                keypath,\n                currentSchema,\n                config,\n                options,\n            );\n        }\n        case widgetKinds.KIND_LIST:\n            return handleKindList(\n                acc,\n                path,\n                keypath,\n                currentSchema,\n            );\n        case widgetKinds.KIND_KEY:\n        case widgetKinds.KIND_LEAF:\n        case widgetKinds.KIND_LEAFLIST:\n            return handleKindLeaf(acc, keypath, currentSchemaPath, currentSchema);\n        case widgetKinds.KIND_NONE:\n            return acc;\n        default:\n            acc.push(<NotSupported key={keypath} kind={S.kind(currentSchema)} />);\n            return acc;\n        }\n    }, [])\n);\n\nconst factory = (\n    applicationName,\n    path,\n    schema,\n    schemas,\n    config,\n    options) => {\n    const widgets = widgetsFactory(applicationName, path, schema, schemas, config, options);\n\n    if (S.kind(schema) === 'action') {\n        widgets.push(getAction(path, schema));\n    }\n    return widgets;\n};\n\nconst modulesIsEmpty = module => module && (!module.modules || module.modules.length === 0);\n\nconst isSchemaLoaded = (schema) => {\n    if (!schema) return false;\n    if (schema.loadStatus !== loadStatus.COMPLETE) return false;\n\n    return true;\n};\n\nconst isSchemasLoaded = (schemas) => {\n    if (!schemas) return false;\n\n    return !Object.keys(schemas).some(k => schemas[k].loadStatus === loadStatus.PARTIAL);\n};\n\nconst createLoading = () => (\n    <div style={loaderStyle}>\n        <Loader color={defaultStyles.color11} />\n    </div>\n);\n\nconst getNodePaths = items => Object.keys(items || {}).map(path => (\n    pathWithoutKeys(S.nodepath(items[path]) || path)\n));\n\nconst getPaths = schemas => Object.keys(schemas).reduce((acc, cur) => {\n    acc.push(cur);\n    const curSchema = schemas[cur];\n    if (curSchema) {\n        acc.push(...getNodePaths(curSchema.leafs));\n        acc.push(...getNodePaths(curSchema.leafLists));\n        acc.push(...getNodePaths(curSchema.actions));\n    }\n    return acc;\n}, []);\n\nconst isSchemasEqual = (schemas, nextSchemas) => isDeepEqual(schemas, nextSchemas);\n\nconst hasNoDataForCurrentPath = (config, path) => (\n    !Object.keys(config).some((key) => {\n        const restPath = key.startsWith(path) ? key.substr(path.length) : null;\n        if (!isString(restPath)) {\n            return false;\n        }\n        if (isNonEmptyString(restPath) && !restPath.startsWith('/')) {\n            return false;\n        }\n        const data = config[key];\n        if (data && (Object.keys(data).length === 1 && (\n            hasProp(data, 'isLoading')\n        ))) {\n            return false;\n        }\n        if (Object.keys(data).length === 0) {\n            return false;\n        }\n        if (data && (Object.keys(data).length === 1 && (\n            hasProp(data, 'totalNumberOfResults')\n            && !isPositiveNumber(data.totalNumberOfResults)\n        ))) {\n            return false;\n        }\n        return true;\n    })\n);\n\nconst checkSchemaIncludes = (schemas) => {\n    const includes = { oper: false, actions: false };\n    if (!isObject(schemas)) return includes;\n\n    return Object.keys(schemas).reduce((acc, cur) => {\n        const schema = schemas[cur];\n\n        if (schema.includesOper) {\n            acc.oper = true;\n        }\n        if (schema.includesActions) {\n            acc.actions = true;\n        }\n        return acc;\n    }, includes);\n};\n\nconst shouldRenderNoData = (\n    showEmpty,\n    showOperdata,\n    schema,\n    config,\n    schemas,\n    path,\n) => {\n    const schemaPath = toSchemaPath(path);\n    const hasActionSchema = schemaPath in schemas && isNonEmpty(schemas[schemaPath].actions);\n    if (!S.isConfig(schema) && !hasActionSchema && showOperdata === false) {\n        return true;\n    }\n    if (!showEmpty && config && hasNoDataForCurrentPath(config, path)) {\n        return true;\n    }\n\n    return false;\n};\n\nclass SchemaContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getSchemaCalled = false;\n    }\n\n    componentDidMount() {\n        const {\n            isLoading,\n            module,\n            path,\n            onLoadModules,\n        } = this.props;\n\n        if (isLoading) return;\n\n        if (isDeviceConfig(path) && (module === undefined)) {\n            onLoadModules(path);\n        }\n    }\n\n    // eslint-disable-next-line sonarjs/cognitive-complexity\n    shouldComponentUpdate(nextProps) {\n        const {\n            config,\n            exists,\n            includeSubfolders,\n            isEditMode,\n            isLoading,\n            module,\n            path,\n            schema,\n            schemas,\n            shouldReEvaluate,\n            showActions,\n            showEmpty,\n            showOperdata,\n        } = this.props;\n\n        if (config !== nextProps.config) {\n            return true;\n        }\n        if (showActions !== nextProps.showActions) {\n            return true;\n        }\n\n        if (showEmpty !== nextProps.showEmpty) {\n            return true;\n        }\n\n        if (showOperdata !== nextProps.showOperdata) {\n            return true;\n        }\n\n        if (includeSubfolders !== nextProps.includeSubfolders) {\n            return true;\n        }\n\n        if (exists !== nextProps.exists) return true;\n        if (isEditMode !== nextProps.isEditMode) return true;\n        if (isLoading !== nextProps.isLoading) {\n            if (nextProps.isLoading === true && shouldReEvaluate === true) {\n                return false;\n            }\n            return true;\n        }\n        if (path !== nextProps.path) return true;\n        if (shouldReEvaluate === false && nextProps.shouldReEvaluate === true) return true;\n\n        if (!module && nextProps.module) return true;\n        if (module && module.isLoading === true && nextProps.module.isLoading === false) {\n            return true;\n        }\n        if (!schema && nextProps.schema) return true;\n\n        if (isSchemaLoaded(schema) === false && isSchemaLoaded(nextProps.schema) === true) {\n            return true;\n        }\n\n        if (isSchemasLoaded(schemas) === false && isSchemasLoaded(nextProps.schemas) === true) {\n            return true;\n        }\n\n        if (isSchemasLoaded(nextProps.schemas)) {\n            if (!isSchemasEqual(schemas, nextProps.schemas)) return true;\n        }\n\n        if (!showEmpty && !isSchemasEqual(schemas, nextProps.schemas)) {\n            return true;\n        }\n\n        if (schemas) {\n            const schemaPaths = Object.keys(schemas);\n            const nextPaths = Object.keys(nextProps.schemas);\n\n            if (schemaPaths.length >= nextPaths.length) {\n                return !schemaPaths.every(p => nextPaths.includes(p));\n            }\n            if (schemaPaths.length < nextPaths.length) {\n                return !nextPaths.every(p => schemaPaths.includes(p));\n            }\n        }\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        this.tryLoadModules(prevProps);\n    }\n\n    tryLoadModules(prevProps) {\n        const { module, onLoadModules, path: prevPath } = prevProps;\n        const { path } = this.props;\n\n        if (!isDeviceConfig(prevPath)) return undefined;\n        if (module && module.isLoading) return undefined;\n        if (module && prevPath === path) return undefined;\n\n        return onLoadModules(prevPath);\n    }\n\n    // eslint-disable-next-line sonarjs/cognitive-complexity\n    render() {\n        const {\n            applicationName,\n            config,\n            exists,\n            hideIndicators,\n            isLoading,\n            isCase,\n            module,\n            path,\n            schema,\n            schemas,\n            onShowAllAction,\n            showEmpty,\n            showOperdata,\n            showActions,\n            showBackToSourceLink,\n        } = this.props;\n\n        if (!schema || isLoading) return createLoading();\n        if (schema && schema.loadStatus === loadStatus.PARTIAL) return createLoading();\n        if (schema && schema.loadStatus === loadStatus.LOADING) return createLoading();\n        if (schema && schema.loadStatus === loadStatus.ERROR) return <NotFound />;\n\n        const widgetKind = schema.widgetKind || getWidgetKind(schema);\n        if (widgetKind === widgetKinds.KIND_LISTENTRY && exists === false) {\n            return <NotFound />;\n        }\n\n        if (isDeviceConfig(path) && module && module.isLoading) return createLoading();\n\n        if (isDeviceConfig(path) && modulesIsEmpty(module)) {\n            return <NoCapabilitiesContainer path={path} />;\n        }\n\n        const itShouldRenderNoData = shouldRenderNoData(\n            showEmpty,\n            showOperdata,\n            schema,\n            config,\n            schemas,\n            path,\n        );\n        if (itShouldRenderNoData) return <NoData onClick={onShowAllAction} />;\n\n        const options = { showEmpty, showOperdata, showActions };\n        const schemaIncludes = isCase === undefined ? checkSchemaIncludes(schemas) : undefined;\n\n        return (\n            <>\n                <div style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        marginTop: '0.5rem',\n                    }}\n                >\n                    <span>\n                        { showBackToSourceLink &&\n                            <BackToSourceLinkContainer path={path} />\n                        }\n                    </span>\n                    { !hideIndicators && <ContentIndicators schemaIncludes={schemaIncludes} /> }\n                </div>\n                <div data-handle=\"schema-content\">\n                    {factory(applicationName, path, schema, schemas, config, options)}\n                </div>\n            </>\n        );\n    }\n}\n\n// TODO(dbildstr): create a custom PropType for this\nconst ModulePropType = PropTypes.shape({\n    isLoading: PropTypes.bool,\n});\n\nSchemaContainer.propTypes = {\n    applicationName: PropTypes.string.isRequired,\n    config: PropTypes.shape({}),\n    exists: PropTypes.bool,\n    hideIndicators: PropTypes.bool,\n    showBackToSourceLink: PropTypes.bool,\n    includeSubfolders: PropTypes.bool,\n    isEditMode: PropTypes.bool,\n    isCase: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    module: ModulePropType,\n    onLoadModules: PropTypes.func,\n    onShowAllAction: PropTypes.func,\n    path: PropTypes.string.isRequired,\n    schema: PropTypes.shape({\n        loadStatus: PropTypes.string,\n        widgetKind: PropTypes.string,\n    }),\n    schemas: PropTypes.shape({}),\n    shouldReEvaluate: PropTypes.bool,\n    showActions: PropTypes.bool,\n    showEmpty: PropTypes.bool,\n    showOperdata: PropTypes.bool,\n};\n\nSchemaContainer.defaultProps = {\n    showBackToSourceLink: false,\n};\n\nconst isSchemaLoading = (schema, state, path) => {\n    if (!!schema && (schema.loadStatus === loadStatus.LOADING)) {\n        return true;\n    }\n    const configIsLoading = selectConfigIsLoading(state, path);\n    const moduleIsLoading = selectModuleIsLoading(state, path);\n\n    return configIsLoading === true || moduleIsLoading === true;\n};\n\nconst isActionWidgetKind = schema => schema &&\n    getWidgetKind(schema) === widgetKinds.KIND_ACTION;\n\nconst mapStateToProps = (state, ownProps) => {\n    const {\n        path,\n        funcs: {\n            selectSchema = _selectSchema,\n            selectGroupedSchemas = _selectGroupedSchemas,\n        } = {},\n    } = ownProps;\n\n    let levels = -1;\n    let showEmpty = ownProps.showEmpty;\n\n    if (ownProps.includeSubfolders === false) {\n        levels = 1;\n    }\n\n    if (isBigYangPath(path)) {\n        levels = 1;\n    }\n\n    const schema = selectSchema(state, path);\n\n    if (isActionWidgetKind(schema)) {\n        levels = -1;\n        showEmpty = true;\n    }\n\n    const schemaFilter = {\n        hideEmptyContainer: true,\n        hideContainers: ownProps.hideContainers || false,\n        hideLists: ownProps.hideLists || false,\n        isEmptyMode: ownProps.isEmptyMode,\n        levels,\n        showActions: ownProps.showActions,\n        showEmpty,\n        showOperdata: ownProps.showOperdata,\n        hideDeviceConfig: isDeviceRootPath(path),\n        hideNotLoadedModuleDeviceConfig: true,\n        hideNotEvaluatedWhenEntries: true,\n    };\n    const schemas = selectGroupedSchemas(state, path, schemaFilter);\n    const paths = getPaths(schemas);\n    const config = selectConfig(state);\n    const services = servicesSelector(state);\n\n    return {\n        config,\n        exists: selectExists(state, path),\n        isEditMode: selectIsEditMode(state),\n        isLoading: isSchemaLoading(schema, state, path),\n        module: selectModule(state, path),\n        schema,\n        schemas,\n        services,\n        showEmpty,\n        shouldReEvaluate: selectShouldReEvaluate(state, path, paths),\n        showOperdata: selectShowOperdata(state),\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onLoadModules(path) {\n        return dispatch(loadModules(path));\n    },\n    onShowAllAction() {\n        dispatch(showAllAction(true));\n    },\n});\n\nconst ConnectedSchemaContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SchemaContainer);\nexport default ConnectedSchemaContainer;\n\nexport {\n    checkSchemaIncludes as _checkSchemaIncludes,\n    factory as _factory,\n    filterItems as _filterItems,\n    getCases as _getCases,\n    getChoicePath as _getChoicePath,\n    getLeaf as _getLeaf,\n    getLeafGrid as _getLeafGrid,\n    getLeafWidget as _getLeafWidget,\n    getNodeKeypath as _getNodeKeypath,\n    getPaths as _getPaths,\n    handleKindAction as _handleKindAction,\n    handleKindChoice as _handleKindChoice,\n    handleKindContainer as _handleKindContainer,\n    handleKindLeaf as _handleKindLeaf,\n    handleKindLeafList as _handleKindLeafList,\n    handleKindList as _handleKindList,\n    handleTypeLeafEmpty as _handleTypeLeafEmpty,\n    handleTypeLeafref as _handleTypeLeafref,\n    hasNoDataForCurrentPath as _hasNoDataForCurrentPath,\n    isSchemaLoading as _isSchemaLoading,\n    isPlan as _isPlan,\n    isSchemaLoaded as _isSchemaLoaded,\n    isSchemasLoaded as _isSchemasLoaded,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    SchemaContainer as _SchemaContainer,\n    schemaPathToKeypath as _schemaPathToKeypath,\n    shouldRenderNoData as _shouldRenderNoData,\n    widgetsFactory as _widgetsFactory,\n};\n","import { selectDirty } from 'modules/nodes/selectors';\n\nimport {\n    selectConfigExists,\n    selectExists,\n} from 'modules/data/selectors';\nimport { escapeKey } from '@webui-one/core/utils/path';\nimport { lstrip } from '@webui-one/core/utils/string';\nimport {\n    createThunk,\n    deleteThunk,\n} from 'modules/nodes/thunks';\nimport {\n    selectIsRootPath,\n    selectLocationPathnameFromApplicationName,\n    selectPathFromApplicationName,\n} from 'modules/routing/selectors';\n\nimport { selectIsEditMode } from 'ConfigurationEditor/reducer';\nimport { connect } from 'react-redux';\nimport { pathToObjects } from '@webui-one/core/keypath/kp-parser';\nimport SchemaHeader from '@webui-one/components/ConfigRender/SchemaHeader';\n\nconst isConfigEditorRootPath = (path) => {\n    const pathObjects = pathToObjects(path);\n    return pathObjects.length === 1;\n};\n\nconst generateName = (rootPath, path) => (\n    lstrip(path.split(`${rootPath}/`).pop(), '/')\n);\n\nconst mapStateToProps = (state, ownProps) => {\n    const { isConfig, isPresenceContainer, path } = ownProps;\n\n    const rootPath = selectPathFromApplicationName(state, ownProps.applicationName);\n    const name = generateName(rootPath, path);\n    const isEditMode = selectIsEditMode(state);\n    const presenceContainerOnConfigEditorRoot = isPresenceContainer && isConfigEditorRootPath(path);\n    const exists = presenceContainerOnConfigEditorRoot\n        ? selectConfigExists(state, path)\n        : selectExists(state, path);\n\n    return {\n        exists,\n        isConfig,\n        isDirty: selectDirty(state, path),\n        isEditMode,\n        isPresenceContainer,\n        isRootPath: selectIsRootPath(state, path),\n        link: selectLocationPathnameFromApplicationName(\n            ownProps.applicationName,\n            escapeKey(ownProps.path),\n        ),\n        name,\n        path,\n        presenceContainerOnConfigEditorRoot,\n    };\n};\n\nconst mapDispatchToProps = (dispatch, { dependants, caseAncestors, path }) => ({\n    onCreate() {\n        return dispatch(createThunk({ caseAncestors, dependants, path }));\n    },\n    onDelete() {\n        return dispatch(deleteThunk({ caseAncestors, dependants, path, deleteChildren: true }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SchemaHeader);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    generateName as _generateName,\n};\n","import {\n    createAllowExists as _createAllowExists,\n    query as jsonrpcQuery,\n    jsonrpcBatch as _jsonrpcBatch,\n} from '@webui-one/core/jsonrpc';\nimport {\n    difference,\n    flatten,\n    intersect,\n    isEmpty,\n    isNonEmptyArray,\n    uniq,\n} from '@webui-one/core/utils/array';\nimport {\n    getSchema as _getSchema,\n} from 'modules/schemas/actions';\nimport {\n    query as _query,\n} from 'modules/nodes/actions';\nimport {\n    createDisallowExistsThunk as _createDisallowExistsThunk,\n} from 'modules/nodes/thunks';\nimport { read, write } from 'modules/transactions/actions';\nimport * as actionTypes from './actionTypes';\nimport {\n    QUERY_SELECTION,\n    deviceListPath,\n    devicesRootPath,\n    getDeviceGroupDeviceListDevicePath,\n    getDeviceGroupDeviceListPath,\n} from './paths';\nimport {\n    selectedDeviceRowsSelector,\n} from './selectors';\n\nexport const selectDeviceAction = (isSelected, deviceNames) => ({\n    type: actionTypes.DEVICES_SELECT,\n    deviceNames,\n    isSelected,\n});\n\nexport const addDevicesToGroupStartAction = group => ({\n    type: actionTypes.ADD_DEVICES_TO_GROUP_START,\n    group,\n});\n\nexport const addDevicesToGroupCompleteAction = (group, value) => ({\n    type: actionTypes.ADD_DEVICES_TO_GROUP_COMPLETE,\n    group,\n    value,\n});\n\nexport const addDevicesToGroupErrorAction = (group, error) => ({\n    type: actionTypes.ADD_DEVICES_TO_GROUP_ERROR,\n    group,\n    error,\n});\n\nexport const labelAddAction = label => ({\n    type: actionTypes.LABEL_ADD,\n    label,\n});\n\nexport const labelRemoveAction = label => ({\n    type: actionTypes.LABEL_REMOVE,\n    label,\n});\n\nexport const loadDeviceGroupsStartAction = () => ({\n    type: actionTypes.LOAD_DEVICE_GROUPS_START,\n});\n\nexport const loadDeviceGroupsCompleteAction = groups => ({\n    type: actionTypes.LOAD_DEVICE_GROUPS_COMPLETE,\n    groups,\n});\n\nexport const loadDeviceGroupsErrorAction = error => ({\n    type: actionTypes.LOAD_DEVICE_GROUPS_ERROR,\n    error,\n});\n\nexport const loadModulesStartAction = path => ({\n    type: actionTypes.LOAD_MODULES_START,\n    path,\n});\n\nexport const loadModulesCompleteAction = (path, result) => ({\n    type: actionTypes.LOAD_MODULES_COMPLETE,\n    path,\n    result,\n});\n\nexport const loadModulesErrorAction = (path, error) => ({\n    type: actionTypes.LOAD_MODULES_ERROR,\n    path,\n    error,\n});\n\nexport const removeDevicesFromGroupCompleteAction = (group, devices) => ({\n    type: actionTypes.REMOVE_DEVICES_FROM_GROUP_COMPLETE,\n    devices,\n    group,\n});\n\nexport const removeDevicesFromGroupErrorAction = (group, error) => ({\n    type: actionTypes.REMOVE_DEVICES_FROM_GROUP_ERROR,\n    group,\n    error,\n});\n\nexport const removeDevicesFromGroupStartAction = (group, error) => ({\n    type: actionTypes.REMOVE_DEVICES_FROM_GROUP_START,\n    group,\n    error,\n});\n\nexport const gettingDevicesStart = () => ({\n    type: actionTypes.GETTING_DEVICES_START,\n});\nexport const gettingDevicesComplete = () => ({\n    type: actionTypes.GETTING_DEVICES_COMPLETE,\n});\n\nexport const loadDeviceGroupsForDevicesCompleteAction = groups => ({\n    type: actionTypes.LOAD_DEVICE_GROUPS_FOR_DEVICES_COMPLETE,\n    groups,\n});\nexport const loadDeviceGroupsForDevicesErrorAction = error => ({\n    type: actionTypes.LOAD_DEVICE_GROUPS_FOR_DEVICES_ERROR,\n    error,\n});\nexport const loadDeviceGroupsForDevicesStartAction = () => ({\n    type: actionTypes.LOAD_DEVICE_GROUPS_FOR_DEVICES_START,\n});\nexport const setDeviceExpandedAction = (path, column, isExpanded) => ({\n    type: actionTypes.SET_EXPANDED_ROW,\n    path,\n    column,\n    isExpanded,\n});\n\nexport const getDevices = ({\n    chunkSize,\n    offset,\n    columnKey,\n    sortorder,\n    xpathExpression,\n    selection = QUERY_SELECTION,\n    funcs: {\n        getSchema = _getSchema,\n        query = _query,\n    } = {},\n} = {}) => async (dispatch) => {\n    await dispatch(gettingDevicesStart());\n    await dispatch(getSchema({\n        path: devicesRootPath,\n        params: {\n            levels: -1,\n            stop_on_list: true,\n        },\n        reload: true,\n    }));\n\n    const querySelection = uniq([\n        'name',\n        ...selection,\n    ]);\n    const queryResult = await dispatch(query({\n        selection: querySelection,\n        path: deviceListPath,\n        sort: columnKey,\n        sortOrder: sortorder,\n        initialOffset: offset,\n        chunkSize,\n        result_as: 'string',\n        xpathExpr: xpathExpression,\n        contextNode: devicesRootPath,\n    }));\n\n    await dispatch(gettingDevicesComplete());\n    return queryResult;\n};\n\nexport const loadDeviceGroups = ({\n    funcs: {\n        query = jsonrpcQuery,\n        readThunk = read,\n    } = {},\n} = {}) => (\n    async (dispatch) => {\n        dispatch(loadDeviceGroupsStartAction());\n        try {\n            const { th } = await dispatch(readThunk());\n            const xpathExpr = 'device-group[count(device-name) > 0]';\n            const result = await query({\n                th,\n                selection: ['name'],\n                contextNode: '/ncs:devices',\n                xpathExpr,\n            });\n            const groups = flatten(result.results);\n            return dispatch(loadDeviceGroupsCompleteAction(groups));\n        } catch (error) {\n            return dispatch(loadDeviceGroupsErrorAction(error));\n        }\n    }\n);\n\nconst groupsForDevicesRequestMapper = th => xpathExpr => ({\n    method: 'query',\n    params: {\n        th,\n        selection: ['name'],\n        context_node: '/ncs:devices',\n        xpath_expr: xpathExpr,\n    },\n});\nexport const loadDeviceGroupsForDevices = ({\n    funcs: {\n        jsonrpcBatch = _jsonrpcBatch,\n        readThunk = read,\n        selectedDeviceRows = selectedDeviceRowsSelector,\n    } = {},\n} = {}) => (\n    async (dispatch, getState) => {\n        dispatch(loadDeviceGroupsForDevicesStartAction());\n        try {\n            const selectedDevices = selectedDeviceRows(getState())\n                .reduce((deviceNames, device) => {\n                    if (device.data.isSelected) {\n                        deviceNames.push(device.data.name);\n                    }\n                    return deviceNames;\n                }, []);\n            if (!isNonEmptyArray(selectedDevices)) {\n                return dispatch(loadDeviceGroupsForDevicesCompleteAction([]));\n            }\n            const { th } = await dispatch(readThunk());\n            const xpathExprList = selectedDevices.map(deviceName => (\n                `device-group[device-name=\"${deviceName}\"]`\n            ));\n            const requests = xpathExprList.map(groupsForDevicesRequestMapper(th));\n            const responses = await jsonrpcBatch({ requests });\n            const groups = uniq(flatten(responses.map(r => r.result.results)));\n            return dispatch(loadDeviceGroupsForDevicesCompleteAction(groups));\n        } catch (error) {\n            return dispatch(loadDeviceGroupsForDevicesErrorAction(error));\n        }\n    }\n);\n\nexport const getValueFromResult = (result) => {\n    if (!result || !result.results) return [];\n    return result.results.reduce((acc, obj) => [...acc, ...Object.values(obj)], []);\n};\n\nconst addValuesRequestMapper = (group, th) => deviceName => ({\n    method: 'create',\n    params: {\n        path: getDeviceGroupDeviceListDevicePath(group, deviceName),\n        th,\n    },\n});\n\nconst addValues = async (group, valuesToAdd, th, {\n    funcs: {\n        jsonrpcBatch = _jsonrpcBatch,\n        query = jsonrpcQuery,\n    } = {},\n} = {}) => {\n    const path = getDeviceGroupDeviceListPath(group);\n    const result = await query({ selection: undefined, path, th });\n    const value = getValueFromResult(result);\n    const minValuesToAdd = difference(valuesToAdd, value);\n    if (isEmpty(minValuesToAdd)) return value;\n    const requests = minValuesToAdd.map(addValuesRequestMapper(group, th));\n    return jsonrpcBatch({ requests });\n};\n\nexport const addDevicesToGroup = (devices, group, {\n    funcs: {\n        addValuesFunc = addValues,\n        createAllowExists = _createAllowExists,\n        loadDeviceGroupsFunc = loadDeviceGroupsForDevices,\n        writeThunk = write,\n    } = {},\n} = {}) => (\n    async (dispatch) => {\n        dispatch(addDevicesToGroupStartAction(group));\n        const groupPath = getDeviceGroupDeviceListPath(group);\n\n        try {\n            const { th } = await dispatch(writeThunk());\n            await createAllowExists({ path: groupPath, th });\n            const createResult = await addValuesFunc(group, devices, th);\n            if (isNonEmptyArray(createResult) && createResult[0].error) {\n                throw createResult[0].error;\n            }\n            await dispatch(loadDeviceGroupsFunc());\n            return dispatch(addDevicesToGroupCompleteAction(group));\n        } catch (error) {\n            return dispatch(addDevicesToGroupErrorAction(group, error));\n        }\n    }\n);\n\nconst deleteRequestMapper = (path, th) => deviceName => ({\n    method: 'delete',\n    params: {\n        th,\n        path: `${path}{${deviceName}}`,\n    },\n});\nexport const removeDevicesFromGroup = (devices, group, {\n    funcs: {\n        loadDeviceGroupsFunc = loadDeviceGroupsForDevices,\n        query = jsonrpcQuery,\n        jsonrpcBatch = _jsonrpcBatch,\n        writeThunk = write,\n    } = {},\n} = {}) => (\n    async (dispatch) => {\n        dispatch(removeDevicesFromGroupStartAction(group));\n        try {\n            const { th } = await dispatch(writeThunk());\n            const path = getDeviceGroupDeviceListPath(group);\n            const result = await query({\n                path,\n                th,\n            });\n            const queryValue = getValueFromResult(result);\n            const valuesToRm = intersect(queryValue, devices);\n            if (!isNonEmptyArray(valuesToRm)) {\n                // Skip deleting if the devices do not belong\n                // to the device-group\n                return dispatch(\n                    removeDevicesFromGroupCompleteAction(group, []),\n                );\n            }\n            const requests = valuesToRm.map(deleteRequestMapper(path, th));\n            const deleteResult = await jsonrpcBatch({ requests });\n            if (isNonEmptyArray(deleteResult) && deleteResult[0].error) {\n                throw deleteResult[0].error;\n            }\n            await dispatch(loadDeviceGroupsFunc());\n            return dispatch(removeDevicesFromGroupCompleteAction(group, valuesToRm));\n        } catch (error) {\n            return dispatch(removeDevicesFromGroupErrorAction(group, error));\n        }\n    }\n);\n\nconst deviceRE = /^(\\/ncs:devices\\/device\\{([^}]+)\\}).*/;\n\nexport const loadModules = (configPath, {\n    funcs: {\n        readThunk = read,\n        query = jsonrpcQuery,\n    } = {},\n} = {}) => (\n    (dispatch) => {\n        const match = deviceRE.exec(configPath);\n        if (!match) return Promise.resolve();\n        const path = `${match[1]}/module`;\n        dispatch(loadModulesStartAction(path));\n\n        return dispatch(readThunk()).then(({ th }) => (\n            query({ th, selection: ['name'], path })\n        )).then(result => (\n            dispatch(loadModulesCompleteAction(\n                path,\n                // NOTE(dbildstr): return array of strings instead of array of array of strings\n                result.results.map(module => module[0]),\n            ))\n        )).catch(error => (\n            dispatch(loadModulesErrorAction(path, error))\n        ));\n    }\n);\n\nexport const addDevice = ({\n    createPath,\n    chunkSize,\n    offset,\n    columnKey,\n    sortorder,\n    xpathExpression,\n    funcs: {\n        createDisallowExistsThunk = _createDisallowExistsThunk,\n        getDevicesThunk = getDevices,\n    } = {},\n}) => (\n    dispatch => dispatch(createDisallowExistsThunk({ path: createPath })).then((result) => {\n        if (result.error) return result;\n        return dispatch(\n            getDevicesThunk({\n                chunkSize,\n                offset,\n                columnKey,\n                sortorder,\n                xpathExpression,\n            }),\n        );\n    })\n);\n\nexport {\n    addValues as _addValues,\n};\n","import PropTypes from 'prop-types';\n\nconst ipcModification = PropTypes.shape({ path: PropTypes.string });\n\nexport default {\n    ipcModification,\n};\n"],"names":["link","color","defaultStyles","color1","textDecoration","fontSize","medium2","lineHeight","alignSelf","crumbs","display","marginLeft","minWidth","overflow","flexShrink","textOverflow","whiteSpace","fontCondensed","blackLink","textColor2","navHome","width","navUp","deviceGroupsOptions","cursor","padding","input","labelFilter","labelDropdown","wordBreak","position","backgroundColor","boxShadow","zIndex","deviceGroupsOptionsActive","background","highlight","fontWeight","color2","ActionLink","isEditMode","isOperdata","label","LinkComponent","path","to","style","actionContainer","wrapperWrapper","actionWrapperOperdata","actionWrapper","symbol","color3","overlayStyle","editModeOverlay","circleColor","iColor","propTypes","PropTypes","string","elementType","bool","defaultProps","Link","isResultOk","resultObj","Array","isArray","length","result","isObject","name","value","ActionOutput","error","resultPending","completedAt","hideSuccessfullOutput","onClearActionOutput","containerRef","useRef","contents","e","p","useEffect","current","scrollIntoView","behavior","block","inline","list","body","row","even","reduce","acc","errorKey","comp","key","push","errorData","type","actionPath","errors","data","errorArray","flatten","map","err","isNonEmptyArray","paths","reason","total","items","ix","index","formattedPath","absolutePath","pathObjs","pathToObjects","basePath","isNonEmptyString","rstrip","obj","lstrip","substring","formatRelativePath","message","pop","formatTransValidationFailed","stringifyObject","JSON","stringify","rows","r","odd","createResult","loader","color11","ref","clearActionOutputButton","onClick","info","timeStampToISOLocale","number","shape","oneOfType","arrayOf","func","backgroundColor4","margin","flexDirection","fontStyle","top","right","height","border","ActionRunButton","enabled","disabled","tryFindDeviceData","pathObjects","item","parentPath","tryFindServiceData","servicesPoints","servicePathObjects","servicePoints","Object","values","sp","last","forEach","pathObject","s","BackToSourceLink","onLoad","isFunction","styles","backToSourceLink","deviceData","serviceData","isRequired","borderRadius","fontStretch","ContentIndicator","React","Component","constructor","props","super","this","showTooltip","bind","hideTooltip","tooltip","show","hide","render","direction","toolTipText","toolTipStyle","onMouseEnter","onMouseLeave","tt","ContentIndicators","schemaIncludes","oper","actions","content","operIndicatorStyle","actionIndicatorStyle","indicatorStyle","marginTop","marginBottom","color12","EmptyLeaf","onCreate","exists","editable","container","btn","justifyContent","NoData","button","PresenceButton","symbolColor","color6","borderColor","bgColor","SchemaHeader","isDirty","isPresenceContainer","isRootPath","linkPostfix","onDelete","presenceContainerOnConfigEditorRoot","safeOnClick","shouldDisplayPresenceButton","shouldDisplayTrashcan","shouldDisplayInfoButton","disablePresenceButton","linkName","rootContainer","linkWrapperOper","linkWrapper","dot","textLink","text","line","dirty","dirtyRefCount","color7","borderWidth","borderStyle","left","color10","color8","marginRight","flexGrow","precenceTogglerWrapper","precenceToggler","bottom","states","DONE","ERROR","IDLE","PENDING","COOLDOWN_TIME","useAsyncState","cooldownTime","funcs","AbortCtrl","AbortController","useState","state","setState","running","setRunning","execute","useCallback","controller","signal","updateState","newState","stop","async","delay","run","abort","StateButton","dataHandle","doneLabel","errorLabel","disabledStyle","buttonDisabled","enabledStyle","loaderColor","loaderStyle","wrapperStyle","wrapper","useFunc","transform","getRowContentWidth","children","widths","from","c","getBoundingClientRect","Math","max","getContainerWidth","calculateGrid","widthOfColumn","widthOfContainer","numChildren","minimumRows","columnCount","floor","rowCount","ceil","min","hasStateChanged","nextState","hasPropsChanged","nextProps","isDeepEqual","shouldRenderBindingLine","numElements","getGridChildren","cur","spanRow","Grid","updateDimensions","undefined","componentDidMount","columnsDivRef","containerDivRef","subscribeResize","shouldComponentUpdate","componentWillUnmount","resizeObserver","disconnect","ResizeObserver","ro","entries","entry","cr","contentRect","observe","newWidthOfContainer","oldColumnCount","renderAsGrid","shouldAddBinder","rowGap","spanCellIndex","findIndex","columnsStyle","getGridColumnsStyle","child","cellStyle","getGridCellStyle","grid","bindingLine","spanItems","getSpanChildren","columns","gridAutoFlow","columnItem","WebkitColumnBreakInside","pageBreakInside","breakInside","backgroundColor1","columnIndex","gridArea","shouldAppendSpanRow","rowIndex","range","includes","gridTemplateAreas","range1","cells","join","columnGap","gridTemplateColumns","getRowIndex","CrossSymbol","xmlns","viewBox","fill","d","ActionContainer","keepInputParams","onKeepInputParams","onLoadAction","onResetAction","onRunAction","hasChildren","refreshPath","onResetClick","resetContainerStyles","checkboxWrapper","onSetValue","checkboxLabel","mapStateToProps","ownProps","selectKeepInputParams","_selectKeepInputParams","mapDispatchToProps","dispatch","loadActionAction","_loadActionAction","resetActionThunk","_resetActionThunk","runActionThunk","_runActionThunk","keepInputParamsAction","_keepInputParamsAction","shouldRefresh","connect","alignItems","selectIsEditMode","selectName","selectLocationPathnameFromPath","selectError","selectResult","selectResultPending","selectCompletedAt","clearActionOutputAction","selectActionPath","selectServicePoints","getServicePointsAndSchemas","Case","isLoading","SchemaContainer","applicationName","CONFIGURATION_EDITOR_NAME","includeSubfolders","isCase","showActions","showEmpty","showOperdata","CaseContainer","selectNode","loadStatus","caseLoadStatus","LOADING","Choice","onSelectCase","newSelectedCaseValue","selectedCaseValue","caseValue","cases","visibleCase","caseTabs","activeTab","tab","tabButton","isSetCase","isVisibleCase","selectedMarker","marker","noMarker","visibleCasePath","main","title","tabContainer","caseWrapper","ChoiceContainer","choicePath","nodepath","onGetCase","componentDidUpdate","prevProps","onReloadCaseData","onClearCase","selectCaseNode","node","isEmpty","clearCaseAction","choice","getCaseThunk","parentNodepath","reloadCaseDataThunk","DataContainer","load","ipcModification","modifiedPath","isChildOfPath","currentPathModified","prevSubfolders","prevIpcModification","prevPath","prevShowEmpty","prevShowOperdata","aborter","hideIndicators","showBackToSourceLink","instanceOf","JsonRpcError","objectOf","ipcPropTypes","getDataThunk","EmptyCellContainer","onExists","existsPending","existsThunk","createEmptyCellFactory","column","cellKey","rowKey","buildWidgetLeaf","isEmptyLeaf","createHeader","getDefaultColumn","createCell","buildColsDataFromSchemaChildren","kind","canBeHidden","validateForm","createColumn","isSticky","createIsDirtyColumn","createIsSelectedColumn","createBaseColumns","createIsSelectedColumnHeader","createIsSelectedColumnCell","createEmptyHeader","createDirtyCell","createColumns","isLeafList","columnChildren","columnsVisibility","createNonSortableHeader","visibleColumns","isVisible","isVisibleColumn","formatter","truncateLongString","filter","createDataCellFactory","makeSpaceSepparatedList","str","keys","parseKeypathKeys","options","initialQuotesOnly","quoteChars","token","ListContainer","onChange","onClose","onConfirm","onDeleteSelected","onSelectAllRows","onSelectRow","showAddListItemModal","selectVisibleColumn","changeSortOrder","onGoToPage","formKeyValues","hasCheckboxes","hasSelectedAll","selectMenuIsActive","shouldShowColumnSelector","errorOnCreate","chunkSize","onQueryData","isActionInput","totalNumberOfResults","isModified","offset","prevModified","selectedCount","isSelected","componentDidCatch","hasError","target","dataset","keyName","formIsValid","formKeyValue","createPath","onDeleteRows","onError","onReevaluateSchema","keyValue","startsWith","endsWith","then","isSpaceSepparatedList","keyList","substr","promiseChain","quoteKey","sequence","results","nodesActionTypes","CREATE_ERROR","onSetCheckBoxValues","keyPath","getAddButton","header","getButtons","resetHide","initHide","hideSelectMenu","toggleMenuIsActive","y","empty","hasSelection","stl","selectColumns","buttonWrapper","styleName","centeredText","getColumns","sortColumn","sortOrder","legacySort","columnKey","isDesc","createSortableHeaderFactory","createSelectedColumnHeader","createCheckboxHeaderFactory","createSelectedColumnCell","createCheckBoxCellFactory","onSetColumnVisible","newSortorder","newColumnKey","kindpath","buttons","additionalElements","emptyMessage","headerElements","optionsWrapper","nrOfStaticColumns","emptyDirty","translate","Messages","LIST","ADD_NEW_ITEM_TITLE","closeOnConfirm","boolean","object","isSchemaLoaded","rootPath","schema","mergeProps","stateProps","dispatchProps","mergedProps","args","selection","getQuerySelection","nodesActions","query","sort","initialOffset","Promise","resolve","createDisallowExistsThunk","createErrorAction","Error","keyPaths","loadingPath","deleteNodesThunk","dependants","setCheckBoxValues","setColumnVisibilityAction","reEvaluateSchemaThunk","makeMapStateToProps","rowsSelector","createNodeRowAndChangesSelector","columnsSelector","createColumnsVisibilitySelector","selectApplicationName","split","selectLocationPathnameFromApplicationName","escapeKey","selectConfigIsLoading","selectDirty","selectOffset","selectShowEmpty","selectSortColumn","selectsortOrder","selectTotalNumberOfResults","NoCapabilitiesContainer","connectActionCompletedAt","onLoadModules","deviceKey","COMMON","NO_CAPABILITIES_FOUND_FOR_DEVICE","tryGetDeviceName","loadModules","isEditable","config","widgetKind","widgetKinds","KIND_KEY","LEAF_LIST_KEYS","freeze","handleKindLeafList","keypath","S","isConfig","keyNames","handleTypeLeafref","deletable","isConfigFalseCallpoint","isMandatory","mandatory","defaultValue","caseAncestors","deps","isLeafref","handleTypeLeafEmpty","getLeaf","KIND_LEAFLIST","widgetType","widgetTypes","LEAF_LEAFREF","isOper","canUpdate","LEAF_EMPTY","LEAF_ENUMERATION","isEnum","enumerationOptions","getLeafWidget","handleTypeLeafEnum","handleTypeLeaf","getLeafItems","leafs","currentSchemaPath","currentKeypath","schemaPathToKeypath","leafSchema","getLeafGrid","getActionGrid","filterFunc","currentPath","assign","hasInputChildren","hasProp","is_action_input","evaluated_when_entry","getChoicePath","schemas","choiceSchema","meta","reduceRight","found","pathWithoutKeys","isListEntry","isParent","getCases","parentPrefix","hasEvaluatedWhenEntries","cas","qname","getNodeKeypath","getLastListEntryKeypath","handleKindAction","leafLists","handleKindChoice","prefix","getParentPath","ConnectedSchemaContainer","isPlan","headerPath","test","find","k","handleKindContainer","selectPathIsNotEmpty","handleKindLeaf","schemaPath","handleKindList","nodeKeypath","toKeypathEvalNedId","getColumnChildren","widgetsFactory","currentSchema","KIND_ACTION","KIND_CASE","handleKindCase","KIND_CHOICE","KIND_LISTENTRY","KIND_CONTAINER","KIND_LIST","KIND_LEAF","KIND_NONE","factory","widgets","getAction","COMPLETE","isSchemasLoaded","some","PARTIAL","createLoading","getNodePaths","getPaths","curSchema","isSchemasEqual","nextSchemas","hasNoDataForCurrentPath","restPath","isString","isPositiveNumber","checkSchemaIncludes","includesOper","includesActions","shouldRenderNoData","toSchemaPath","hasActionSchema","isNonEmpty","getSchemaCalled","module","isDeviceConfig","shouldReEvaluate","schemaPaths","nextPaths","every","tryLoadModules","onShowAllAction","getWidgetKind","modules","modulesIsEmpty","ModulePropType","isSchemaLoading","configIsLoading","moduleIsLoading","selectModuleIsLoading","selectSchema","_selectSchema","selectGroupedSchemas","_selectGroupedSchemas","levels","isBigYangPath","isActionWidgetKind","hideEmptyContainer","hideContainers","hideLists","isEmptyMode","hideDeviceConfig","isDeviceRootPath","hideNotLoadedModuleDeviceConfig","hideNotEvaluatedWhenEntries","selectConfig","services","servicesSelector","selectExists","selectModule","selectShouldReEvaluate","selectShowOperdata","showAllAction","generateName","selectPathFromApplicationName","isConfigEditorRootPath","selectConfigExists","selectIsRootPath","createThunk","deleteThunk","deleteChildren","deviceNames","actionTypes","DEVICES_SELECT","addDevicesToGroupStartAction","group","ADD_DEVICES_TO_GROUP_START","addDevicesToGroupCompleteAction","ADD_DEVICES_TO_GROUP_COMPLETE","addDevicesToGroupErrorAction","ADD_DEVICES_TO_GROUP_ERROR","LABEL_ADD","LABEL_REMOVE","loadDeviceGroupsStartAction","LOAD_DEVICE_GROUPS_START","loadDeviceGroupsCompleteAction","groups","LOAD_DEVICE_GROUPS_COMPLETE","loadDeviceGroupsErrorAction","LOAD_DEVICE_GROUPS_ERROR","loadModulesStartAction","LOAD_MODULES_START","loadModulesCompleteAction","LOAD_MODULES_COMPLETE","loadModulesErrorAction","LOAD_MODULES_ERROR","removeDevicesFromGroupCompleteAction","devices","REMOVE_DEVICES_FROM_GROUP_COMPLETE","removeDevicesFromGroupErrorAction","REMOVE_DEVICES_FROM_GROUP_ERROR","removeDevicesFromGroupStartAction","REMOVE_DEVICES_FROM_GROUP_START","gettingDevicesStart","GETTING_DEVICES_START","gettingDevicesComplete","GETTING_DEVICES_COMPLETE","loadDeviceGroupsForDevicesCompleteAction","LOAD_DEVICE_GROUPS_FOR_DEVICES_COMPLETE","loadDeviceGroupsForDevicesErrorAction","LOAD_DEVICE_GROUPS_FOR_DEVICES_ERROR","loadDeviceGroupsForDevicesStartAction","LOAD_DEVICE_GROUPS_FOR_DEVICES_START","isExpanded","SET_EXPANDED_ROW","getDevices","sortorder","xpathExpression","QUERY_SELECTION","getSchema","_getSchema","_query","devicesRootPath","params","stop_on_list","reload","querySelection","uniq","queryResult","deviceListPath","result_as","xpathExpr","contextNode","jsonrpcQuery","readThunk","read","th","groupsForDevicesRequestMapper","method","context_node","xpath_expr","loadDeviceGroupsForDevices","jsonrpcBatch","_jsonrpcBatch","selectedDeviceRows","selectedDeviceRowsSelector","getState","selectedDevices","device","requests","deviceName","responses","getValueFromResult","addValuesRequestMapper","getDeviceGroupDeviceListDevicePath","addValues","valuesToAdd","getDeviceGroupDeviceListPath","minValuesToAdd","difference","addValuesFunc","createAllowExists","_createAllowExists","loadDeviceGroupsFunc","writeThunk","write","groupPath","deleteRequestMapper","queryValue","valuesToRm","intersect","deleteResult","deviceRE","configPath","match","exec","catch","_createDisallowExistsThunk","getDevicesThunk"],"sourceRoot":""}