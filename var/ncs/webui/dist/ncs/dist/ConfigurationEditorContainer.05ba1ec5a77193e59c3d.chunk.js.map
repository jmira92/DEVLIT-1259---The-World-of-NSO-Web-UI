{"version":3,"file":"ConfigurationEditorContainer.05ba1ec5a77193e59c3d.chunk.js","mappings":"gKAAA,kBACA,cACA,WAIA,WACA,cACA,cACA,E,wbAAA,WACA,cACA,cACA,c,kLAEA,MAMMA,EAAa,CAAC,GAAI,KAClBC,EAASC,GAAQF,EAAWG,SAASD,GAE3C,MAAME,UAAmBC,EAAAA,QAAMC,UAC3BC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,0BAA4BD,KAAKC,0BAA0BC,KAAKF,MACrEA,KAAKG,uBAAyBH,KAAKG,uBAAuBD,KAAKF,MAC/DA,KAAKI,kBAAoBJ,KAAKI,kBAAkBF,KAAKF,MACrDA,KAAKK,eAAiBL,KAAKK,eAAeH,KAAKF,MAC/CA,KAAKM,YAAcN,KAAKM,YAAYJ,KAAKF,MACzCA,KAAKO,MAAQ,CAAEC,aAAc,GAAIC,eAAgB,IAGtB,gCAACX,EAAOS,GACnC,MAAQf,EAASM,EAATN,KAER,OAAOA,IADkBe,EAAjBC,aAEF,KACA,CAAEA,aAAchB,EAAMiB,eAAgBjB,GAGhDkB,qBACI,MAAQC,EAAuBX,KAAKF,MAA5Ba,mBACAF,EAAmBT,KAAKO,MAAxBE,eACR,GAAuB,KAAnBA,EAAuB,CACvB,MAAMG,GAAe,IAAAC,eAAcJ,GAC7BK,EAAoBF,EAAaA,EAAaG,OAAS,GAAGC,WAChEhB,KAAKiB,SAAS,CAAER,eAAgBK,IAChCH,EAAmBG,IAI3BX,yBAAgE,IAAzCe,EAAyC,uDAA3B,GAAIC,EAAuB,4DAAXC,EACjD,QAA0DpB,KAAKF,MAAvDa,EAAR,EAAQA,mBAAoBU,EAA5B,EAA4BA,YAAaC,EAAzC,EAAyCA,aAEzCX,EAD2BX,KAAKO,MAAxBE,eAC2BS,EAAaG,EAAaC,EAAcH,GAG/Ed,eAAeb,EAAM+B,GACjB,GAAIA,EAAWvB,KAAKU,yBACf,CACD,MAAQc,EAAexB,KAAKF,MAApB0B,WACAf,EAAmBT,KAAKO,MAAxBE,eACR,GAAa,KAATjB,EAAa,CACb,MAAMsB,EAAoBL,EAAiBjB,EACrCiC,EAA2BzB,KAAKI,kBAAkBU,GACxDU,GAAW,IAAAX,eAAcY,GAA0BC,MAAMlC,WAKzDgC,EAHgBjC,EAAOkB,GACjBA,GACA,IAAAI,eAAcJ,GAAgBiB,MAAMlC,OAMtDS,0BAA0BT,EAAM+B,GAC5B,MAAQd,EAAmBT,KAAKO,MAAxBE,eACR,IAAIK,EACJ,GAAIS,EAAW,CACX,GAAIhC,EAAOkB,GAAiB,OAC5B,MAAMG,GAAe,IAAAC,eAAcJ,GACnCK,EAAoBF,EAAaA,EAAaG,OAAS,GAAGC,gBAE1DF,EAAoBL,EAAiBjB,EAEzCQ,KAAKI,kBAAkBU,GAG3BR,cACI,MAAQqB,EAAY3B,KAAKF,MAAjB6B,QACAnB,EAAiBR,KAAKO,MAAtBC,aACRR,KAAKiB,SAAS,CAAER,eAAgBD,IAChCmB,IAGJvB,kBAAkBU,GACd,MAAQH,EAAuBX,KAAKF,MAA5Ba,mBACFF,EAAkB,KAAG,IAAAmB,OAAMd,EAAmB,OAGpD,OAFAd,KAAKiB,SAAS,CAAER,eAAAA,IAChBE,EAAmBF,GACZA,EAGXoB,qBAAqBC,EAAOC,EAAQC,GAChC,QAA4ChC,KAAKF,MAAzCmC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,iBACvB,IAAIC,GAAkB,EAqCtB,OAnCcL,EAAMM,UAAUC,QAAO,CAACC,EAAKC,EAAKC,KAC5C,GAAID,EAAI/C,KAAM,CACV,MAAMA,EAAO+C,EAAI/C,KACD,IAAVgD,GAAeT,GAAYI,GAC7BG,EAAIG,KACA,gCACIC,IAAM,GAAElD,KACRmD,MAAOH,IAAUR,EAAmBW,EAAAA,QAAMC,UAAYD,EAAAA,QAAME,MAFhE,MASRV,EAAkBW,MAAMC,QAAQR,EAAIS,MACpC,IAAIC,GAAW,IAAArB,OA9GfW,CAAAA,GACyB,IAArCA,EAAI/C,KAAK0D,QAAQX,EAAIvB,YACfuB,EAAI/C,KAAK2D,OAAOZ,EAAIvB,WAAWD,QAC/BwB,EAAI/C,KA2GuB4D,CAAQb,GAAM,KAC/BJ,IACAc,GAAW,IAAAI,oBAAmBJ,EAAU,GAAI,KAEhD,MAAMJ,EAAOX,EAAiBK,GAE9BD,EAAIG,KACA,wBAACR,EAAD,CACIU,MAAOH,IAAUR,EAAmBW,EAAAA,QAAMC,UAAYD,EAAAA,QAAME,KAC5DH,IAAKlD,EACL8D,GAAIT,EACJ,cAAc,QAAOA,IACrBU,QAAS,IAAMvD,KAAKI,kBAAkBmC,EAAI/C,OAEzCyD,IAIb,OAAOX,IACR,IACUF,UAGjBoB,SACI,QAOIxD,KAAKF,MANL2D,EADJ,EACIA,cACQC,EAFZ,EAEI3B,OACA4B,EAHJ,EAGIA,UACA1B,EAJJ,EAIIA,cACAC,EALJ,EAKIA,iBACA0B,EANJ,EAMIA,WAEJ,EAGI5D,KAAKO,MAFLE,EADJ,EACIA,eACAD,EAFJ,EAEIA,aAEEqD,EAAWtE,EAAOkB,GAClBsB,GAAU8B,GAAYH,EACtBI,GAAmB,IAAAlC,OAAMnB,EAAgB,KAAKsD,MAAM,QACpD/B,EAAgD,IAA5B8B,EAAiB/C,QAAwC,KAAxB+C,EAAiB,GACtE,EACAA,EAAiB/C,OACjBe,GAAQ,IAAAjB,eAAe,KAAG,IAAAe,OAAMnB,EAAgB,QAChDuD,EAAQhE,KAAK6B,qBAAqBC,EAAOC,EAAQC,GACjDiC,EAAUnC,GAASA,EAAMf,OAAS,EAAKe,EAAM,GAAGtC,KAAO,IACvD0E,GAAW3E,EAAOiB,GACxB,OACI,+BAAKmC,MAAOA,EAAAA,QAAMwB,OAAQ,cAAY,aAAa,uBAAsB1D,GACrE,wBAACwB,EAAD,CACIqB,GAAIpB,EAAiB,CAAE1C,KAAM,KAC7BmD,MAAOA,EAAAA,QAAMyB,QACb,cAAc,WAASF,EAAU,GAAK,cAEtC,wBAAC,UAAD,CAAcG,MAAOH,EAAUI,EAAcC,OAASD,EAAcE,UAExE,wBAACvC,EAAD,CACIqB,GAAIpB,EAAiB,CAAE1C,KAAMyE,IAC7BtB,MAAOA,EAAAA,QAAM8B,MACb,cAAc,SAAOP,EAAU,GAAK,cAEpC,wBAAC,UAAD,CAAYG,MAAOH,EAAUI,EAAcC,OAASD,EAAcE,UAEtE,gCAAM7B,MAAOA,EAAAA,QAAMC,WACd,KAEHoB,EACDjC,GAAU,gCAAMY,MAAOA,EAAAA,QAAMC,WAAY,KAC1C,wBAAC,UAAD,CACIjC,mBAAoBX,KAAKG,uBACzBsD,cAAeI,EAAWD,EAAaH,EACvCjC,WAAYxB,KAAKK,eACjBqE,sBAAuB1E,KAAKC,0BAC5B0B,QAAS3B,KAAKM,YACdd,KAAMiB,EACNsB,OAAQA,EACR4B,UAAWA,IAEd5B,GAAU,gCAAMY,MAAOA,EAAAA,QAAMC,WAAY,OAM1DlD,EAAWiF,UAAY,CACnBlB,cAAemB,EAAAA,QAAUC,QAAQD,EAAAA,QAAUE,QAC3C/C,OAAQ6C,EAAAA,QAAUG,KAClBpB,UAAWiB,EAAAA,QAAUG,KACrB9C,cAAe2C,EAAAA,QAAUI,YACzBxF,KAAMoF,EAAAA,QAAUE,OAChBnE,mBAAoBiE,EAAAA,QAAUK,KAC9BtD,QAASiD,EAAAA,QAAUK,KACnBzD,WAAYoD,EAAAA,QAAUK,KACtBrB,WAAYgB,EAAAA,QAAUC,QAAQD,EAAAA,QAAUE,QACxCzD,YAAauD,EAAAA,QAAUG,KACvBzD,aAAcsD,EAAAA,QAAUG,KACxB7C,iBAAkB0C,EAAAA,QAAUK,KAAKC,YAGrCxF,EAAWyF,aAAe,CACtBlD,cAAemD,EAAAA,S,MAGJ1F,E,kHClOf,kBACA,cACA,WAGA,cACA,E,wbAAA,WACA,W,kLAEA,MAEM2F,EAAY,CAACC,EAAOC,IAClBD,EAAME,KAAKC,cAAgBF,EAAMC,KAAKC,cAAsB,GACxD,EAGNC,EAAkB,CAAC5F,EAAOS,KAC5B,MAAQkD,EAAkB3D,EAAlB2D,cACFkC,EAAQpF,EAAMqF,WAAWH,cACzBI,EAAY,GACZC,EAAiB,GACjBC,EAAW,GAkCjB,OAjCCtC,GAAiB,IAAIuC,SAASC,IAC3B,MAAMC,EAAWD,EACXE,EAAaD,EAAShD,QAAQ,KACpC,GAAc,KAAVyC,EAEA,YADAE,EAAUpD,KAAK,CAAE+C,KAAMU,EAAUA,SAAAA,IAGrC,IAAIV,EAAOU,EAIX,GAHIC,GAAc,IACdX,EAAOU,EAAS/C,OAAOgD,EAAa,IAEpCX,EAAKC,cAAcW,WAAWT,GAAQ,CACtC,IAAIU,GAAY,EAShB,OARAR,EAAUG,SAASM,IACXA,EAAKd,OAASA,IAEdc,EAAKd,KAAOc,EAAKJ,SACjBG,GAAY,WAGpBR,EAAUpD,KAAK,CAAE+C,KAAMa,EAAYH,EAAWV,EAAMU,SAAAA,IAGpDA,EAAST,cAAcW,WAAWT,GAClCG,EAAerD,KAAK,CAAE+C,KAAMU,EAAUA,SAAAA,IAGtCA,EAAST,cAAchG,SAASkG,IAChCI,EAAStD,KAAK,CAAE+C,KAAMU,EAAUA,SAAAA,OAGxCL,EAAUU,KAAKlB,GACfS,EAAeS,KAAKlB,GACb,CAAEQ,UAAAA,EAAWC,eAAAA,EAAgBC,SAAAA,I,qBAGxC,MAAMS,UAAwB7G,EAAAA,QAAMC,UAChCC,YAAYC,GACRC,MAAMD,GACNE,KAAKyG,WAAazG,KAAKyG,WAAWvG,KAAKF,MACvCA,KAAK0G,aAAe1G,KAAK0G,aAAaxG,KAAKF,MAC3CA,KAAK2G,YAAc3G,KAAK2G,YAAYzG,KAAKF,MACzCA,KAAK4G,cAAgB5G,KAAK4G,cAAc1G,KAAKF,MAC7CA,KAAKO,MAAQ,CACTsG,uBAAuB,EACvBC,mBAAe1F,EACfyE,UAAW,GACXC,eAAgB,GAChBC,SAAU,GACVH,WAAY,IAIW,gCAAC9F,EAAOS,GACnC,MAAQkD,EAA0B3D,EAA1B2D,cAAe1B,EAAWjC,EAAXiC,OACvB,OAAKxB,EAAMsG,sBACP9E,EACO,CACH8D,UAAWpC,EAAcsD,KAAIvB,IAAQ,CAAGA,KAAAA,EAAMU,SAAUV,MACxDM,eAAgB,GAChBC,SAAU,IAGXL,EAAgB5F,EAAOS,GARW,KAW7CyG,YAAYF,EAAeG,EAAWC,EAAOtB,GACzC,QAAsBxE,IAAlB0F,GAA+BG,EAAUlG,OAAS+F,EAClD9G,KAAKmH,SACDF,EAAUH,GAAeZ,eAE1B,GAAmB,KAAfN,EACP5F,KAAKmH,SAAS,SACX,GAAID,EAAMnG,OAAS,EAAG,CACzB,MAAMqG,EAAYF,EAAMG,QAAO7B,GAAQA,EAAKA,OAASI,IAAY,GAC7DwB,EACApH,KAAKmH,SAASC,EAAUlB,UACA,IAAjBgB,EAAMnG,QACbf,KAAKmH,SAASD,EAAM,GAAGhB,WAKnCoB,kBAAkBC,EAAGT,EAAeG,GAChCM,EAAEC,iBACF,MAAMC,EAAYR,EAAUlG,OAC5B,GAAI0G,EAAY,EAAG,CACf,IAAIC,EACJ,QAAsBtG,IAAlB0F,EACAY,EAAqB,YAAVH,EAAE7E,IAAoB+E,EAAY,EAAI,MAC9C,CACH,MAAME,EAAiB,YAAVJ,EAAE7E,KAAqB,EAAI,EAClCkF,EAAcC,KAAKC,IAAIL,EAzGrB,IA0GRC,GAAYZ,EAAgBa,EAAOC,GAAeA,EAEtD5H,KAAKiB,SAAS,CAAE6F,cAAeY,KAIvCK,UAAUR,EAAGT,EAAeG,EAAWC,EAAOtB,GAE1C,GADA2B,EAAEC,sBACoBpG,IAAlB0F,GAA+BG,EAAUlG,OAAS+F,EAClD9G,KAAKgI,oBACDf,EAAUH,GAAeZ,eAE1B,GAAIgB,EAAMnG,OAAS,EAAG,CACzB,MAAMqG,EAAYF,EAAMG,QAAO7B,GAAQA,EAAKA,OAASI,IAAY,GACjE,GAAIwB,EACApH,KAAKgI,oBAAoBZ,EAAUlB,cAChC,CACH,IAAI+B,EAAgBrC,EAAW7E,OAC3BmH,EAAiB,GACjBC,EAAkB,GACtB,MAAMC,EAAUlH,GAAgBsE,GAAQA,EAAKA,KAAKY,WAAWlF,GAC7D,IAAImH,GAAa,EACjB,KAAOA,GACHJ,GAAiB,EACjBC,EAAiBhB,EAAM,GAAG1B,KAAKrC,OAAO,EAAG8E,GACzCE,EAAkBjB,EAAMG,OAAOe,EAAQF,IACvCG,EAAaJ,GAAiBf,EAAM,GAAG1B,KAAKzE,QACjCoH,EAAgBpH,SAAWmG,EAAMnG,OAEhD,MAAMuH,EAAepB,EAAM,GAAG1B,KAAKrC,OAAO,EAAG8E,EAAgB,GAC7DjI,KAAKiB,SAAS,CAAE2E,WAAY0C,UAER,IAAjBpB,EAAMnG,QACbf,KAAKgI,oBAAoBd,EAAM,GAAGhB,UAI1CU,cAAcW,GACV,QAOIvH,KAAKO,MANLsG,EADJ,EACIA,sBACAd,EAFJ,EAEIA,SACAe,EAHJ,EAGIA,cACAjB,EAJJ,EAIIA,UACAC,EALJ,EAKIA,eACAF,EANJ,EAMIA,WAEIjE,EAAY3B,KAAKF,MAAjB6B,QACFuF,EAAQrB,EAAU0C,OAAOzC,GACzBmB,EAAYC,EAAMqB,OAAOxC,GACjB,UAAVwB,EAAE7E,KAAmBmE,EACrB7G,KAAKgH,YAAYF,EAAeG,EAAWC,EAAOtB,GACjC,WAAV2B,EAAE7E,KACT1C,KAAKiB,SAAS,CAAE4F,uBAAuB,EAAOjB,WAAY,KAC1DjE,IACA3B,KAAK2F,MAAM6C,QACO,YAAVjB,EAAE7E,KAA+B,cAAV6E,EAAE7E,MAAwBmE,EAExC,QAAVU,EAAE7E,KAAiBmE,EAC1B7G,KAAK+H,UAAUR,EAAGT,EAAeG,EAAWC,EAAOtB,GAClC,cAAV2B,EAAE7E,KAAsC,KAAfkD,GAChC5F,KAAKgI,oBAAoB,IAAI,GAJ7BhI,KAAKsH,kBAAkBC,EAAGT,EAAeG,GAQjDP,eACuB1G,KAAKF,MAAhBiC,SAKJpB,EADIX,KAAKF,MADLa,oBAGAX,KAAK2F,MAAM8C,MAjLH,IAoLhBzI,KAAKiB,SAAS,CACV6F,mBAAe1F,EACfwE,WAAY5F,KAAK2F,MAAQ3F,KAAK2F,MAAM8C,MAAQ,KAKpDhC,aACI,MAAQ9E,EAAY3B,KAAKF,MAAjB6B,QACR3B,KAAKiB,SAAS,CAAE4F,uBAAuB,EAAOjB,WAAY,KAC1DjE,IAGJgF,eAEIhG,EAD+BX,KAAKF,MAA5Ba,sBAERX,KAAKiB,SAAS,CACV4F,uBAAuB,IAI/B6B,iBAAiBC,EAAOzH,EAAa0H,GACjC,MAAM3C,GAAY,IAAA5C,oBAAmBsF,EAAMnD,KAAM,GAAI,IAC/CqD,EAAM5C,EAAU6C,OAAOC,OAAO7H,EAAa,OAC3C8H,EAAW,CAAC/C,EAAU9C,OAAO,EAAG0F,GAClC5C,EAAU9C,OAAO0F,EAAK3H,EAAYH,QAClCkF,EAAU9C,OAAO0F,EAAM3H,EAAYH,SAEvC,OACI,6BACIkI,KAAK,SACLC,SAAU,EACVC,YAAc5B,IAAyB,IAAbA,EAAE6B,QAAcpJ,KAAKmH,SAASwB,EAAMzC,WAC9DvD,MAAOiG,EAASjG,EAAAA,MAAM0G,0BAA4B1G,EAAAA,MAAM2G,oBACxDC,IAAKX,GAAU,CAAEY,IAAQxJ,KAAKyJ,mBAAqBD,IACnD9G,IAAKiG,EAAMzC,SACX,cAAc,UAASyC,EAAMzC,YAAY0C,EAAS,SAAW,MAE5C,KAAhBI,EAAS,IAAa,gCAAMtG,IAAI,KAAKsG,EAAS,IAC9B,KAAhBA,EAAS,IAAa,gCAAMtG,IAAI,IAAIC,MAAOA,EAAAA,MAAM+G,WAAYV,EAAS,IACtD,KAAhBA,EAAS,IAAa,gCAAMtG,IAAI,KAAMsG,EAAS,KAK5D7B,SAASlB,GACL,QAA+BjG,KAAKF,MAA5B0B,EAAR,EAAQA,WAAYO,EAApB,EAAoBA,OACpB/B,KAAKiB,SAAS,CAAE6F,mBAAe1F,EAAWwE,WAAY,KAChCpE,EAAJ,KAAdyE,EAA6B,GACjBlE,EAAU,IAAGkE,KAAgB,IAAGA,KAGpD+B,oBAAoB/B,GAA8B,IAAnB1E,EAAmB,wDAC9C,QAA0CvB,KAAKF,MAAvC4E,EAAR,EAAQA,sBAAuB3C,EAA/B,EAA+BA,OAC/B/B,KAAKiB,SAAS,CAAE6F,mBAAe1F,EAAWwE,WAAY,KACtDlB,EAAsB3C,EAAU,IAAGkE,KAAgB,IAAGA,IAAa1E,GAGvEiC,SACI,QAOIxD,KAAKO,MANLsG,EADJ,EACIA,sBACAC,EAFJ,EAEIA,cACAjB,EAHJ,EAGIA,UACAC,EAJJ,EAIIA,eACAC,EALJ,EAKIA,SACAH,EANJ,EAMIA,WAEIjC,EAAc3D,KAAKF,MAAnB6D,UACJ3D,KAAK2F,QAAO3F,KAAK2F,MAAM8C,MAAQ7C,GACnC,IAAI+D,EAAyB,GAgB7B,OAfI9C,IAEA8C,EADkB9D,EAAU0C,OAAOzC,EAAeyC,OAAOxC,IACtBgB,KAAI,CAAC4B,EAAOiB,IACvCA,EA7PI,GA6PyB,KA7PzB,KA8PJA,EACO,+BAAKlH,IAAM,OAAMkH,IAAMjH,MAAOA,EAAAA,MAAM2G,qBAApC,OAEJtJ,KAAK0I,iBACRC,EACA/C,EACAgE,IAAO9C,MAMf,+BAAKnE,MAAOA,EAAAA,MAAMkH,YAAa,cAAY,mBACvC,iCACIlH,MAAOA,EAAAA,MAAMgD,MACb4D,IAAMC,IAAQxJ,KAAK2F,MAAQ6D,GAC3BM,UAAW9J,KAAK4G,cAChB,cAAY,aACZmD,QAAS/J,KAAK2G,YACdqD,OAAQhK,KAAKyG,WACbwD,SAAUjK,KAAK0G,eAEjBG,GACE,+BACI0C,IAAMW,IAASlK,KAAKmK,aAAeD,GACnCvH,MAAOA,EAAAA,MAAMyH,eAEXzG,GACE,wBAAC,UAAD,CAAQU,MAAOC,EAAc+F,SAE/BV,EAAuB5I,OAAS,IAAM4C,GACpC,gDACKgG,GAG2B,IAAlCA,EAAuB5I,SAAiB4C,GACtC,+BAAKjB,IAAK,OAAQC,MAAOA,EAAAA,MAAM2G,qBAA/B,eAS5B9C,EAAgB7B,UAAY,CACxBlB,cAAemB,EAAAA,QAAUC,QAAQD,EAAAA,QAAUE,QAC3C/C,OAAQ6C,EAAAA,QAAUG,KAClBpB,UAAWiB,EAAAA,QAAUG,KACrBpE,mBAAoBiE,EAAAA,QAAUK,KAAKC,WACnC1D,WAAYoD,EAAAA,QAAUK,KACtBP,sBAAuBE,EAAAA,QAAUK,KACjCtD,QAASiD,EAAAA,QAAUK,M,MAGRuB,E,+FC9Tf,kBACA,cACA,c,mDAEe,MAAM8D,UAAsB3K,EAAAA,QAAMC,UAC7CC,YAAYC,GACRC,MAAMD,GACNE,KAAKO,MAAQ,CACTgK,MAAO,KACPC,UAAW,MAInBC,kBAAkBF,EAAOC,GACrBxK,KAAKiB,SAAS,CACVsJ,MAAAA,EACAC,UAAAA,IAIRhH,SACI,MAAQkH,EAAa1K,KAAKF,MAAlB4K,SACAH,EAAUvK,KAAKO,MAAfgK,MACR,OAAIA,EAEI,wBAAC,UAAD,CAAUA,MAAOA,IAGlBG,G,YAIfJ,EAAc3F,UAAY,CACtB+F,SAAU9F,EAAAA,QAAU+F,UAAU,CAC1B/F,EAAAA,QAAUC,QAAQD,EAAAA,QAAUgG,MAC5BhG,EAAAA,QAAUgG,S,kFCnClB,kBACA,c,mDAEA,MAAMC,EAAe,QAAGxG,EAAH,EAAGA,MAAH,OACjB,+BACIyG,QAAQ,MACRC,YAAY,OACZC,GAAG,UACHC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,YACRC,SAAS,YAET,gCACIC,KAAMjH,EACNkH,EAAE,yTASdV,EAAalG,UAAY,CACrBN,MAAOO,EAAAA,QAAUE,QAGrB+F,EAAa1F,aAAe,CACxBd,MAAO,O,MAGIwG,E,+FCjCf,kBACA,c,mDAEA,MAAMW,EAAa,QAAGnH,EAAH,EAAGA,MAAH,OACf,+BACIyG,QAAQ,MACRC,YAAY,OACZC,GAAG,UACHC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,YACRC,SAAS,YAET,mCACIC,KAAMjH,EACNoH,OAAO,8FAMnBD,EAAW7G,UAAY,CACnBN,MAAOO,EAAAA,QAAUE,QAGrB0G,EAAWrG,aAAe,CACtBd,MAAO,O,MAGImH,E,mOC9Bf,I,EAAA,WACA,WACA,G,EAAA,W,2BACA,UAIA,WAKA,WACA,WAKA,MAAME,EAAmBnL,IACrB,MAAMqD,GAAa,IAAA+H,kBAAiBpL,GAEpC,MAAO,CACHkD,eAFkB,IAAAmI,qBAAoBrL,GAGtCwB,QAAQ,IAAA8J,cAAatL,GACrBoD,WAAW,IAAAmI,iBAAgBvL,GAC3B0B,cAAemD,EAAAA,KACfxB,WAAAA,EACAvC,aAAa,IAAA0K,mBAAkBxL,GAC/Be,cAAc,IAAA0K,oBAAmBzL,K,4BAmB1B,IAAA0L,SACXP,GAhBuBQ,IAAY,CACnCvL,mBAAmBnB,GAAkG,IAA5F0B,EAA4F,uDAA9E,GAAIG,EAA0E,4DAA5DD,EAAWE,EAAiD,4DAAlCF,EAAWD,EAAuB,4DAAXC,EACtG8K,GAAS,IAAAC,uBAAsB,CAC3B3M,KAAAA,EACA0B,YAAAA,EACAG,YAAAA,EACAC,aAAAA,EACAH,UAAAA,MAGRQ,UACIuK,GAAS,IAAAE,oBAIF,CAGb1M,EAAAA,S,+FClDF,kBACA,cACA,cACA,cACA,WACA,cACA,cACA,WACA,E,wbAAA,WACA,WACA,cACA,cACA,W,kLAEA,MAAM2M,UAA4B1M,EAAAA,QAAMC,UACpCC,YAAYC,GACRC,MAAMD,GACNE,KAAKO,MAAQ,CACT+L,aAAa,GAIrB9I,SACI,QAMIxD,KAAKF,MALL4K,EADJ,EACIA,SACAlJ,EAFJ,EAEIA,WACA+K,EAHJ,EAGIA,YACAC,EAJJ,EAIIA,WACAC,EALJ,EAKIA,sBAEIH,EAAgBtM,KAAKO,MAArB+L,YACFI,EACF,+BAAK/J,MAAOgK,EAAAA,aAAaC,UAAW,cAAY,mBAC5C,kCACIC,KAAK,SACL,cAAY,eACZlK,MAAOgK,EAAAA,aAAavD,OACpB7F,QAAS,IAAMvD,KAAKiB,SAAS,CAAEqL,aAAa,KAJhD,kBAQCA,GACG,kCACIO,KAAK,SACL,cAAY,qBACZtJ,QAAS,IAAMvD,KAAKiB,SAAS,CAAEqL,aAAa,IAC5CQ,SAAU,IAAM9M,KAAKiB,SAAS,CAAEqL,aAAa,IAC7C3J,MAAOgK,EAAAA,aAAaI,SAEpB,+BAAKpK,MAAOgK,EAAAA,aAAaK,kBAGhCV,GACG,+BAAK3J,MAAOgK,EAAAA,aAAajL,KACrB,+BAAKiB,MAAOgK,EAAAA,aAAaM,kBACxBT,EACD,+BAAK7J,MAAOgK,EAAAA,aAAaO,cAMnCC,EAAmB,CACrB,wBAAC,UAAD,MACA,wBAAC,UAAD,MACAT,GAEJ,OACI,+BACI,cAAaU,EAAAA,0BACbzK,MAAOA,EAAAA,MAAM0K,aAEb,wBAAC,UAAD,CACIC,gBAAiB,uBACjBC,0BAA2BJ,GAE3B,+BAAKxK,MAAOA,EAAAA,MAAM6K,cACd,+BAAK7K,MAAOA,EAAAA,MAAM8K,gBACd,wBAAC,UAAD,KACI,wBAAC,UAAD,CACIjM,WAAYA,EACZhC,KAAM+M,EAAYmB,MAClBxL,iBAAkBA,EAAAA,oBAGzBuK,GACG,+BAAK,cAAY,cAAc9J,MAAOA,EAAAA,MAAMgL,cACvC,IAAAC,WACGC,EAAAA,SAASC,oBAAoBC,gCAMjD,+BAAKpL,MAAO2B,EAAc0J,UAE9B,+BAAKrL,MAAOA,EAAAA,MAAMsL,qBACd,+BAAKtL,MAAOA,EAAAA,MAAMuL,iBACd,wBAAC,UAAD,KACKxD,KAIb,wBAAC,UAAD,QAMhB2B,EAAoB1H,UAAY,CAC5B+F,SAAU9F,EAAAA,QAAUgG,KACpB4B,WAAY5H,EAAAA,QAAUuJ,MAAMC,QAAQlJ,WACpC1D,WAAYoD,EAAAA,QAAUK,KACtBsH,YAAa3H,EAAAA,QAAUuJ,MAAMC,QAAQlJ,WACrCuH,sBAAuB7H,EAAAA,QAAUG,M,MAGtBsH,E,uLCrHf,kBACA,cACA,WACA,WACA,WACA,WACA,WACA,cACA,cACA,WACA,WAMA,WACA,WACA,WACA,WACA,WAOA,WACA,UACA,WAIA,cACA,cACA,WACA,WAKA,WASA,WACA,c,mDAEA,MAAMgC,EAAcC,IAChB,IAAAC,UAASD,IAAiC,IAAvBA,EAAMpL,QAAQ,KAC1B,IAAGoL,IACJA,E,iBAQV,MAAME,UAAqC7O,EAAAA,QAAMC,UAC7CC,YAAYC,GACRC,MAAMD,GACNE,KAAKsO,MAAQ,GACbtO,KAAKyO,UAAY,CAAC,KAAM,KAAM,KAAM,MACpCzO,KAAK0O,gBAAkB1O,KAAK0O,gBAAgBxO,KAAKF,MACjDA,KAAK2O,cAAgB3O,KAAK2O,cAAczO,KAAKF,MAC7CA,KAAK4O,cAAgB5O,KAAK4O,cAAc1O,KAAKF,MAGjD6O,oBACI,QAMI7O,KAAKF,MALLgP,EADJ,EACIA,WACAC,EAFJ,EAEIA,WACAC,EAHJ,EAGIA,kBACAC,EAJJ,EAIIA,qBACAC,EALJ,EAKIA,mBAEJD,EAAqB7B,EAAAA,2BACrBpN,KAAKmP,YAAYJ,GAEjBG,EAAmBlP,KAAKyO,UAAWzO,KAAK0O,kBAEpC,IAAAU,kBAAiBN,IACjBE,EAAkBF,GAI1BO,mBAAmBC,GACf,QAA0CtP,KAAKF,MAAvCgP,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,kBACAO,EAA+BD,EAA3CR,WAA4BC,EAAeO,EAAfP,WACpC/O,KAAKmP,YAAYJ,GAEbD,IAAeS,GACfP,EAAkBF,GAI1BU,uBACI,QAIIxP,KAAKF,MAHLiP,EADJ,EACIA,WACAU,EAFJ,EAEIA,mBACAC,EAHJ,EAGIA,cAEJD,EAAmBzP,KAAKyO,UAAWzO,KAAK0O,iBACxCgB,EACIrB,EAAYrO,KAAKsO,OACjBtO,KAAK4O,cACLG,GAIRH,cAAce,EAAeC,GACzB,QAKI5P,KAAKF,MAJL+P,EADJ,EACIA,SACAC,EAFJ,EAEIA,SACAC,EAHJ,EAGIA,gBACAC,EAJJ,EAIIA,cAEJ,IAAAC,cACIN,EACAC,EAAaM,OAAO1Q,KACpB,CACIqQ,SAAAA,EACAC,SAAAA,EACAC,gBAAAA,EACAC,aAAAA,IAKZb,YAAYgB,GACR,QAKInQ,KAAKF,MAJLiP,EADJ,EACIA,WACOqB,EAFX,EAEI9B,MACA+B,EAHJ,EAGIA,YACAX,EAJJ,EAIIA,cAEEY,EAAWtQ,KAAKsO,MAgBtB,MAfwB,iBAAb8B,GAAyBA,IAAapQ,KAAKsO,QAClDtO,KAAKsO,MAAQ8B,GAEbE,IAAatQ,KAAKsO,QAClB+B,EACIhC,EAAYrO,KAAKsO,OACjBtO,KAAK4O,cACLG,GAEJW,EACIrB,EAAYiC,GACZtQ,KAAK4O,cACLuB,IAGDnQ,KAAKsO,MAGhBK,cAAc4B,GACV,MAAQC,EAAWxQ,KAAKF,MAAhB0Q,OACFC,EAAUrD,EAAAA,0BACVsD,GAAM,IAAAC,YAAY,GAAEF,IAzGfF,CAAAA,GACVA,GAAuB,MAAZA,GACT,IAAA1P,eAAc0P,GAAS7O,MAAMkP,IADI,GAwGAC,CAAUN,MAC9CC,EAAO/N,KAAKiO,GAGhBhC,gBAAgBoC,GACZ,QAKI9Q,KAAKF,MAJLiR,EADJ,EACIA,iBACAC,EAFJ,EAEIA,eACAC,EAHJ,EAGIA,kBACAC,EAJJ,EAIIA,yBAGA7P,EAGA6P,EAHA7P,YACA8P,EAEAD,EAFAC,UACA7P,EACA4P,EADA5P,aAGa,OAAbwP,EACAG,EAAkB3P,GACE,OAAbwP,EACPC,EAAiB1P,GACG,OAAbyP,GACPE,GAAgBG,GAIxBC,mBACI,QAKIpR,KAAKF,MAJLiR,EADJ,EACIA,iBACAC,EAFJ,EAEIA,eACAC,EAHJ,EAGIA,kBACAC,EAJJ,EAIIA,yBAGA7P,EAGA6P,EAHA7P,YACA8P,EAEAD,EAFAC,UACA7P,EACA4P,EADA5P,aAEJ,OACI,+BAAKqB,MAAO0O,EAAAA,cAAcC,gBAAiB5O,IAAI,UAC3C,+BAAKC,MAAO0O,EAAAA,cAAcE,OACtB,wBAAC,UAAD,CACIC,UAAQ,EACR/I,OAAQ0I,EACRM,WAAYhJ,GAASuI,GAAgBvI,GACrCjD,KAAK,cACLkM,UAAU,SAEV,+BAAK/O,MAAO0O,EAAAA,cAAcM,OAA1B,wBAKR,wBAAC,UAAD,CACIH,UAAQ,EACR/I,MAAO0I,EACPM,WAAYT,EACZxL,KAAK,aACLkM,UAAU,SAEV,+BAAK/O,MAAO0O,EAAAA,cAAcM,OAA1B,eAIJ,wBAAC,UAAD,CACIH,SAAUL,EACV1I,OAAQpH,EACRoQ,WAAYV,EACZvL,KAAK,eACLkM,UAAU,UAEV,+BAAK/O,MAAOwO,EAAYE,EAAAA,cAAcM,MAAQN,EAAAA,cAAcO,eAA5D,iBAIJ,wBAAC,UAAD,CACIJ,SAAUL,EACV1I,OAAQnH,EACRmQ,WAAYR,EACZzL,KAAK,YACLkM,UAAU,UAEV,+BAAK/O,MAAOwO,EAAYE,EAAAA,cAAcM,MAAQN,EAAAA,cAAcO,eAA5D,2BAQhBpO,SACI,QAQIxD,KAAKF,MAPL+R,EADJ,EACIA,kBACAC,EAFJ,EAEIA,gBACAC,EAHJ,EAGIA,WACAxF,EAJJ,EAIIA,YACAlL,EALJ,EAKIA,YACA8P,EANJ,EAMIA,UACA7P,EAPJ,EAOIA,aAEE0Q,EAAgD,KAAtBzF,EAAYmB,MACtCuE,GAAY,IAAAC,eAAc3F,EAAYmB,OACtCyE,GAAmBF,GAAoBJ,EAE7C,OACI,wBAAC,UAAD,CACIrQ,WAAYxB,KAAK2O,cACjBpC,YAAaA,EACbC,WAAYxM,KAAKoR,mBACjB3E,sBAAuBwF,GAEtBD,EAAyB,wBAAC,UAAD,MACtB,wBAAC,UAAD,CACI1E,gBAAiBF,EAAAA,0BACjByE,kBAAmBM,EACnBL,gBAAiBA,EACjBC,WAAYA,EACZvS,KAAM+M,EAAYmB,MAClBrM,YAAaA,EACb8P,UAAWA,EACX7P,aAAcA,EACd8Q,sBAAoB,M,kCAQ5C5D,EAA6B7J,UAAY,CACrCmK,WAAYlK,EAAAA,QAAUE,OACtBoM,yBAA0BtM,EAAAA,QAAUuJ,MAAMC,QAC1CyD,kBAAmBjN,EAAAA,QAAUG,KAC7B+M,gBAAiBO,EAAAA,QAAaP,gBAC9BC,WAAYnN,EAAAA,QAAUG,KACtBgK,WAAYnK,EAAAA,QAAUG,KACtBuJ,MAAO1J,EAAAA,QAAUE,OACjBkK,kBAAmBpK,EAAAA,QAAUK,KAC7B+K,aAAcpL,EAAAA,QAAUK,KACxB4K,SAAUjL,EAAAA,QAAUK,KACpB6K,SAAUlL,EAAAA,QAAUK,KACpB8K,gBAAiBnL,EAAAA,QAAUK,KAC3BiK,mBAAoBtK,EAAAA,QAAUK,KAC9BgK,qBAAsBrK,EAAAA,QAAUK,KAAKC,WACrC6L,iBAAkBnM,EAAAA,QAAUK,KAAKC,WACjC+L,kBAAmBrM,EAAAA,QAAUK,KAAKC,WAClC8L,eAAgBpM,EAAAA,QAAUK,KAAKC,WAC/BmL,YAAazL,EAAAA,QAAUK,KAAKC,WAC5BuK,mBAAoB7K,EAAAA,QAAUK,KAC9ByK,cAAe9K,EAAAA,QAAUK,KAAKC,WAC9BqH,YAAa3H,EAAAA,QAAUuJ,MAAMC,QAAQlJ,WACrCsL,OAAQ5L,EAAAA,QAAUuJ,MAAMC,QACxB/M,YAAauD,EAAAA,QAAUG,KACvBoM,UAAWvM,EAAAA,QAAUG,KACrBzD,aAAcsD,EAAAA,QAAUG,MAI5B,MAAM2G,EAAkB,CAACnL,EAAO+R,KAC5B,MACehE,GADMgE,EAAS/F,aAAgB,IACtCmB,MACR,MAAQ,CACJoB,YAAY,IAAAyD,kBAAiBhS,EAAO+N,GACpC4C,0BAA0B,IAAAsB,gCAA+BjS,GACzDsR,mBAAmB,IAAAY,yBAAwBlS,GAC3CuR,iBAAiB,IAAAY,uBAAsBnS,GACvCwR,YAAY,IAAAY,kBAAiBpS,GAC7BwO,YAAY,IAAA6D,kBAAiBrS,EAAO+N,GACpCA,MAAAA,EACAuE,aAAa,IAAAC,mBAAkBvS,GAC/Bc,aAAa,IAAA0K,mBAAkBxL,GAC/B4Q,WAAW,IAAA4B,iBAAgBxS,GAC3Be,cAAc,IAAA0K,oBAAmBzL,K,qBAIzC,MAAMyS,EAAqB,SACvB9G,GADuB,6DAMnB,GANmB,IAGnB+G,MAHmB,aAKf,GALe,MAIfC,gBAAAA,OAJe,MAIGC,EAAAA,mBAJH,QAOrB,CACFnE,kBAAkBxP,GACd0M,EAASgH,EAAgB,CAAE1T,KAAAA,MAE/BuQ,gBAAgBjO,GACZoK,GAAS,IAAAkH,qBAAoBtR,KAEjCkO,aAAaxQ,EAAMiJ,GACfyD,GAAS,IAAAmH,gBAAe7T,EAAMiJ,KAElCqH,SAAStQ,GAED0M,GADmB,KADY,0DAEtB,IAAAoH,cAAa9T,IAEb,IAAA+T,6BAA4B/T,KAG7CqQ,SAASrQ,GACL0M,GAAS,IAAAsH,cAAahU,KAE1B0P,mBAAmBT,EAAWgF,GAC1BvH,GAAS,IAAAwH,kBAAiBjF,EAAWgF,KAEzChE,mBAAmBhB,EAAWgF,GAC1BvH,GAAS,IAAAyH,oBAAmBlF,EAAWgF,KAE3CxE,qBAAqBzJ,GACjB0G,GAAS,IAAA0H,0BAAyBpO,KAEtCuL,iBAAiBtI,GACbyD,GAAS,IAAA2H,oBAAmBpL,KAEhCuI,eAAevI,GACXyD,GAAS,IAAA4H,iBAAgBrL,KAE7BwI,kBAAkBxI,GACdyD,GAAS,IAAA6H,qBAAoBtL,KAEjC4H,YAAW,CAAC7Q,EAAMiU,EAAS1E,IAEZ7C,EADP6C,GACgB,IAAAiF,wBAAuB,CAACxU,GAAOiU,IAEnC,IAAAQ,wBAAuB,CAACzU,GAAOiU,IAEnD/D,cAAa,CAAClQ,EAAMiU,EAAS1E,IAEd7C,EADP6C,GACgB,IAAAmF,0BAAyB,CAAC1U,GAAOiU,IAErC,IAAAU,0BAAyB,CAAC3U,GAAOiU,M,+BAI1C,IAAAxH,SACXP,EACAsH,EAFW,EAGb,IAAAoB,YAAW5F,I,+FClZb,kBACA,cACA,cACA,WACA,WACA,E,wbAAA,WACA,cACA,WACA,cACA,cACA,WACA,UAGA,W,4RAEA,MAAM6F,EAAW,CACb,qBAAsB,aACtB,uBAAwB,uBACxB,qBAAsB,qBACtB,kBAAmB,kBACnB,qBAAsB,qBACtB,sBAAuB,sBACvB,0BAA2B,iBAC3B,kBAAmB,kBACnB,eAAgB,gBA8JdC,EAAoB,CAAEC,QAAQ,EAAOC,KAAM,IAE3CC,EAAqB,IAWtB,IATGC,EASH,EATGA,aACAC,EAQH,EARGA,SACAC,EAOH,EAPGA,YACAC,EAMH,EANGA,cACAC,EAKH,EALGA,YACAlR,EAIH,EAJGA,WACAmR,EAGH,EAHGA,kBACAC,EAEH,EAFGA,wBAGJ,S,EAAkCrV,EAAAA,QAAMsV,SAASX,G,EAAjD,E,8zBAAOY,EAAP,KAAkBC,EAAlB,KAGMC,GAAc,aAAeT,G,QACnC,OACI,+BAAKhS,MAAOA,EAAAA,mBAAMiK,WACd,wBAAC,UAAD,CACIyI,MAAM,kBACNC,aAAcJ,EAAUX,OACxBgB,eARO,IAAMJ,EAAab,IAU1B,+BAAK,cAAY,cACZY,EAAUV,OA1GR,EACnBE,EACAU,EACAR,EACAC,EACAC,EACAE,EACAQ,IAEA,+BAAK,cAAY,WAAW7S,MAAOA,EAAAA,mBAAM8S,aACrC,+BAAK9S,MAAOA,EAAAA,mBAAM+S,iBACd,wBAAC,EAAAtQ,KAAD,CACI9B,IAAI,IAAAqN,YAAY,GAAEvD,EAAAA,0CAClBzK,MAAOA,EAAAA,mBAAMgT,QAFjB,YAMA,kCACIC,SAAUZ,EACVnI,KAAK,SACLlK,MAAQqS,EACFrS,EAAAA,mBAAMkT,qBACNlT,EAAAA,mBAAMmT,aAEZvS,QAAS6R,EACT,cAAY,mBAETJ,EAGK,+BAAKrS,MAAOA,EAAAA,mBAAMoT,cACd,wBAAC,UAAD,CAAQ1R,MAAOC,EAAc0R,UAHnC,WAQd,+BAAKrT,MAAOA,EAAAA,mBAAMsT,mBACZrB,IAAgBC,GAAiBC,IAC/B,+BAAKnS,MAAOA,EAAAA,mBAAMuT,oBACbrB,GACG,+BAAKlS,MAAOA,EAAAA,mBAAMwT,QACd,wBAAC,UAAD,CAAQ9R,MAAOC,EAAc8R,cAGpCtB,GACG,gCAAM,cAAY,gBACZ,wBAAsB,IAAAuB,sBAAqBvB,OAK5DF,IAAgBC,GAAiBC,GAC9B,+BAAK,cAAY,eAAenS,MAAOA,EAAAA,mBAAMiS,aAA7C,uEAEI,wBAAC,EAAAxP,KAAD,CACIzC,MAAO,CAAE0B,MAAO,SAChBf,IAAI,IAAAqN,YAAW2F,EAAAA,qBAFnB,kBAQNlI,OAAOpL,KAAK0R,GAAc3T,OAAS,GACjC,mCACI,wBAAC,UAAD,CAAMwV,QAAM,GACNnI,OAAOpL,KAAK0R,GAAcnO,OAAOQ,KAC/ByP,GA7IH,EAACA,EAAUC,EAAYjB,KAC5C,MAAMkB,EAAYD,EAAWD,GACvBG,EAAaD,EAAUE,OACrBF,EAAU5L,UACV4L,EAAUG,OACZrC,EAAOkC,EAAUE,KAChB,IAAGF,EAAU5L,UACduJ,EAASqC,EAAUG,SAAY,mBAAkBH,EAAUG,UAC3DC,EAAcJ,EAAUE,KACxBjU,EAAAA,mBAAMoU,iBACNpU,EAAAA,mBAAMqU,oBAEZ,OACI,+BAAKtU,IAAK8T,EAAU,cAAY,SAAS7T,MAAOA,EAAAA,mBAAMsU,aAClD,+BAAK,cAAaT,EAAU7T,MAAOA,EAAAA,mBAAMuU,WACrC,+BACIvU,MAAOA,EAAAA,mBAAMwU,cACb,cAAY,gBAEXT,EAAUlR,MAEbmR,IAAeD,EAAUE,MACvB,kCACI/J,KAAK,SACL,cAAY,kBACZlK,MAAOmU,EACPvT,QAAS,IAAMiS,EAAUkB,EAAUlM,YAEjCgK,GAITmC,GAAcD,EAAUE,MACrB,gCACI,cAAY,kBACZjU,MAAOmU,GAELtC,MAyGE4C,CACIZ,EACA9B,EACAc,SAwClB6B,CACA3C,EACAU,EACAR,EACAC,EACAC,EACAE,GApBQR,GAAQW,EAAa,CAAEZ,QAAQ,EAAMC,KAAAA,MA9HtC,EAAC5Q,EAAYmR,IAC9B,+BAAK,cAAY,UAAUpS,MAAOA,EAAAA,mBAAM8S,aACpC,+BAAK9S,MAAOA,EAAAA,mBAAM+S,iBACd,+BAAK/S,MAAOA,EAAAA,mBAAMgT,QAAlB,YAEJ,+BAAKhT,MAAOA,EAAAA,mBAAMsT,kBACd,+BAAKtT,MAAOA,EAAAA,mBAAMuT,oBACbnB,GACG,+BAAKpS,MAAOA,EAAAA,mBAAMwT,QACd,wBAAC,UAAD,CAAQ9R,MAAOC,EAAc8R,gBAIvCrB,GACE,wBAAC,UAAD,CAAMwB,QAAM,GACP3S,EAAW2C,OAAOQ,KAAIuQ,GACnB,wBAAC,EAAAlS,KAAD,CACI9B,IAAI,IAAAqN,YAAY,GAAEvD,EAAAA,6BAA6BkK,KAC/C5U,IAAK4U,EACL3U,MAAOA,EAAAA,mBAAM+T,WAEZY,QAgIfC,CAAa3T,EAAYmR,KAKvCN,EAAmB9P,UAAY,CAC3BqQ,wBAAyBpQ,EAAAA,QAAUG,KACnC2P,aAAc9P,EAAAA,QAAUuJ,MAAM,IAAIjJ,WAClCyP,SAAU/P,EAAAA,QAAUK,KAAKC,WACzB0P,YAAahQ,EAAAA,QAAUG,KACvB8P,cAAejQ,EAAAA,QAAUG,KACzB+P,YAAalQ,EAAAA,QAAU4S,OACvB5T,WAAYgB,EAAAA,QAAUC,QAAQD,EAAAA,QAAUE,QACxCiQ,kBAAmBnQ,EAAAA,QAAUG,M,MAGlB0P,E,0LC9Of,eACA,WAGA,WAGA,UAGA,UAIA,WAKA,WAGA,WACA,cACA,cACA,cACA,WAKA,W,mDAEA,MAAMgD,EAAmBC,GACGtJ,OAAOpL,KAAK0U,GACbrV,QAAO,CAACC,EAAKqV,KAChC,MAAMC,EAAMF,EAASC,GACf7M,EAAU8M,EAAI9M,QACd+L,EAASe,EAAIf,OAInB,MAAO,IACAvU,EACH,CAACqV,GAAS,CACNnS,KAAMmS,EACN7M,QAAAA,EACA8L,KARgB,OAAXC,EASLA,OAAAA,EACArM,UATUoN,EAAIpN,cAYvB,I,qBAGP,MAAMqN,UAAoClY,EAAAA,QAAMC,UAC5CiP,oBACI,QAAsC7O,KAAKF,MAAnCgY,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,OAAvB,EAA+BC,IACrBF,IAAkBG,EAAAA,WAAWC,YACnCH,IAIR1I,mBAAmBC,GACf,QAAuBtP,KAAKF,MAApBiY,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,GACJG,EAAW7I,EAAf0I,GACJA,IAAOG,GACPJ,IAIRvU,SACI,QASIxD,KAAKF,MARL4X,EADJ,EACIA,SACAU,EAFJ,EAEIA,iBACAtD,EAHJ,EAGIA,YACAF,EAJJ,EAIIA,YACAC,EALJ,EAKIA,cACAjR,EANJ,EAMIA,WACAoR,EAPJ,EAOIA,wBACAD,EARJ,EAQIA,kBAEEL,EAAe+C,EAAgBC,GACrC,OACI,wBAAC,UAAD,CACIhD,aAAcA,EACdC,SAAUyD,EACVtD,YAAaA,EACbF,YAAaA,EACbC,cAAeA,EACfjR,WAAYA,EACZmR,kBAAmBA,EACnBC,wBAAyBA,K,iCAMzC6C,EAA4BlT,UAAY,CACpCmQ,YAAalQ,EAAAA,QAAU4S,OACvBxC,wBAAyBpQ,EAAAA,QAAUG,KACnCgQ,kBAAmBnQ,EAAAA,QAAUG,KAC7B+S,cAAelT,EAAAA,QAAU4S,OACzBO,OAAQnT,EAAAA,QAAUK,KAAKC,WACvBkT,iBAAkBxT,EAAAA,QAAUK,KAAKC,WACjCwS,SAAU9S,EAAAA,QAAUuJ,MAAMC,QAAQlJ,WAClC0P,YAAahQ,EAAAA,QAAUG,KACvB8P,cAAejQ,EAAAA,QAAUG,KACzBnB,WAAYgB,EAAAA,QAAUC,QAAQD,EAAAA,QAAUE,QACxCkT,GAAIpT,EAAAA,QAAU4S,QAGlBK,EAA4B1S,aAAe,CACvCkT,eAAgB,GAChBC,OAAQ,GACRZ,SAAU,IAGd,MAAM1E,EAAqB9G,IAAY,CACnC6L,OAAM,IACK7L,GAAS,IAAAqM,yBAEpBH,iBAAgB,IACLlM,GAAS,IAAAsM,mBAEpBC,mBAAkB,CAACnB,EAAWoB,IACnBxM,GAAS,IAAAyM,wBAAuBrB,EAAWoB,M,wBAI1D,MAAMhN,EAAmBnL,IACrB,MAAMqY,GAAY,IAAAC,iBAAgBtY,GAC5BwU,GAAoB,IAAA+D,yBAAwBvY,GAC5CuX,GAAgB,IAAAiB,qBAAoBxY,GACpCyY,KAAkB,IAAAC,qBAAoB1Y,EAAO2Y,EAAAA,aAC7CC,GAAiB,IAAAC,sBAAqB7Y,GACtCsU,IAAkBmE,KAAmBG,EACrCnE,GAA2B4D,KAAeI,KAAmBG,EAEnE,MAAO,CACHrE,aAAa,IAAAuE,mBAAkB9Y,EAAO2Y,EAAAA,aACtClE,wBAAAA,EACAD,kBAAAA,EACA+C,cAAAA,EACAJ,UAAU,IAAA4B,gBAAe/Y,GACzBqU,eAAe,IAAA2E,aAAYhZ,EAAO2Y,EAAAA,aAClCrE,cAAAA,EACAjR,YAAY,IAAA+H,kBAAiBpL,GAC7ByX,IAAI,IAAAwB,uBAAsBjZ,K,4BAInB,IAAA0L,SACXP,EACAsH,EAFW,CAGb6E,G,uNC3JF,I,EAAA,G,EAAA,U,2BACA,WACA,WACA,WACA,E,wbAAA,WACA,W,+HAEO,MAAM4B,EAA8B,KAAM,CAC7C5M,KAAM6M,EAAYC,2B,gCAGf,MAAMC,EAA8BrP,IAAS,CAChDsC,KAAM6M,EAAYG,yBAClBtP,MAAAA,I,gCAGG,MAAMuP,EAAiC,SAC1Cta,EACAua,EACAhY,EACAiY,GAJ0C,IAK1C3Y,IAL0C,yDAM1CC,IAN0C,+DAOxC,CACFuL,KAAM6M,EAAYO,4BAClBza,KAAAA,EACAua,OAAAA,EACAC,OAAAA,EACAjY,OAAAA,EACAV,YAAAA,EACAC,aAAAA,I,mCAGJ,MAAM4Y,EAAyBC,MAAO3a,EAAMwY,EAAIgC,EAAQ9Y,EAAaC,EAAWiZ,KAC5E,MAAMpX,EAAOgX,EAAOK,KAAK3X,IACzB,IAAI4X,EAaJ,MAZoB,KAAhBpZ,IACAoZ,EAAa,GAAEN,EAAOK,KAAK7U,oBAAoBxC,EAAK,QAAQ9B,QAWzDkZ,EAAK,QATG,CACXpC,GAAAA,EACAxY,KAAAA,EACA+a,UAAWvX,EACXwX,UAAW,SACXC,WAAYH,EACZI,aAAclb,EAAK2D,OAAO,EAAG3D,EAAKmb,YAAY,MAC9CC,WAAYzZ,K,wBAKiB,wEAYjC,GAXA3B,EADiC,EACjCA,KACA0B,EAFiC,EAEjCA,YACAG,EAHiC,EAGjCA,YACAC,EAJiC,EAIjCA,aAJiC,IAKjCH,UAAAA,OALiC,MAKrB,GALqB,MAMjC8R,MANiC,aAW7B,GAX6B,MAO7B4H,GAAAA,OAP6B,MAOxBC,EAAAA,KAPwB,MAQ7BC,UAAAA,OAR6B,MAQjBC,EAAAA,eARiB,MAS7BC,QAAAA,OAT6B,MASnBC,EAAAA,QATmB,MAU7BC,+BAAAA,OAV6B,MAUIC,EAAAA,+BAVJ,SAY1BjB,MAAOjO,EAAUmP,KACxB,KAAK,IAAAjM,kBAAiB5P,IAAkB,MAATA,EAC3B,OAAO0M,EAAS6O,KAEpB7O,EAASuN,KACT,IACI,MAAQzB,SAAa9L,EAAS2O,MAAtB7C,GACFzX,EAAQ8a,IAEd,IAAIrB,EAaJ,GAVIA,EAJ6BmB,EAA+B5a,EAAOf,GAI1De,EAAM+a,YAAYtB,aAEZiB,EAAQ,aAAc,CACjCzb,KAAAA,EACAwY,GAAAA,EACAuD,OAAQ,EACRC,uBAAuB,IAIN,SAArBxB,EAAOK,KAAKoB,KAAiB,CAC7B,MAAM1B,QAAeG,EACjB1a,EACAwY,EACAgC,EACA9Y,EACAC,EACA8Z,GAEJ,OAAO/O,EACH4N,EACIta,EACAua,GACA,EACAC,IAIZ,OAAO9N,EACH4N,EACIta,EACAwa,GACA,EACA,KACA3Y,EACAC,IAGV,MAAOiJ,GACL,OAAO2B,EAAS0N,EAA4BrP,O,cAIzB,KAAM,CAC7BsC,KAAM6M,EAAYgC,S,mMCvHanb,GAC/BA,EAAM+a,YAAY7X,c,eACMlD,GAASA,EAAM+a,YAAYvZ,O,kBACxBxB,GAASA,EAAM+a,YAAY3X,U,eAC9BpD,GAASA,EAAM+a,YAAYtB,O,iCACT,CAACzZ,EAAOf,IAASe,EAAM+a,YAAY9b,MAC7Ee,EAAM+a,YAAY9b,OAASA,GAC3Be,EAAM+a,YAAYtB,Q,6GCPtB,eACA,WACA,W,0GAEA,MAAM2B,EAAW,CAACC,EAAQC,KACtB,MAAMpT,EAAQmT,EAAOnT,MACEoT,EAAfC,WACGF,EAAOG,SAAWtT,G,cAGjC,MAAMwH,EAAe,CACjBN,EACAqM,EAFiB,KAQX,IAJFlM,EAIE,EAJFA,SACAE,EAGE,EAHFA,aACAH,EAEE,EAFFA,SACAE,EACE,EADFA,gBAEJ,MAAMkM,EAAUtM,EAAcsM,SAAW,GACnCC,EAAa,GACbC,EAAU,GACVL,EAAa,GACbM,EAAgB,GACtBH,EAAQjW,SAAS4V,IACb,MAAMS,GAAW,IAAAC,aAAYV,EAAOG,QAASC,IACzC,IAAA5M,kBAAiBiN,GACjBD,EAAc3Z,KAAK4Z,IAGL,YAAdT,EAAOW,IACPL,EAAWzZ,KAAK,CAACmZ,EAAOG,SAAS,IAEnB,YAAdH,EAAOW,KACPJ,EAAQP,EAAOG,UAAW,GAEZ,gBAAdH,EAAOW,IACPL,EAAWzZ,KAAK,CAACmZ,EAAOG,SAAS,IAEnB,cAAdH,EAAOW,IACPZ,EAASC,EAAQ,CAAEE,WAAAA,QAG3BI,EAAWlW,SAAQ,IAA4B,O,EAAA,E,4CAAA,I,gxBAA1BxG,EAA0B,KAApBgd,EAAoB,K,QAC3C1M,EAAStQ,EAAMgd,MAEnBpO,OAAOpL,KAAKmZ,GAASnW,SAASyW,IAC1B5M,EAAS4M,MAEbrO,OAAOpL,KAAK8Y,GAAY9V,SAAS4E,IAC7BoF,EAAapF,EAAMkR,EAAWlR,OAE9BwR,EAAcrb,OAAS,GACvBgP,GAAgB,IAAA2M,MAAKN,K,uBAIdnM,E","sources":["webpack://webui/./packages/components/Breadcrumb/Breadcrumb.jsx","webpack://webui/./packages/components/Breadcrumb/BreadcrumbInput.jsx","webpack://webui/./packages/components/ConfigRender/ErrorBoundary.jsx","webpack://webui/./packages/styles/static/NavigateHome.jsx","webpack://webui/./packages/styles/static/NavigateUp.jsx","webpack://webui/./src/Common/Components/Breadcrumb/BreadcrumbContainer.jsx","webpack://webui/./src/ConfigurationEditor/ConfigurationEditor.jsx","webpack://webui/./src/ConfigurationEditor/ConfigurationEditorContainer.jsx","webpack://webui/./src/ConfigurationEditor/PackagesAndModules.jsx","webpack://webui/./src/ConfigurationEditor/PackagesAndModulesContainer.jsx","webpack://webui/./src/modules/breadcrumbs/actions.js","webpack://webui/./src/modules/breadcrumbs/selectors.js","webpack://webui/./src/modules/comet/configeditor.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    strip,\n    truncateLongString,\n} from '@webui-one/core/utils/string';\nimport { pathToObjects } from '@webui-one/core/keypath/kp-parser';\nimport NavigateHome from '@webui-one/styles/static/NavigateHome';\nimport NavigateUp from '@webui-one/styles/static/NavigateUp';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport Link from '../Link';\nimport BreadcrumbInput from './BreadcrumbInput';\nimport style from './BreadcrumbStyles';\n\nconst getPath = obj => (\n    obj.path.indexOf(obj.parentPath) === 0\n        ? obj.path.substr(obj.parentPath.length)\n        : obj.path\n);\n\nconst ROOT_PATHS = ['', '/'];\nconst isRoot = path => ROOT_PATHS.includes(path);\n\nclass Breadcrumb extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleNavigateBreadcrumbs = this.handleNavigateBreadcrumbs.bind(this);\n        this.handleGetChildrenNames = this.handleGetChildrenNames.bind(this);\n        this.setBreadCrumbPath = this.setBreadCrumbPath.bind(this);\n        this.handleNavigate = this.handleNavigate.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.state = { originalPath: '', breadcrumbPath: '' };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { path } = props;\n        const { originalPath } = state;\n        return path === originalPath\n            ? null\n            : { originalPath: path, breadcrumbPath: path };\n    }\n\n    handleBackNavigate() {\n        const { onGetChildrenNames } = this.props;\n        const { breadcrumbPath } = this.state;\n        if (breadcrumbPath !== '') {\n            const pathSegments = pathToObjects(breadcrumbPath);\n            const newBreadcrumbPath = pathSegments[pathSegments.length - 1].parentPath;\n            this.setState({ breadcrumbPath: newBreadcrumbPath });\n            onGetChildrenNames(newBreadcrumbPath);\n        }\n    }\n\n    handleGetChildrenNames(matchString = '', chunkSize = undefined) {\n        const { onGetChildrenNames, showActions, showOperdata } = this.props;\n        const { breadcrumbPath } = this.state;\n        onGetChildrenNames(breadcrumbPath, matchString, showActions, showOperdata, chunkSize);\n    }\n\n    handleNavigate(path, isBackNav) {\n        if (isBackNav) this.handleBackNavigate();\n        else {\n            const { onNavigate } = this.props;\n            const { breadcrumbPath } = this.state;\n            if (path !== '') {\n                const newBreadcrumbPath = breadcrumbPath + path;\n                const stateBreadBreadcrumbPath = this.setBreadCrumbPath(newBreadcrumbPath);\n                onNavigate(pathToObjects(stateBreadBreadcrumbPath).pop().path);\n            } else {\n                const newPath = isRoot(breadcrumbPath)\n                    ? breadcrumbPath\n                    : pathToObjects(breadcrumbPath).pop().path;\n                onNavigate(newPath);\n            }\n        }\n    }\n\n    handleNavigateBreadcrumbs(path, isBackNav) {\n        const { breadcrumbPath } = this.state;\n        let newBreadcrumbPath;\n        if (isBackNav) {\n            if (isRoot(breadcrumbPath)) return;\n            const pathSegments = pathToObjects(breadcrumbPath);\n            newBreadcrumbPath = pathSegments[pathSegments.length - 1].parentPath;\n        } else {\n            newBreadcrumbPath = breadcrumbPath + path;\n        }\n        this.setBreadCrumbPath(newBreadcrumbPath);\n    }\n\n    handleReset() {\n        const { onReset } = this.props;\n        const { originalPath } = this.state;\n        this.setState({ breadcrumbPath: originalPath });\n        onReset();\n    }\n\n    setBreadCrumbPath(newBreadcrumbPath) {\n        const { onGetChildrenNames } = this.props;\n        const breadcrumbPath = `/${strip(newBreadcrumbPath, '/')}`;\n        this.setState({ breadcrumbPath });\n        onGetChildrenNames(breadcrumbPath);\n        return breadcrumbPath;\n    }\n\n    buildBreadcrumbLinks(paths, isList, breadcrumbsCount) {\n        const { LinkComponent, toBreadcrumbLink } = this.props;\n        let childIsListNode = false;\n\n        const links = paths.reverse().reduce((acc, obj, index) => {\n            if (obj.path) {\n                const path = obj.path;\n                if (!(index === 0 && isList) && !childIsListNode) {\n                    acc.push(\n                        <span\n                            key={`${path}/`}\n                            style={index === breadcrumbsCount ? style.blackLink : style.link}\n                        >\n                            /\n                        </span>,\n                    );\n                }\n\n                childIsListNode = Array.isArray(obj.keys);\n                let linkText = strip(getPath(obj), '/');\n                if (childIsListNode) {\n                    linkText = truncateLongString(linkText, 90, 90);\n                }\n                const link = toBreadcrumbLink(obj);\n\n                acc.push(\n                    <LinkComponent\n                        style={index === breadcrumbsCount ? style.blackLink : style.link}\n                        key={path}\n                        to={link}\n                        data-handle={`link ${link}`}\n                        onClick={() => this.setBreadCrumbPath(obj.path)}\n                    >\n                        {linkText}\n                    </LinkComponent>,\n                );\n            }\n            return acc;\n        }, []);\n        return links.reverse();\n    }\n\n    render() {\n        const {\n            childrenNames,\n            isList: tempIsList,\n            isLoading,\n            LinkComponent,\n            toBreadcrumbLink,\n            rootModels,\n        } = this.props;\n        const {\n            breadcrumbPath,\n            originalPath,\n        } = this.state;\n        const isAtRoot = isRoot(breadcrumbPath);\n        const isList = !isAtRoot && tempIsList;\n        const breadcrumbsPaths = strip(breadcrumbPath, '/').split(/[/{]/);\n        const breadcrumbsCount = (breadcrumbsPaths.length === 1 && breadcrumbsPaths[0] === '')\n            ? 0\n            : breadcrumbsPaths.length;\n        const paths = pathToObjects(`/${strip(breadcrumbPath, '/')}`);\n        const links = this.buildBreadcrumbLinks(paths, isList, breadcrumbsCount);\n        const upLink = (paths && paths.length > 1) ? paths[1].path : '/';\n        const enabled = !isRoot(originalPath);\n        return (\n            <div style={style.crumbs} data-handle=\"breadcrumb\" data-breadcrumb-path={breadcrumbPath}>\n                <LinkComponent\n                    to={toBreadcrumbLink({ path: '' })}\n                    style={style.navHome}\n                    data-handle={`navHome${enabled ? '' : '_disabled'}`}\n                >\n                    <NavigateHome color={enabled ? defaultStyles.color1 : defaultStyles.color2} />\n                </LinkComponent>\n                <LinkComponent\n                    to={toBreadcrumbLink({ path: upLink })}\n                    style={style.navUp}\n                    data-handle={`navUp${enabled ? '' : '_disabled'}`}\n                >\n                    <NavigateUp color={enabled ? defaultStyles.color1 : defaultStyles.color2} />\n                </LinkComponent>\n                <span style={style.blackLink}>\n                    {'/'}\n                </span>\n                { links }\n                {isList && <span style={style.blackLink}>{'{'}</span>}\n                <BreadcrumbInput\n                    onGetChildrenNames={this.handleGetChildrenNames}\n                    childrenNames={isAtRoot ? rootModels : childrenNames}\n                    onNavigate={this.handleNavigate}\n                    onNavigateBreadcrumbs={this.handleNavigateBreadcrumbs}\n                    onReset={this.handleReset}\n                    path={breadcrumbPath}\n                    isList={isList}\n                    isLoading={isLoading}\n                />\n                {isList && <span style={style.blackLink}>{'}'}</span>}\n            </div>\n        );\n    }\n}\n\nBreadcrumb.propTypes = {\n    childrenNames: PropTypes.arrayOf(PropTypes.string),\n    isList: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    LinkComponent: PropTypes.elementType,\n    path: PropTypes.string,\n    onGetChildrenNames: PropTypes.func,\n    onReset: PropTypes.func,\n    onNavigate: PropTypes.func,\n    rootModels: PropTypes.arrayOf(PropTypes.string),\n    showActions: PropTypes.bool,\n    showOperdata: PropTypes.bool,\n    toBreadcrumbLink: PropTypes.func.isRequired,\n};\n\nBreadcrumb.defaultProps = {\n    LinkComponent: Link,\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    truncateLongString,\n} from '@webui-one/core/utils/string';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { input as style } from './BreadcrumbStyles';\n\nconst DROP_DOWN_LIMIT = 20;\n\nconst sortNames = (name1, name2) => {\n    if (name1.name.toLowerCase() > name2.name.toLowerCase()) return 1;\n    return -1;\n};\n\nconst updateListNames = (props, state) => {\n    const { childrenNames } = props;\n    const input = state.inputValue.toLowerCase();\n    const nameMatch = [];\n    const namespaceMatch = [];\n    const contains = [];\n    (childrenNames || []).forEach((childName) => {\n        const fullName = childName;\n        const colonIndex = fullName.indexOf(':');\n        if (input === '') {\n            nameMatch.push({ name: fullName, fullName });\n            return;\n        }\n        let name = fullName;\n        if (colonIndex > -1) {\n            name = fullName.substr(colonIndex + 1);\n        }\n        if (name.toLowerCase().startsWith(input)) {\n            let duplicate = false;\n            nameMatch.forEach((item) => {\n                if (item.name === name) {\n                    // eslint-disable-next-line no-param-reassign\n                    item.name = item.fullName;\n                    duplicate = true;\n                }\n            });\n            nameMatch.push({ name: duplicate ? fullName : name, fullName });\n            return;\n        }\n        if (fullName.toLowerCase().startsWith(input)) {\n            namespaceMatch.push({ name: fullName, fullName });\n            return;\n        }\n        if (fullName.toLowerCase().includes(input)) {\n            contains.push({ name: fullName, fullName });\n        }\n    });\n    nameMatch.sort(sortNames);\n    namespaceMatch.sort(sortNames);\n    return { nameMatch, namespaceMatch, contains };\n};\n\nclass BreadcrumbInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.state = {\n            autoCompleteIsVisible: false,\n            dropDownIndex: undefined,\n            nameMatch: [],\n            namespaceMatch: [],\n            contains: [],\n            inputValue: '',\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { childrenNames, isList } = props;\n        if (!state.autoCompleteIsVisible) return null;\n        if (isList) {\n            return {\n                nameMatch: childrenNames.map(name => ({ name, fullName: name })),\n                namespaceMatch: [],\n                contains: [],\n            };\n        }\n        return updateListNames(props, state);\n    }\n\n    handleEnter(dropDownIndex, listNames, names, inputValue) {\n        if (dropDownIndex !== undefined && listNames.length > dropDownIndex) {\n            this.navigate(\n                listNames[dropDownIndex].fullName,\n            );\n        } else if (inputValue === '') {\n            this.navigate('');\n        } else if (names.length > 0) {\n            const fullMatch = names.filter(name => name.name === inputValue)[0];\n            if (fullMatch) {\n                this.navigate(fullMatch.fullName);\n            } else if (names.length === 1) {\n                this.navigate(names[0].fullName);\n            }\n        }\n    }\n\n    handleArrowUpDown(e, dropDownIndex, listNames) {\n        e.preventDefault();\n        const nrOfNames = listNames.length;\n        if (nrOfNames > 0) {\n            let newIndex;\n            if (dropDownIndex === undefined) {\n                newIndex = e.key === 'ArrowUp' ? nrOfNames - 1 : 0;\n            } else {\n                const diff = e.key === 'ArrowUp' ? -1 : 1;\n                const moduloIndex = Math.min(nrOfNames, DROP_DOWN_LIMIT);\n                newIndex = (dropDownIndex + diff + moduloIndex) % moduloIndex;\n            }\n            this.setState({ dropDownIndex: newIndex });\n        }\n    }\n\n    handleTab(e, dropDownIndex, listNames, names, inputValue) {\n        e.preventDefault();\n        if (dropDownIndex !== undefined && listNames.length > dropDownIndex) {\n            this.navigateBreadcrumbs(\n                listNames[dropDownIndex].fullName,\n            );\n        } else if (names.length > 1) {\n            const fullMatch = names.filter(name => name.name === inputValue)[0];\n            if (fullMatch) {\n                this.navigateBreadcrumbs(fullMatch.fullName);\n            } else {\n                let matchingChars = inputValue.length;\n                let matchingString = '';\n                let matchingStrings = [];\n                const doMatch = matchString => (name => name.name.startsWith(matchString));\n                let isMatching = true;\n                while (isMatching) {\n                    matchingChars += 1;\n                    matchingString = names[0].name.substr(0, matchingChars);\n                    matchingStrings = names.filter(doMatch(matchingString));\n                    isMatching = matchingChars <= names[0].name.length\n                            && matchingStrings.length === names.length;\n                }\n                const commonString = names[0].name.substr(0, matchingChars - 1);\n                this.setState({ inputValue: commonString });\n            }\n        } else if (names.length === 1) {\n            this.navigateBreadcrumbs(names[0].fullName);\n        }\n    }\n\n    handleKeyDown(e) {\n        const {\n            autoCompleteIsVisible,\n            contains,\n            dropDownIndex,\n            nameMatch,\n            namespaceMatch,\n            inputValue,\n        } = this.state;\n        const { onReset } = this.props;\n        const names = nameMatch.concat(namespaceMatch);\n        const listNames = names.concat(contains);\n        if (e.key === 'Enter' && autoCompleteIsVisible) {\n            this.handleEnter(dropDownIndex, listNames, names, inputValue);\n        } else if (e.key === 'Escape') {\n            this.setState({ autoCompleteIsVisible: false, inputValue: '' });\n            onReset();\n            this.input.blur();\n        } else if ((e.key === 'ArrowUp' || e.key === 'ArrowDown') && autoCompleteIsVisible) {\n            this.handleArrowUpDown(e, dropDownIndex, listNames);\n        } else if (e.key === 'Tab' && autoCompleteIsVisible) {\n            this.handleTab(e, dropDownIndex, listNames, names, inputValue);\n        } else if (e.key === 'Backspace' && inputValue === '') {\n            this.navigateBreadcrumbs('', true);\n        }\n    }\n\n    handleChange() {\n        const { isList } = this.props;\n        if (isList) {\n            const {\n                onGetChildrenNames,\n            } = this.props;\n            onGetChildrenNames(\n                this.input.value, DROP_DOWN_LIMIT,\n            );\n        }\n        this.setState({\n            dropDownIndex: undefined,\n            inputValue: this.input ? this.input.value : '',\n        });\n    }\n\n\n    handleBlur() {\n        const { onReset } = this.props;\n        this.setState({ autoCompleteIsVisible: false, inputValue: '' });\n        onReset();\n    }\n\n    handleFocus() {\n        const { onGetChildrenNames } = this.props;\n        onGetChildrenNames();\n        this.setState({\n            autoCompleteIsVisible: true,\n        });\n    }\n\n    getAnchorElement(child, matchString, active) {\n        const childName = truncateLongString(child.name, 90, 90);\n        const pos = childName.search(RegExp(matchString, 'ig'));\n        const textBits = [childName.substr(0, pos),\n            childName.substr(pos, matchString.length),\n            childName.substr(pos + matchString.length)];\n\n        return (\n            <a\n                role=\"button\"\n                tabIndex={0}\n                onMouseDown={(e) => { if (e.button === 0) this.navigate(child.fullName); }}\n                style={active ? style.deviceGroupsOptionsActive : style.deviceGroupsOptions}\n                ref={active && ((r) => { this.deviceGroupsOption = r; })}\n                key={child.fullName}\n                data-handle={`anchor ${child.fullName} ${active ? 'active' : ''}`}\n            >\n                {textBits[0] === '' || <span key=\"a\">{textBits[0]}</span>}\n                {textBits[1] === '' || <span key=\"b\" style={style.highlight}>{textBits[1]}</span>}\n                {textBits[2] === '' || <span key=\"c\" >{textBits[2]}</span>}\n            </a>\n        );\n    }\n\n    navigate(childName) {\n        const { onNavigate, isList } = this.props;\n        this.setState({ dropDownIndex: undefined, inputValue: '' });\n        if (childName === '') onNavigate('');\n        else onNavigate(isList ? `{${childName}}` : `/${childName}`);\n    }\n\n    navigateBreadcrumbs(childName, isBackNav = false) {\n        const { onNavigateBreadcrumbs, isList } = this.props;\n        this.setState({ dropDownIndex: undefined, inputValue: '' });\n        onNavigateBreadcrumbs(isList ? `{${childName}}` : `/${childName}`, isBackNav);\n    }\n\n    render() {\n        const {\n            autoCompleteIsVisible,\n            dropDownIndex,\n            nameMatch,\n            namespaceMatch,\n            contains,\n            inputValue,\n        } = this.state;\n        const { isLoading } = this.props;\n        if (this.input) this.input.value = inputValue;\n        let filteredContainerNames = [];\n        if (autoCompleteIsVisible) {\n            const listNames = nameMatch.concat(namespaceMatch.concat(contains));\n            filteredContainerNames = listNames.map((child, ix) => {\n                if (ix > DROP_DOWN_LIMIT) return null;\n                if (ix === DROP_DOWN_LIMIT) {\n                    return <div key={`info${ix}`} style={style.deviceGroupsOptions}>...</div>;\n                }\n                return this.getAnchorElement(\n                    child,\n                    inputValue,\n                    ix === dropDownIndex,\n                );\n            });\n        }\n\n        return (\n            <div style={style.labelFilter} data-handle=\"breadcrumbInput\">\n                <input\n                    style={style.input}\n                    ref={(r) => { this.input = r; }}\n                    onKeyDown={this.handleKeyDown}\n                    data-handle=\"labelInput\"\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                />\n                {(autoCompleteIsVisible && (\n                    <div\n                        ref={(dg) => { this.deviceGroups = dg; }}\n                        style={style.labelDropdown}\n                    >\n                        {(isLoading) && (\n                            <Loader color={defaultStyles.color9} />\n                        )}\n                        {(filteredContainerNames.length > 0 && !isLoading) && (\n                            <>\n                                {filteredContainerNames}\n                            </>\n                        )}\n                        {(filteredContainerNames.length === 0 && !isLoading) && (\n                            <div key={'info'} style={style.deviceGroupsOptions}>No match</div>\n                        )}\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nBreadcrumbInput.propTypes = {\n    childrenNames: PropTypes.arrayOf(PropTypes.string),\n    isList: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    onGetChildrenNames: PropTypes.func.isRequired,\n    onNavigate: PropTypes.func,\n    onNavigateBreadcrumbs: PropTypes.func,\n    onReset: PropTypes.func,\n};\n\nexport default BreadcrumbInput;\n\nexport {\n    updateListNames as _updateListNames,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorBox from './ErrorBox';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            errorInfo: null,\n        };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error,\n            errorInfo,\n        });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error } = this.state;\n        if (error) {\n            return (\n                <ErrorBox error={error} />\n            );\n        }\n        return children;\n    }\n}\n\nErrorBoundary.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavigateHome = ({ color }) => (\n    <svg\n        version=\"1.2\"\n        baseProfile=\"tiny\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 24 24\"\n        xmlSpace=\"preserve\"\n    >\n        <path\n            fill={color}\n            d=\"M4,21.69c0,0.49,0.4,0.89,0.89,0.89h4.44c0.25,0,0.44-0.2,0.44-0.44\n        v-7.56c0-0.25,0.2-0.44,0.44-0.44h3.56c0.25,0,0.44,0.2,0.44,0.44v7.56\n        c0,0.25,0.2,0.44,0.44,0.44h4.44c0.49,0,0.89-0.4,0.89-0.89V9.43\n        c0-0.12-0.05-0.23-0.13-0.31l-7.56-7.56c-0.17-0.17-0.45-0.17-0.63,0\n        L4.13,9.11C4.05,9.19,4,9.31,4,9.43V21.69z\"\n        />\n    </svg>\n);\n\nNavigateHome.propTypes = {\n    color: PropTypes.string,\n};\n\nNavigateHome.defaultProps = {\n    color: 'red',\n};\n\nexport default NavigateHome;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavigateUp = ({ color }) => (\n    <svg\n        version=\"1.2\"\n        baseProfile=\"tiny\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 24 24\"\n        xmlSpace=\"preserve\"\n    >\n        <polygon\n            fill={color}\n            points=\"9.39,2 14.77,7.39 10.31,7.39 10.31,20.15 20.01,20.15\n                20.01,22 8.46,22 8.46,7.39 4,7.39 \"\n        />\n    </svg>\n);\n\nNavigateUp.propTypes = {\n    color: PropTypes.string,\n};\n\nNavigateUp.defaultProps = {\n    color: 'red',\n};\n\nexport default NavigateUp;\n","import { connect } from 'react-redux';\nimport { Link } from '@webui-one/router';\nimport Breadcrumb from '@webui-one/components/Breadcrumb/Breadcrumb';\nimport {\n    getChildrenNamesThunk,\n    resetAction,\n} from 'modules/breadcrumbs/actions';\nimport {\n    selectChildrenNames,\n    selectIsList,\n    selectIsLoading,\n} from 'modules/breadcrumbs/selectors';\nimport { selectRootModels } from 'modules/models/reducer';\nimport {\n    selectShowActions,\n    selectShowOperdata,\n} from 'ConfigurationEditor/reducer';\n\nconst mapStateToProps = (state) => {\n    const rootModels = selectRootModels(state);\n    const childrenNames = selectChildrenNames(state);\n    return {\n        childrenNames,\n        isList: selectIsList(state),\n        isLoading: selectIsLoading(state),\n        LinkComponent: Link,\n        rootModels,\n        showActions: selectShowActions(state),\n        showOperdata: selectShowOperdata(state),\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetChildrenNames(path, matchString = '', showActions = undefined, showOperdata = undefined, chunkSize = undefined) {\n        dispatch(getChildrenNamesThunk({\n            path,\n            matchString,\n            showActions,\n            showOperdata,\n            chunkSize,\n        }));\n    },\n    onReset() {\n        dispatch(resetAction());\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Breadcrumb);\n\nexport {\n    mapStateToProps as _mapStateToProps,\n    getChildrenNamesThunk as _getChildrenNamesThunk,\n};\n","import HeaderContainer from 'Common/Components/Header/HeaderContainer';\nimport FooterContainer from 'Common/Components/Footer/FooterContainer';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { toBreadcrumbLink } from '@webui-one/core/utils/path';\nimport BreadcrumbContainer from 'Common/Components/Breadcrumb/BreadcrumbContainer';\nimport ErrorBoundary from '@webui-one/components/ConfigRender/ErrorBoundary';\nimport { Messages, translate } from 'modules/intl';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { style, optionsStyle } from '@webui-one/styles/ConfigurationEditorStyles';\nimport EditModeButtonContainer from './EditModeButtonContainer';\nimport FlattenButtonContainer from './FlattenButtonContainer';\nimport { CONFIGURATION_EDITOR_NAME } from './defines';\n\nclass ConfigurationEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showOptions: false,\n        };\n    }\n\n    render() {\n        const {\n            children,\n            onNavigate,\n            routeParams,\n            checkboxes,\n            subfoldersAreDisabled,\n        } = this.props;\n        const { showOptions } = this.state;\n        const optionsMenu = (\n            <div style={optionsStyle.container} data-handle=\"viewOptionsMenu\">\n                <button\n                    type=\"button\"\n                    data-handle=\"view-options\"\n                    style={optionsStyle.button}\n                    onClick={() => this.setState({ showOptions: true })}\n                >\n                    View options ▾\n                </button>\n                {showOptions && (\n                    <button\n                        type=\"button\"\n                        data-handle=\"close-view-options\"\n                        onClick={() => this.setState({ showOptions: false })}\n                        onScroll={() => this.setState({ showOptions: false })}\n                        style={optionsStyle.overlay}\n                    >\n                        <div style={optionsStyle.scrollProvoker} />\n                    </button>\n                )}\n                {showOptions && (\n                    <div style={optionsStyle.pop}>\n                        <div style={optionsStyle.menuArrowShadow} />\n                        {checkboxes}\n                        <div style={optionsStyle.menuArrow} />\n                    </div>\n                )}\n            </div>\n        );\n\n        const commitComponents = [\n            <FlattenButtonContainer />,\n            <EditModeButtonContainer />,\n            optionsMenu,\n        ];\n        return (\n            <div\n                data-handle={CONFIGURATION_EDITOR_NAME}\n                style={style.application}\n            >\n                <HeaderContainer\n                    applicationName={'Configuration editor'}\n                    additionalComponentsRight={commitComponents}\n                >\n                    <div style={style.secondHeader}>\n                        <div style={style.contentWrapper}>\n                            <ErrorBoundary>\n                                <BreadcrumbContainer\n                                    onNavigate={onNavigate}\n                                    path={routeParams.splat}\n                                    toBreadcrumbLink={toBreadcrumbLink}\n                                />\n                            </ErrorBoundary>\n                            {subfoldersAreDisabled && (\n                                <div data-handle=\"yangMessage\" style={style.yangMessage}>\n                                    {translate(\n                                        Messages.CONFIGURATIONEDITOR.INCLUDE_SUBFOLDERS_DISABLED,\n                                    )}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div style={defaultStyles.shadow} />\n                </HeaderContainer>\n                <div style={style.backgroundContainer}>\n                    <div style={style.configContainer}>\n                        <ErrorBoundary>\n                            {children}\n                        </ErrorBoundary>\n                    </div>\n                </div>\n                <FooterContainer />\n            </div>\n        );\n    }\n}\n\nConfigurationEditor.propTypes = {\n    children: PropTypes.node,\n    checkboxes: PropTypes.shape(Object).isRequired,\n    onNavigate: PropTypes.func,\n    routeParams: PropTypes.shape(Object).isRequired,\n    subfoldersAreDisabled: PropTypes.bool,\n};\n\nexport default ConfigurationEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from '@webui-one/router';\nimport { applicationNameSetAction } from 'modules/application/actions';\nimport { formatPath } from '@webui-one/core/utils/path';\nimport { isNonEmptyString, isString } from '@webui-one/core/utils/string';\nimport DataContainer from 'Common/Components/ConfigRender/DataContainer';\nimport CheckBox from '@webui-one/components/ConfigRender/CheckBox/CheckBox';\nimport { checkboxStyle } from '@webui-one/styles/ConfigurationEditorStyles';\nimport {\n    subscribeCdbOperAction,\n    subscribeChangesAction,\n    unsubscribeCdbOperAction,\n    unsubscribeChangesAction,\n} from 'modules/comet/actions';\nimport { updateConfig } from 'modules/comet/configeditor';\nimport { selectPreviousUrl } from 'modules/routing/reducer';\nimport { selectIsOperdata } from 'modules/schemas/reducer';\nimport { isBigYangPath } from 'modules/schemas/utils';\nimport {\n    deleteAction,\n    deleteNodeAndChildrenAction,\n    getValueAction,\n    modifiedNodesAction,\n    createAction,\n} from 'modules/nodes/actions';\nimport { tryGetTransChanges } from 'modules/transactions/actions';\nimport { selectActionPath } from 'modules/transactions/selectors';\nimport {\n    registerShortcut,\n    unregisterShortcut,\n} from 'modules/shortcuts/actions';\nimport ipcPropTypes from 'modules/ipc/propTypes';\nimport ConfigurationEditor from './ConfigurationEditor';\nimport { CONFIGURATION_EDITOR_NAME } from './defines';\nimport {\n    showActionsAction,\n    showEmptyAction,\n    showOperdataAction,\n} from './actions';\nimport {\n    selectApplicationConfiguration,\n    selectIsEditMode,\n    selectShowEmpty,\n    selectShowOperdata,\n    selectShowActions,\n    selectIncludeSubfolders,\n    selectIpcModification,\n} from './reducer';\nimport { pathToObjects } from '@webui-one/core/keypath/kp-parser';\nimport PackagesAndModulesContainer from './PackagesAndModulesContainer';\n\nconst routeToPath = route => (\n    isString(route) && route.indexOf('/') !== 0\n        ? `/${route}`\n        : route\n);\n\nconst getSubUri = (subPath) => {\n    if (!subPath || subPath === '/') return '';\n    return pathToObjects(subPath).pop().uri;\n};\n\nclass ConfigurationEditorContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.route = '';\n        this.shortcuts = ['vo', 'va', 'vc', 'vm'];\n        this.shortcutHandler = this.shortcutHandler.bind(this);\n        this.navigateModel = this.navigateModel.bind(this);\n        this.onCometUpdate = this.onCometUpdate.bind(this);\n    }\n\n    componentDidMount() {\n        const {\n            actionPath,\n            isOperdata,\n            onGetTransChanges,\n            onSetApplicationName,\n            onRegisterShortcut,\n        } = this.props;\n        onSetApplicationName(CONFIGURATION_EDITOR_NAME);\n        this.updateRoute(isOperdata);\n\n        onRegisterShortcut(this.shortcuts, this.shortcutHandler);\n\n        if (isNonEmptyString(actionPath)) {\n            onGetTransChanges(actionPath);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { actionPath, onGetTransChanges } = this.props;\n        const { actionPath: prevActionPath, isOperdata } = prevProps;\n        this.updateRoute(isOperdata);\n\n        if (actionPath !== prevActionPath) {\n            onGetTransChanges(actionPath);\n        }\n    }\n\n    componentWillUnmount() {\n        const {\n            isOperdata,\n            onUnregistShortcut,\n            onUnsubscribe,\n        } = this.props;\n        onUnregistShortcut(this.shortcuts, this.shortcutHandler);\n        onUnsubscribe(\n            routeToPath(this.route),\n            this.onCometUpdate,\n            isOperdata,\n        );\n    }\n\n    onCometUpdate(notifications, subscription) {\n        const {\n            onCreate,\n            onDelete,\n            onModifiedNodes,\n            onUpdateLeaf,\n        } = this.props;\n        updateConfig(\n            notifications,\n            subscription.params.path,\n            {\n                onCreate,\n                onDelete,\n                onModifiedNodes,\n                onUpdateLeaf,\n            },\n        );\n    }\n\n    updateRoute(wasOperdata) {\n        const {\n            isOperdata,\n            route: newRoute,\n            onSubscribe,\n            onUnsubscribe,\n        } = this.props;\n        const oldRoute = this.route;\n        if (typeof newRoute === 'string' && newRoute !== this.route) {\n            this.route = newRoute;\n        }\n        if (oldRoute !== this.route) {\n            onSubscribe(\n                routeToPath(this.route),\n                this.onCometUpdate,\n                isOperdata,\n            );\n            onUnsubscribe(\n                routeToPath(oldRoute),\n                this.onCometUpdate,\n                wasOperdata,\n            );\n        }\n        return this.route;\n    }\n\n    navigateModel(subPath) {\n        const { router } = this.props;\n        const baseUrl = CONFIGURATION_EDITOR_NAME;\n        const url = formatPath(`${baseUrl}${getSubUri(subPath)}`);\n        router.push(url);\n    }\n\n    shortcutHandler(shortcut) {\n        const {\n            onSetHideActions,\n            onSetShowEmpty,\n            onSetHideOperdata,\n            applicationConfiguration,\n        } = this.props;\n        const {\n            showActions,\n            showEmpty,\n            showOperdata,\n        } = applicationConfiguration;\n\n        if (shortcut === 'vo') {\n            onSetHideOperdata(showOperdata);\n        } else if (shortcut === 'va') {\n            onSetHideActions(showActions);\n        } else if (shortcut === 'vm') {\n            onSetShowEmpty(!showEmpty);\n        }\n    }\n\n    createCheckboxes() {\n        const {\n            onSetHideActions,\n            onSetShowEmpty,\n            onSetHideOperdata,\n            applicationConfiguration,\n        } = this.props;\n        const {\n            showActions,\n            showEmpty,\n            showOperdata,\n        } = applicationConfiguration;\n        return (\n            <div style={checkboxStyle.checkboxWrapper} key=\"incSub\">\n                <div style={checkboxStyle.group}>\n                    <CheckBox\n                        editable\n                        value={!showEmpty}\n                        onSetValue={value => onSetShowEmpty(!value)}\n                        name=\"config-only\"\n                        styleName=\"radio\"\n                    >\n                        <div style={checkboxStyle.label}>\n                            configuration only\n                        </div>\n                    </CheckBox>\n                </div>\n                <CheckBox\n                    editable\n                    value={showEmpty}\n                    onSetValue={onSetShowEmpty}\n                    name=\"full-model\"\n                    styleName=\"radio\"\n                >\n                    <div style={checkboxStyle.label}>\n                        full model\n                    </div>\n                </CheckBox>\n                <CheckBox\n                    editable={showEmpty}\n                    value={!showActions}\n                    onSetValue={onSetHideActions}\n                    name=\"hide-actions\"\n                    styleName=\"padded\"\n                >\n                    <div style={showEmpty ? checkboxStyle.label : checkboxStyle.labelDisabled}>\n                        hide actions\n                    </div>\n                </CheckBox>\n                <CheckBox\n                    editable={showEmpty}\n                    value={!showOperdata}\n                    onSetValue={onSetHideOperdata}\n                    name=\"hide-oper\"\n                    styleName=\"padded\"\n                >\n                    <div style={showEmpty ? checkboxStyle.label : checkboxStyle.labelDisabled}>\n                        hide operational data\n                    </div>\n                </CheckBox>\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            includeSubfolders,\n            ipcModification,\n            isEditMode,\n            routeParams,\n            showActions,\n            showEmpty,\n            showOperdata,\n        } = this.props;\n        const showPackagesAndModules = (routeParams.splat === '');\n        const isBigYang = isBigYangPath(routeParams.splat);\n        const enableSubfolders = isBigYang ? false : includeSubfolders;\n\n        return (\n            <ConfigurationEditor\n                onNavigate={this.navigateModel}\n                routeParams={routeParams}\n                checkboxes={this.createCheckboxes()}\n                subfoldersAreDisabled={isBigYang}\n            >\n                {showPackagesAndModules ? <PackagesAndModulesContainer /> : (\n                    <DataContainer\n                        applicationName={CONFIGURATION_EDITOR_NAME}\n                        includeSubfolders={enableSubfolders}\n                        ipcModification={ipcModification}\n                        isEditMode={isEditMode}\n                        path={routeParams.splat}\n                        showActions={showActions}\n                        showEmpty={showEmpty}\n                        showOperdata={showOperdata}\n                        showBackToSourceLink\n                    />\n                )}\n            </ConfigurationEditor>\n        );\n    }\n}\n\nConfigurationEditorContainer.propTypes = {\n    actionPath: PropTypes.string,\n    applicationConfiguration: PropTypes.shape(Object),\n    includeSubfolders: PropTypes.bool,\n    ipcModification: ipcPropTypes.ipcModification,\n    isEditMode: PropTypes.bool,\n    isOperdata: PropTypes.bool,\n    route: PropTypes.string,\n    onGetTransChanges: PropTypes.func,\n    onUpdateLeaf: PropTypes.func,\n    onCreate: PropTypes.func,\n    onDelete: PropTypes.func,\n    onModifiedNodes: PropTypes.func,\n    onRegisterShortcut: PropTypes.func,\n    onSetApplicationName: PropTypes.func.isRequired,\n    onSetHideActions: PropTypes.func.isRequired,\n    onSetHideOperdata: PropTypes.func.isRequired,\n    onSetShowEmpty: PropTypes.func.isRequired,\n    onSubscribe: PropTypes.func.isRequired,\n    onUnregistShortcut: PropTypes.func,\n    onUnsubscribe: PropTypes.func.isRequired,\n    routeParams: PropTypes.shape(Object).isRequired,\n    router: PropTypes.shape(Object),\n    showActions: PropTypes.bool,\n    showEmpty: PropTypes.bool,\n    showOperdata: PropTypes.bool,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    const routeParams = (ownProps.routeParams) || {};\n    const { splat: route } = routeParams;\n    return ({\n        actionPath: selectActionPath(state, route),\n        applicationConfiguration: selectApplicationConfiguration(state),\n        includeSubfolders: selectIncludeSubfolders(state),\n        ipcModification: selectIpcModification(state),\n        isEditMode: selectIsEditMode(state),\n        isOperdata: selectIsOperdata(state, route),\n        route,\n        previousUrl: selectPreviousUrl(state),\n        showActions: selectShowActions(state),\n        showEmpty: selectShowEmpty(state),\n        showOperdata: selectShowOperdata(state),\n    });\n};\n\nconst mapDispatchToProps = (\n    dispatch,\n    {\n        funcs: {\n            getTransChanges = tryGetTransChanges,\n        } = {},\n    } = {},\n) => ({\n    onGetTransChanges(path) {\n        dispatch(getTransChanges({ path }));\n    },\n    onModifiedNodes(paths) {\n        dispatch(modifiedNodesAction(paths));\n    },\n    onUpdateLeaf(path, value) {\n        dispatch(getValueAction(path, value));\n    },\n    onDelete(path, deleteChildren = false) {\n        if (deleteChildren !== true) {\n            dispatch(deleteAction(path));\n        } else {\n            dispatch(deleteNodeAndChildrenAction(path));\n        }\n    },\n    onCreate(path) {\n        dispatch(createAction(path));\n    },\n    onRegisterShortcut(shortcuts, handler) {\n        dispatch(registerShortcut(shortcuts, handler));\n    },\n    onUnregistShortcut(shortcuts, handler) {\n        dispatch(unregisterShortcut(shortcuts, handler));\n    },\n    onSetApplicationName(name) {\n        dispatch(applicationNameSetAction(name));\n    },\n    onSetHideActions(value) {\n        dispatch(showActionsAction(!value));\n    },\n    onSetShowEmpty(value) {\n        dispatch(showEmptyAction(value));\n    },\n    onSetHideOperdata(value) {\n        dispatch(showOperdataAction(!value));\n    },\n    onSubscribe(path, handler, isOperdata) {\n        if (isOperdata) {\n            return dispatch(subscribeCdbOperAction([path], handler));\n        }\n        return dispatch(subscribeChangesAction([path], handler));\n    },\n    onUnsubscribe(path, handler, isOperdata) {\n        if (isOperdata) {\n            return dispatch(unsubscribeCdbOperAction([path], handler));\n        }\n        return dispatch(unsubscribeChangesAction([path], handler));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withRouter(ConfigurationEditorContainer));\n\nexport {\n    mapStateToProps as _mapStateToProps,\n    mapDispatchToProps as _mapDispatchToProps,\n    routeToPath as _routeToPath,\n    ConfigurationEditorContainer as _ConfigurationEditorContainer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport { formatPath } from '@webui-one/core/utils/path';\nimport { timeStampToISOLocale } from '@webui-one/core/utils/time';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport Grid from '@webui-one/components/Grid/Grid';\nimport { Link } from '@webui-one/router';\nimport useSafeOnClick from '@webui-one/components/hooks/useSafeOnClick';\nimport Modal from '@webui-one/components/Modal/Modal';\nimport { packagesAndModules as style } from '@webui-one/styles/ConfigurationEditorStyles';\nimport {\n    RELOAD_ACTION_PATH,\n} from 'modules/packages/paths';\nimport { CONFIGURATION_EDITOR_NAME } from './defines';\n\nconst messages = {\n    'program-code-error': 'Code error',\n    'python-uninitialized': 'Python uninitialized',\n    'java-uninitialized': 'Java uninitialized',\n    'bad-ncs-version': 'Bad NSO version',\n    'missing-dependency': 'Missing dependency',\n    'circular-dependency': 'Circular dependency',\n    'package-meta-data-error': 'Metadata error',\n    'file-load-error': 'File load error',\n    'erlang-error': 'Erlang error',\n};\n\nconst getPackageHeader = (category, modelLinks, openModal) => {\n    const modelLink = modelLinks[category];\n    const showStatus = modelLink.isOk\n        ? !!modelLink.version\n        : !!modelLink.status;\n    const text = modelLink.isOk\n        ? `v${modelLink.version}`\n        : messages[modelLink.status] || `Unknown status (${modelLink.status})`;\n    const statusStyle = modelLink.isOk\n        ? style.packageVersionOk\n        : style.packageVersionError;\n\n    return (\n        <div key={category} data-handle=\"module\" style={style.moduleChunk}>\n            <div data-handle={category} style={style.moduleRow}>\n                <div\n                    style={style.modulesHeader}\n                    data-handle=\"package-name\"\n                >\n                    {modelLink.name}\n                </div>\n                { showStatus && !modelLink.isOk && (\n                    <button\n                        type=\"button\"\n                        data-handle=\"package-version\"\n                        style={statusStyle}\n                        onClick={() => openModal(modelLink.errorInfo)}\n                    >\n                        { text }\n                    </button>\n                )}\n\n                {showStatus && modelLink.isOk && (\n                    <span\n                        data-handle=\"package-version\"\n                        style={statusStyle}\n                    >\n                        { text }\n                    </span>\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst renderModels = (rootModels, loadingRootModels) => (\n    <div data-handle=\"modules\" style={style.moduleLinks}>\n        <div style={style.headerContainer}>\n            <div style={style.header}>MODULES</div>\n        </div>\n        <div style={style.contentContainer}>\n            <div style={style.loadingInformation}>\n                {loadingRootModels && (\n                    <div style={style.loader}>\n                        <Loader color={defaultStyles.textColor1} />\n                    </div>\n                )}\n            </div>\n            {!loadingRootModels && (\n                <Grid asGrid>\n                    {rootModels.sort().map(modelName => (\n                        <Link\n                            to={formatPath(`${CONFIGURATION_EDITOR_NAME}/${modelName}`)}\n                            key={modelName}\n                            style={style.modelLink}\n                        >\n                            {modelName}\n                        </Link>\n                    ))}\n                </Grid>\n            )}\n        </div>\n    </div>\n);\n\nconst renderPackages = (\n    packageLinks,\n    safeOnClick,\n    reloadError,\n    reloadPending,\n    completedAt,\n    loadingOrUpgradePending,\n    openModal,\n) => (\n    <div data-handle=\"packages\" style={style.moduleLinks}>\n        <div style={style.headerContainer}>\n            <Link\n                to={formatPath(`${CONFIGURATION_EDITOR_NAME}/ncs:packages`)}\n                style={style.header}\n            >\n                PACKAGES\n            </Link>\n            <button\n                disabled={loadingOrUpgradePending}\n                type=\"button\"\n                style={(loadingOrUpgradePending\n                    ? style.reloadButtonDisabled\n                    : style.reloadButton\n                )}\n                onClick={safeOnClick}\n                data-handle=\"reload-packages\"\n            >\n                { !loadingOrUpgradePending\n                    ? 'Reload'\n                    : (\n                        <div style={style.loaderButton}>\n                            <Loader color={defaultStyles.color3} />\n                        </div>\n                )}\n            </button>\n        </div>\n        <div style={style.contentContainer}>\n            {!reloadError && (reloadPending || completedAt) && (\n                <div style={style.loadingInformation}>\n                    {reloadPending && (\n                        <div style={style.loader}>\n                            <Loader color={defaultStyles.textColor1} />\n                        </div>\n                    )}\n                    {completedAt && (\n                        <span data-handle=\"completed-at\" >\n                            {`Reload completed at ${timeStampToISOLocale(completedAt)}`}\n                        </span>\n                    )}\n                </div>\n            )}\n            {reloadError && !reloadPending && completedAt && (\n                <div data-handle=\"reload-error\" style={style.reloadError}>\n                    An error occurred during reload. For detailed information, go to the\n                    <Link\n                        style={{ color: 'white' }}\n                        to={formatPath(RELOAD_ACTION_PATH)}\n                    >\n                        reload action\n                    </Link>\n                </div>\n            )}\n            { Object.keys(packageLinks).length > 0 ? (\n                <div>\n                    <Grid asGrid>\n                        { Object.keys(packageLinks).sort().map(\n                            category =>\n                            getPackageHeader(\n                                category,\n                                packageLinks,\n                                openModal,\n                            ),\n                        )}\n                    </Grid>\n                </div>\n            ) : false}\n        </div>\n    </div>\n);\n\nconst initialModalState = { isOpen: false, text: '' };\n\nconst PackagesAndModules = (\n    {\n        packageLinks,\n        onReload,\n        reloadError,\n        reloadPending,\n        completedAt,\n        rootModels,\n        loadingRootModels,\n        loadingOrUpgradePending,\n    },\n) => {\n    const [modalData, setModalData] = React.useState(initialModalState);\n    const closeModal = () => setModalData(initialModalState);\n    const openModal = text => setModalData({ isOpen: true, text });\n    const safeOnClick = useSafeOnClick(onReload);\n    return (\n        <div style={style.container}>\n            <Modal\n                title=\"Error info text\"\n                shouldRender={modalData.isOpen}\n                onRequestClose={closeModal}\n            >\n                <div data-handle=\"error-info\">\n                    {modalData.text}\n                </div>\n            </Modal>\n\n            { renderPackages(\n              packageLinks,\n              safeOnClick,\n              reloadError,\n              reloadPending,\n              completedAt,\n              loadingOrUpgradePending,\n              openModal) }\n\n            { renderModels(rootModels, loadingRootModels) }\n        </div>\n    );\n};\n\nPackagesAndModules.propTypes = {\n    loadingOrUpgradePending: PropTypes.bool,\n    packageLinks: PropTypes.shape({}).isRequired,\n    onReload: PropTypes.func.isRequired,\n    reloadError: PropTypes.bool,\n    reloadPending: PropTypes.bool,\n    completedAt: PropTypes.number,\n    rootModels: PropTypes.arrayOf(PropTypes.string),\n    loadingRootModels: PropTypes.bool,\n};\n\nexport default PackagesAndModules;\n","import { connect } from 'react-redux';\nimport {\n    setModelExpandedAction,\n} from 'modules/models/actions';\nimport {\n    reloadPackages,\n} from 'modules/packages/actions';\nimport {\n    RELOAD_PATH,\n} from 'modules/packages/paths';\nimport {\n    selectReadWriteOrRead,\n    selectUpgradePending,\n} from 'modules/transactions/selectors';\nimport {\n    selectCompletedAt,\n    selectError,\n    selectResultPending,\n} from 'modules/yangActions/selectors';\nimport {\n    selectPackages,\n} from 'modules/packages/reducer';\nimport { selectRootModels, selectRootModelsLoading } from 'modules/models/reducer';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PackagesAndModules from './PackagesAndModules';\nimport {\n    loadStatus,\n    selectHasLoaded,\n    selectLoadingStatus,\n} from './reducer';\nimport { getModelsAndPackages } from './utils';\n\nconst getPackageLinks = (packages) => {\n    const packagePrefixes = Object.keys(packages);\n    return packagePrefixes.reduce((acc, prefix) => {\n        const pkg = packages[prefix];\n        const version = pkg.version;\n        const status = pkg.status;\n        const isOk = status === 'up';\n        const errorInfo = pkg.errorInfo;\n\n        return {\n            ...acc,\n            [prefix]: {\n                name: prefix,\n                version,\n                isOk,\n                status,\n                errorInfo,\n            },\n        };\n    }, {});\n};\n\nclass PackagesAndModulesContainer extends React.Component {\n    componentDidMount() {\n        const { loadingStatus, onLoad, th } = this.props;\n        if (th && loadingStatus === loadStatus.NOT_LOADED) {\n            onLoad();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { onLoad, th } = this.props;\n        const { th: prevTh } = prevProps;\n        if (th && !prevTh) {\n            onLoad();\n        }\n    }\n\n    render() {\n        const {\n            packages,\n            onReloadPackages,\n            completedAt,\n            reloadError,\n            reloadPending,\n            rootModels,\n            loadingOrUpgradePending,\n            loadingRootModels,\n        } = this.props;\n        const packageLinks = getPackageLinks(packages);\n        return (\n            <PackagesAndModules\n                packageLinks={packageLinks}\n                onReload={onReloadPackages}\n                completedAt={completedAt}\n                reloadError={reloadError}\n                reloadPending={reloadPending}\n                rootModels={rootModels}\n                loadingRootModels={loadingRootModels}\n                loadingOrUpgradePending={loadingOrUpgradePending}\n            />\n        );\n    }\n}\n\nPackagesAndModulesContainer.propTypes = {\n    completedAt: PropTypes.number,\n    loadingOrUpgradePending: PropTypes.bool,\n    loadingRootModels: PropTypes.bool,\n    loadingStatus: PropTypes.number,\n    onLoad: PropTypes.func.isRequired,\n    onReloadPackages: PropTypes.func.isRequired,\n    packages: PropTypes.shape(Object).isRequired,\n    reloadError: PropTypes.bool,\n    reloadPending: PropTypes.bool,\n    rootModels: PropTypes.arrayOf(PropTypes.string),\n    th: PropTypes.number,\n};\n\nPackagesAndModulesContainer.defaultProps = {\n    expandedModels: {},\n    models: [],\n    packages: {},\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad() {\n        return dispatch(getModelsAndPackages());\n    },\n    onReloadPackages() {\n        return dispatch(reloadPackages());\n    },\n    onSetModelExpanded(modelName, expanded) {\n        return dispatch(setModelExpandedAction(modelName, expanded));\n    },\n});\n\nconst mapStateToProps = (state) => {\n    const hasLoaded = selectHasLoaded(state);\n    const loadingRootModels = selectRootModelsLoading(state);\n    const loadingStatus = selectLoadingStatus(state);\n    const resultPending = !!selectResultPending(state, RELOAD_PATH);\n    const upgradePending = selectUpgradePending(state);\n    const reloadPending = !!resultPending || !!upgradePending;\n    const loadingOrUpgradePending = !hasLoaded || !!resultPending || !!upgradePending;\n\n    return {\n        completedAt: selectCompletedAt(state, RELOAD_PATH),\n        loadingOrUpgradePending,\n        loadingRootModels,\n        loadingStatus,\n        packages: selectPackages(state),\n        reloadError: !!selectError(state, RELOAD_PATH),\n        reloadPending,\n        rootModels: selectRootModels(state),\n        th: selectReadWriteOrRead(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(PackagesAndModulesContainer);\n\nexport {\n    PackagesAndModulesContainer as _PackagesAndModulesContainer,\n    getPackageLinks as _getPackageLinks,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import _jsonrpc from '@webui-one/core/jsonrpc';\nimport { isNonEmptyString } from '@webui-one/core/utils/string';\nimport { maybeGetModels } from 'modules/models/actions';\nimport { read } from 'modules/transactions/actions';\nimport * as actionTypes from './actionTypes';\nimport { selectHasSchemaFromCurrentPath as _selectHasSchemaFromCurrentPath } from './selectors';\n\nexport const getChildrenNamesStartAction = () => ({\n    type: actionTypes.GET_CHILDREN_NAMES_START,\n});\n\nexport const getChildrenNamesErrorAction = error => ({\n    type: actionTypes.GET_CHILDREN_NAMES_ERROR,\n    error,\n});\n\nexport const getChildrenNamesCompleteAction = (\n    path,\n    result,\n    isList,\n    schema,\n    showActions = true,\n    showOperdata = true,\n) => ({\n    type: actionTypes.GET_CHILDREN_NAMES_COMPLETE,\n    path,\n    result,\n    schema,\n    isList,\n    showActions,\n    showOperdata,\n});\n\nconst queryListChildrenNames = async (path, th, schema, matchString, chunkSize, jrpc) => {\n    const keys = schema.data.key;\n    let xpathExpr;\n    if (matchString !== '') {\n        xpathExpr = `${schema.data.name}[starts-with(${keys[0]}, \"${matchString}\")]`;\n    }\n    const params = {\n        th,\n        path,\n        selection: keys,\n        result_as: 'string',\n        xpath_expr: xpathExpr,\n        context_node: path.substr(0, path.lastIndexOf('/')),\n        chunk_size: chunkSize,\n    };\n    return jrpc('query', params);\n};\n\nexport const getChildrenNamesThunk = ({\n    path,\n    matchString,\n    showActions,\n    showOperdata,\n    chunkSize = 10,\n    funcs: {\n        rd = read,\n        getModels = maybeGetModels,\n        jsonrpc = _jsonrpc,\n        selectHasSchemaFromCurrentPath = _selectHasSchemaFromCurrentPath,\n    } = {},\n} = {}) => async (dispatch, getState) => {\n    if (!isNonEmptyString(path) || path === '/') {\n        return dispatch(getModels());\n    }\n    dispatch(getChildrenNamesStartAction());\n    try {\n        const { th } = await dispatch(rd());\n        const state = getState();\n        const hasSchemaFromCurrentPath = selectHasSchemaFromCurrentPath(state, path);\n        let schema;\n\n        if (hasSchemaFromCurrentPath) {\n            schema = state.breadcrumbs.schema;\n        } else {\n            schema = await jsonrpc('get_schema', {\n                path,\n                th,\n                levels: 1,\n                evaluate_when_entries: true,\n            });\n        }\n\n        if (schema.data.kind === 'list') {\n            const result = await queryListChildrenNames(\n                path,\n                th,\n                schema,\n                matchString,\n                chunkSize,\n                jsonrpc,\n            );\n            return dispatch(\n                getChildrenNamesCompleteAction(\n                    path,\n                    result,\n                    true,\n                    schema,\n                ),\n            );\n        }\n        return dispatch(\n            getChildrenNamesCompleteAction(\n                path,\n                schema,\n                false,\n                null,\n                showActions,\n                showOperdata,\n            ),\n        );\n    } catch (error) {\n        return dispatch(getChildrenNamesErrorAction(error));\n    }\n};\n\nexport const resetAction = () => ({\n    type: actionTypes.RESET,\n});\n","export const selectChildrenNames = state =>\n    state.breadcrumbs.childrenNames;\nexport const selectIsList = state => state.breadcrumbs.isList;\nexport const selectIsLoading = state => state.breadcrumbs.isLoading;\nexport const selectSchema = state => state.breadcrumbs.schema;\nexport const selectHasSchemaFromCurrentPath = (state, path) => state.breadcrumbs.path &&\n    state.breadcrumbs.path === path &&\n    state.breadcrumbs.schema;\n","import { getListPath } from '@webui-one/core/keypath/kp-parser';\nimport { isNonEmptyString } from '@webui-one/core/utils/string';\nimport { uniq } from '@webui-one/core/utils/array';\n\nconst setValue = (change, nodes) => {\n    const value = change.value;\n    const { updateNode } = nodes;\n    updateNode[change.keypath] = value;\n};\n\nconst updateConfig = (\n    notifications,\n    subscriptionPath,\n    {\n        onDelete,\n        onUpdateLeaf,\n        onCreate,\n        onModifiedNodes,\n    }) => {\n    const changes = notifications.changes || [];\n    const removeList = [];\n    const addNode = {};\n    const updateNode = {};\n    const modifiedNodes = [];\n    changes.forEach((change) => {\n        const listPath = getListPath(change.keypath, subscriptionPath);\n        if (isNonEmptyString(listPath)) {\n            modifiedNodes.push(listPath);\n            return;\n        }\n        if (change.op === 'deleted') {\n            removeList.push([change.keypath, true]);\n        }\n        if (change.op === 'created') {\n            addNode[change.keypath] = true;\n        }\n        if (change.op === 'default_set') {\n            removeList.push([change.keypath, false]);\n        }\n        if (change.op === 'value_set') {\n            setValue(change, { updateNode });\n        }\n    });\n    removeList.forEach(([path, deleteChildren]) => {\n        onDelete(path, deleteChildren);\n    });\n    Object.keys(addNode).forEach((nodePath) => {\n        onCreate(nodePath);\n    });\n    Object.keys(updateNode).forEach((node) => {\n        onUpdateLeaf(node, updateNode[node]);\n    });\n    if (modifiedNodes.length > 0) {\n        onModifiedNodes(uniq(modifiedNodes));\n    }\n};\n\nexport default updateConfig;\n\nexport {\n    updateConfig,\n    setValue as _setValue,\n};\n"],"names":["ROOT_PATHS","isRoot","path","includes","Breadcrumb","React","Component","constructor","props","super","this","handleNavigateBreadcrumbs","bind","handleGetChildrenNames","setBreadCrumbPath","handleNavigate","handleReset","state","originalPath","breadcrumbPath","handleBackNavigate","onGetChildrenNames","pathSegments","pathToObjects","newBreadcrumbPath","length","parentPath","setState","matchString","chunkSize","undefined","showActions","showOperdata","isBackNav","onNavigate","stateBreadBreadcrumbPath","pop","onReset","strip","buildBreadcrumbLinks","paths","isList","breadcrumbsCount","LinkComponent","toBreadcrumbLink","childIsListNode","reverse","reduce","acc","obj","index","push","key","style","blackLink","link","Array","isArray","keys","linkText","indexOf","substr","getPath","truncateLongString","to","onClick","render","childrenNames","tempIsList","isLoading","rootModels","isAtRoot","breadcrumbsPaths","split","links","upLink","enabled","crumbs","navHome","color","defaultStyles","color1","color2","navUp","onNavigateBreadcrumbs","propTypes","PropTypes","arrayOf","string","bool","elementType","func","isRequired","defaultProps","Link","sortNames","name1","name2","name","toLowerCase","updateListNames","input","inputValue","nameMatch","namespaceMatch","contains","forEach","childName","fullName","colonIndex","startsWith","duplicate","item","sort","BreadcrumbInput","handleBlur","handleChange","handleFocus","handleKeyDown","autoCompleteIsVisible","dropDownIndex","map","handleEnter","listNames","names","navigate","fullMatch","filter","handleArrowUpDown","e","preventDefault","nrOfNames","newIndex","diff","moduloIndex","Math","min","handleTab","navigateBreadcrumbs","matchingChars","matchingString","matchingStrings","doMatch","isMatching","commonString","concat","blur","value","getAnchorElement","child","active","pos","search","RegExp","textBits","role","tabIndex","onMouseDown","button","deviceGroupsOptionsActive","deviceGroupsOptions","ref","r","deviceGroupsOption","highlight","filteredContainerNames","ix","labelFilter","onKeyDown","onFocus","onBlur","onChange","dg","deviceGroups","labelDropdown","color9","ErrorBoundary","error","errorInfo","componentDidCatch","children","oneOfType","node","NavigateHome","version","baseProfile","id","xmlns","x","y","viewBox","xmlSpace","fill","d","NavigateUp","points","mapStateToProps","selectRootModels","selectChildrenNames","selectIsList","selectIsLoading","selectShowActions","selectShowOperdata","connect","dispatch","getChildrenNamesThunk","resetAction","ConfigurationEditor","showOptions","routeParams","checkboxes","subfoldersAreDisabled","optionsMenu","optionsStyle","container","type","onScroll","overlay","scrollProvoker","menuArrowShadow","menuArrow","commitComponents","CONFIGURATION_EDITOR_NAME","application","applicationName","additionalComponentsRight","secondHeader","contentWrapper","splat","yangMessage","translate","Messages","CONFIGURATIONEDITOR","INCLUDE_SUBFOLDERS_DISABLED","shadow","backgroundContainer","configContainer","shape","Object","routeToPath","route","isString","ConfigurationEditorContainer","shortcuts","shortcutHandler","navigateModel","onCometUpdate","componentDidMount","actionPath","isOperdata","onGetTransChanges","onSetApplicationName","onRegisterShortcut","updateRoute","isNonEmptyString","componentDidUpdate","prevProps","prevActionPath","componentWillUnmount","onUnregistShortcut","onUnsubscribe","notifications","subscription","onCreate","onDelete","onModifiedNodes","onUpdateLeaf","updateConfig","params","wasOperdata","newRoute","onSubscribe","oldRoute","subPath","router","baseUrl","url","formatPath","uri","getSubUri","shortcut","onSetHideActions","onSetShowEmpty","onSetHideOperdata","applicationConfiguration","showEmpty","createCheckboxes","checkboxStyle","checkboxWrapper","group","editable","onSetValue","styleName","label","labelDisabled","includeSubfolders","ipcModification","isEditMode","showPackagesAndModules","isBigYang","isBigYangPath","enableSubfolders","showBackToSourceLink","ipcPropTypes","ownProps","selectActionPath","selectApplicationConfiguration","selectIncludeSubfolders","selectIpcModification","selectIsEditMode","selectIsOperdata","previousUrl","selectPreviousUrl","selectShowEmpty","mapDispatchToProps","funcs","getTransChanges","tryGetTransChanges","modifiedNodesAction","getValueAction","deleteAction","deleteNodeAndChildrenAction","createAction","handler","registerShortcut","unregisterShortcut","applicationNameSetAction","showActionsAction","showEmptyAction","showOperdataAction","subscribeCdbOperAction","subscribeChangesAction","unsubscribeCdbOperAction","unsubscribeChangesAction","withRouter","messages","initialModalState","isOpen","text","PackagesAndModules","packageLinks","onReload","reloadError","reloadPending","completedAt","loadingRootModels","loadingOrUpgradePending","useState","modalData","setModalData","safeOnClick","title","shouldRender","onRequestClose","openModal","moduleLinks","headerContainer","header","disabled","reloadButtonDisabled","reloadButton","loaderButton","color3","contentContainer","loadingInformation","loader","textColor1","timeStampToISOLocale","RELOAD_ACTION_PATH","asGrid","category","modelLinks","modelLink","showStatus","isOk","status","statusStyle","packageVersionOk","packageVersionError","moduleChunk","moduleRow","modulesHeader","getPackageHeader","renderPackages","modelName","renderModels","number","getPackageLinks","packages","prefix","pkg","PackagesAndModulesContainer","loadingStatus","onLoad","th","loadStatus","NOT_LOADED","prevTh","onReloadPackages","expandedModels","models","getModelsAndPackages","reloadPackages","onSetModelExpanded","expanded","setModelExpandedAction","hasLoaded","selectHasLoaded","selectRootModelsLoading","selectLoadingStatus","resultPending","selectResultPending","RELOAD_PATH","upgradePending","selectUpgradePending","selectCompletedAt","selectPackages","selectError","selectReadWriteOrRead","getChildrenNamesStartAction","actionTypes","GET_CHILDREN_NAMES_START","getChildrenNamesErrorAction","GET_CHILDREN_NAMES_ERROR","getChildrenNamesCompleteAction","result","schema","GET_CHILDREN_NAMES_COMPLETE","queryListChildrenNames","async","jrpc","data","xpathExpr","selection","result_as","xpath_expr","context_node","lastIndexOf","chunk_size","rd","read","getModels","maybeGetModels","jsonrpc","_jsonrpc","selectHasSchemaFromCurrentPath","_selectHasSchemaFromCurrentPath","getState","breadcrumbs","levels","evaluate_when_entries","kind","RESET","setValue","change","nodes","updateNode","keypath","subscriptionPath","changes","removeList","addNode","modifiedNodes","listPath","getListPath","op","deleteChildren","nodePath","uniq"],"sourceRoot":""}