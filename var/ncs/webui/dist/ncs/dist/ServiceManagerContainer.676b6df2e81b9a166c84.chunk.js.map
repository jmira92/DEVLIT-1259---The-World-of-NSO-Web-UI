{"version":3,"file":"ServiceManagerContainer.676b6df2e81b9a166c84.chunk.js","mappings":"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","sources":["webpack://webui/./packages/components/ConfigRender/ErrorBoundary.jsx","webpack://webui/./packages/components/ConfigRender/KeypathFromXpathWrapper.jsx","webpack://webui/./packages/components/Search/Search.jsx","webpack://webui/./packages/components/Search/SearchStyles.jsx","webpack://webui/./src/Common/Components/ManagerItems/ManagerItems.jsx","webpack://webui/./src/Common/Components/ManagerItems/ManagerItemsStyles.js","webpack://webui/./src/Common/Components/Summary/Summary.jsx","webpack://webui/./src/Common/Components/Summary/SummaryStyle.js","webpack://webui/./src/ServiceManager/AddRemoveServiceContainer.jsx","webpack://webui/./src/ServiceManager/AddServiceButton.jsx","webpack://webui/./src/ServiceManager/RemoveServiceButton.jsx","webpack://webui/./src/ServiceManager/ServiceBatchActions.jsx","webpack://webui/./src/ServiceManager/ServiceColumnsContainer.jsx","webpack://webui/./src/ServiceManager/ServiceCounter.jsx","webpack://webui/./src/ServiceManager/ServiceListContainer.jsx","webpack://webui/./src/ServiceManager/ServiceManager.jsx","webpack://webui/./src/ServiceManager/ServiceManagerContainer.jsx","webpack://webui/./src/ServiceManager/ServiceManagerStyles.js","webpack://webui/./src/ServiceManager/ServicePointContainer.jsx","webpack://webui/./src/ServiceManager/ServiceSearchContainer.jsx","webpack://webui/./src/ServiceManager/ZombieServiceListContainer.jsx","webpack://webui/./src/modules/comet/configeditor.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorBox from './ErrorBox';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            errorInfo: null,\n        };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error,\n            errorInfo,\n        });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error } = this.state;\n        if (error) {\n            return (\n                <ErrorBox error={error} />\n            );\n        }\n        return children;\n    }\n}\n\nErrorBoundary.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n};\n","import { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { query as _query, getTrans as _getTrans } from '@webui-one/core/jsonrpc';\nimport { useFetch } from '../hooks/useFetch';\n\nexport default function KeypathFromXpathWrapper({\n    xpath,\n    children,\n    funcs: {\n        query = _query,\n        getTrans = _getTrans,\n    } = {},\n}) {\n    const state = useFetch({\n        asyncFunc: useCallback(async ({ signal }) => {\n            const { trans } = await getTrans({ signal });\n            const webuiTrans = trans.find(t => t.tag === 'webui-one');\n            const response = await query({\n                signal,\n                th: webuiTrans.th,\n                resultAs: 'keypath-value',\n                xpathExpr: xpath,\n            });\n\n            if (\n                response.results &&\n                response.results[0] &&\n                response.results[0][0] &&\n                response.results[0][0].keypath\n            ) {\n                return response.results[0][0].keypath;\n            }\n            throw new Error('No response matched the parse function');\n        }, [xpath, query, getTrans]),\n    });\n\n    const { data, ...restState } = state;\n    return children({ ...restState, keypath: data });\n}\n\nKeypathFromXpathWrapper.propTypes = {\n    xpath: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './SearchStyles';\n\nconst Search = ({\n    keyword,\n    onSetSearch,\n}) => {\n    const [draft, setDraft] = useState(keyword);\n    const setSearch = (event) => {\n        const value = event.target.value.trim();\n        if (keyword !== value) {\n            onSetSearch(value);\n        }\n    };\n\n    useEffect(() => {\n        setDraft(keyword);\n    }, [keyword]);\n\n    const onChange = event => setDraft(event.target.value);\n    const onKeyDown = (event) => { if (event.key === 'Enter') setSearch(event); };\n\n    return (\n        <div style={style.wrapper}>\n            <input\n                value={draft}\n                onBlur={setSearch}\n                onChange={onChange}\n                onKeyDown={onKeyDown}\n                style={style.search}\n                placeholder=\"Search filter\"\n                data-handle=\"search\"\n            />\n        </div>\n    );\n};\nSearch.propTypes = {\n    keyword: PropTypes.string,\n    onSetSearch: PropTypes.func,\n};\nexport default Search;\n","const SearchStyles = {\n    wrapper: {\n        margin: '0.1rem 0.25rem',\n        padding: '0.1875rem 0.5rem',\n        display: 'flex',\n        alignItems: 'center',\n        border: '1px solid rgb(182, 182, 187)',\n        borderRadius: '0.81rem',\n        backgroundColor: 'rgb(255, 255, 255)',\n        position: 'relative',\n        fontSize: '0.6875rem',\n        color: 'rgb(182, 182, 187)',\n        height: '1rem',\n        alignSelf: 'center',\n    },\n    search: {\n        border: 'none',\n        fontSize: '0.6rem',\n        width: '4rem',\n        paddingLeft: '0.5rem',\n        margin: '0px -2px',\n    },\n};\nexport default SearchStyles;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@webui-one/router';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport Loader from '@webui-one/components/Loading/Loader';\nimport styles from './ManagerItemsStyles';\n\n\nconst ItemLinks = ({ items }) => items.map(item => (\n    <Link\n        title={item.name}\n        key={item.path}\n        style={styles.itemsLink}\n        to={`/webui-one/ConfigurationEditor${item.path}`}\n    >\n        {item.name}\n    </Link>\n));\n\nconst ItemGroupList = ({ itemGroups }) => itemGroups.map(itemGroup => (\n    <div data-handle=\"manager-items-group\" style={styles.group} key={itemGroup.path}>\n        <h2 style={styles.groupTitle}>{itemGroup.name}</h2>\n        <ItemLinks items={itemGroup.children} />\n    </div>\n));\n\nexport default function ManagerItems({ path, onQueryData, rows, isLoading }) {\n    useEffect(() => {\n        onQueryData(path);\n    }, [onQueryData, path]);\n\n    return (\n        <div style={styles.container}>\n            {isLoading && (\n                <div style={styles.loaderContainer}>\n                    <Loader color={defaultStyles.color2} />\n                </div>\n            )}\n            { rows.length === 0 && !isLoading &&\n                <p>No items</p>\n            }\n\n            <ItemGroupList itemGroups={rows} />\n        </div>\n    );\n}\n\nManagerItems.propTypes = {\n    path: PropTypes.string.isRequired,\n    onQueryData: PropTypes.func,\n    isLoading: PropTypes.bool,\n    rows: PropTypes.arrayOf(Object),\n};\n\nManagerItems.defaultProps = {\n    isLoading: false,\n    rows: [],\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst container = {\n    width: '100%',\n    padding: '0 1rem 1rem 1rem',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n};\n\nconst group = {\n    margin: '1rem 1rem 0 1rem',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    maxWidth: '75ch',\n    lineHeight: '1.6',\n};\n\nconst groupTitle = {\n    margin: '0',\n    fontSize: defaultStyles.large2,\n    color: defaultStyles.color2,\n};\n\nconst itemsLink = {\n    display: 'block',\n    margin: '0 0 0 0rem',\n    fontSize: defaultStyles.medium3,\n    textDecoration: 'none',\n    color: defaultStyles.color2,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n};\n\nconst loaderContainer = {\n    flexBasis: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n};\n\nexport default {\n    container,\n    group,\n    groupTitle,\n    itemsLink,\n    loaderContainer,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { labelTypes } from 'modules/devices/selectors';\nimport style from './SummaryStyle';\n\nconst getDeviceGroupLogicsString = (values) => {\n    const include = values.filter(\n        value => value.type === labelTypes.LBL_INCLUDE).map(item => `\"${item.name}\"`);\n    const oneOf = values.filter(\n        value => value.type === labelTypes.LBL_ONE_OF).map(item => item.name);\n    const exclude = values.filter(\n        value => value.type === labelTypes.LBL_EXCLUDE).map(item => item.name);\n\n    let returnString = '';\n    const includeString = include.join(' AND ');\n    if (includeString) returnString += ` ${includeString}`;\n    const oneOfString = oneOf.join(', ');\n    if (oneOfString) {\n        returnString += returnString ? ' AND' : '';\n        returnString += (oneOf.length > 1) ? ' ONE OF' : '';\n        returnString += ` \"${oneOfString}\"`;\n    }\n    const excludeString = exclude.join(', ');\n    if (excludeString) {\n        returnString += returnString ? ' AND' : '';\n        returnString += (exclude.length > 1) ? ' NOT ANY OF' : ' NOT';\n        returnString += ` \"${excludeString}\"`;\n    }\n    return returnString;\n};\n\nconst getString = (unit, keyword, values) => {\n    const theLogics = getDeviceGroupLogicsString(values);\n    let summary = unit;\n    if (keyword) {\n        summary += ` including \"${keyword}\"`;\n        if (theLogics) summary += ', AND';\n    } else if (theLogics) summary += ' where';\n    if (theLogics) summary += ` group is${theLogics}`;\n    return summary;\n};\n\nconst Summary = ({ unit, labels, keyword }) => (\n    <div style={style} data-handle=\"summary\">\n        {getString(unit, keyword, Object.values(labels))}\n    </div>\n);\n\nSummary.propTypes = {\n    labels: PropTypes.shape(Object),\n    keyword: PropTypes.string,\n    unit: PropTypes.string,\n};\n\nSummary.defaultProps = {\n    labels: {\n    },\n    keyword: '',\n    unit: '',\n};\n\nexport default Summary;\n\nexport {\n    getString as _getString,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nexport default {\n    fontSize: defaultStyles.medium1,\n    maxWidth: '1600px',\n    margin: '0.75rem auto 0.75rem auto',\n    padding: '0 1rem',\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as S from '@webui-one/core/schema';\nimport * as nodesActions from 'modules/nodes/actions';\nimport {\n    createDisallowExistsThunk,\n    deleteNodesThunk,\n} from 'modules/nodes/thunks';\nimport { isNonEmptyArray } from '@webui-one/core/utils/array';\nimport { isNonEmptyString } from '@webui-one/core/utils/string';\nimport {\n    getColumnChildren,\n    getQuerySelection,\n} from '@webui-one/core/utils/list';\nimport {\n    selectExists,\n} from 'modules/nodes/selectors';\nimport {\n    selectSelectedServiceRows,\n} from 'modules/services/selectors';\n\nimport {\n    isSchemaLoaded,\n    selectCurrentSchema,\n} from 'modules/schemas/reducer';\n\nimport { clearYangActionStates } from 'modules/yangActions/actions';\nimport AddServiceButton from './AddServiceButton';\nimport RemoveServiceButton from './RemoveServiceButton';\nimport {\n    serviceButtonContainer as serviceButtonContainerStyle,\n} from './ServiceManagerStyles';\n\nimport { pathToObjects } from '@webui-one/core/keypath/kp-parser';\n\n\nclass AddRemoveServiceContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onClose = this.onClose.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onDeleteSelected = this.onDeleteSelected.bind(this);\n        this.showAddServiceModal = this.showAddServiceModal.bind(this);\n        this.state = {\n            showAddServiceModal: false,\n            errorOnCreate: undefined,\n        };\n    }\n\n    onClose() {\n        this.setState({ showAddServiceModal: false, errorOnCreate: undefined });\n    }\n\n    onConfirm(createPath, data) {\n        const { onCreate } = this.props;\n        return onCreate(createPath, data).then((result) => {\n            if (!result.error) {\n                this.onClose();\n            } else {\n                this.setState({ errorOnCreate: result.error });\n            }\n            return result;\n        });\n    }\n\n    onDeleteSelected() {\n        const { selectedServices, onDeleteRows, path } = this.props;\n        if (!isNonEmptyArray(selectedServices)) {\n            return Promise.resolve();\n        }\n        const keyPaths = selectedServices.map(row => row.rowKey);\n        return onDeleteRows(keyPaths, path);\n    }\n\n    showAddServiceModal() {\n        this.setState({ showAddServiceModal: true });\n    }\n\n    addServiceIsDisabled() {\n        const { exists, isPresenceContainer, path } = this.props;\n        if (isPresenceContainer && exists) {\n            return true;\n        }\n        return !isNonEmptyString(path);\n    }\n\n    removeServiceIsDisabled() {\n        const { selectedServices } = this.props;\n        return !isNonEmptyArray(selectedServices);\n    }\n\n    render() {\n        const { path, paths } = this.props;\n        const { showAddServiceModal, errorOnCreate } = this.state;\n        return (\n            <div style={serviceButtonContainerStyle}>\n                <AddServiceButton\n                    disabled={this.addServiceIsDisabled()}\n                    onClick={this.showAddServiceModal}\n                    onClose={this.onClose}\n                    onConfirm={this.onConfirm}\n                    path={path}\n                    paths={paths}\n                    showModal={showAddServiceModal}\n                    error={errorOnCreate}\n                />\n                <RemoveServiceButton\n                    onClick={this.onDeleteSelected}\n                    path={path}\n                    disabled={this.removeServiceIsDisabled()}\n                />\n            </div>\n        );\n    }\n}\n\nAddRemoveServiceContainer.propTypes = {\n    exists: PropTypes.bool,\n    isPresenceContainer: PropTypes.bool,\n    onCreate: PropTypes.func.isRequired,\n    onDeleteRows: PropTypes.func.isRequired,\n    path: PropTypes.string.isRequired,\n    paths: PropTypes.arrayOf(PropTypes.string).isRequired,\n    selectedServices: PropTypes.arrayOf(Object),\n};\n\nAddRemoveServiceContainer.defaultProps = {\n};\n\nconst IGNORE_PATHS = ['/ncs:services'];\n\nconst mapStateToProps = (state, ownProps) => {\n    const path = ownProps.path || '';\n    const paths = path\n        ? pathToObjects(path).map(o => o.path).filter(p => !IGNORE_PATHS.includes(p))\n        : [];\n    const schema = selectCurrentSchema(state, { path });\n    const isPresenceContainer = S.isPresenceContainer(schema);\n    return {\n        columnChildren: !isPresenceContainer ? getColumnChildren(schema) : [],\n        exists: selectExists(state, path),\n        isPresenceContainer,\n        path,\n        paths,\n        selectedServices: selectSelectedServiceRows(state, { path }),\n        schema,\n        schemaIsLoaded: isSchemaLoaded(schema),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { dispatch } = dispatchProps;\n    const mergedProps = { ...ownProps, ...stateProps };\n    const onQueryData = (args) => {\n        const {\n            columnChildren,\n            schemaIsLoaded,\n            offset,\n            path,\n            sortColumn,\n            sortOrder,\n            chunkSize,\n        } = { ...mergedProps, ...args };\n\n        if (!schemaIsLoaded) { return Promise.resolve(undefined); }\n\n        const selection = [\n            ...getQuerySelection({ columnChildren }),\n            'count(modified/devices)',\n            'plan-location',\n        ];\n        return dispatch(nodesActions.query({\n            selection,\n            path,\n            sortColumn,\n            sortOrder,\n            initialOffset: offset,\n            result_as: 'keypath-value',\n            chunkSize,\n        }));\n    };\n\n    return ({\n        ...mergedProps,\n        onCreate(createPath, data) {\n            return dispatch(createDisallowExistsThunk({ path: createPath, data }))\n                .then(result => (\n                    result && result.error ? result : onQueryData()\n                ));\n        },\n        onDeleteRows(keyPaths, loadingPath) {\n            return dispatch(deleteNodesThunk({ paths: keyPaths, loadingPath }))\n                .then(() => dispatch(clearYangActionStates({ paths: keyPaths })))\n                .then(() => onQueryData());\n        },\n    });\n};\n\nexport default connect(\n    mapStateToProps,\n    undefined,\n    mergeProps,\n)(AddRemoveServiceContainer);\n\nexport {\n    AddRemoveServiceContainer as _AddRemoveServiceContainer,\n    mapStateToProps as _mapStateToProps,\n    mergeProps as _mergeProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddSymbol from '@webui-one/styles/static/AddSymbol';\nimport styles from '@webui-one/components/ConfigRender/List/ListStyles';\nimport ModalSchemaInputContainer from 'Common/Components/Modal/ModalSchemaInputContainer';\nimport {\n    addServiceButton as addServiceButtonStyle,\n} from './ServiceManagerStyles';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst style = styles();\nconst stl = style.list.header;\n\nconst AddServiceButton = ({\n    disabled,\n    onClick,\n    onClose,\n    onConfirm,\n    paths,\n    showModal,\n    error,\n}) => (\n    <div data-handle=\"create-service\" style={addServiceButtonStyle}>\n        <button\n            type=\"button\"\n            data-handle=\"service-create-button\"\n            disabled={disabled}\n            onClick={onClick}\n            style={!disabled ? stl.button : stl.buttonDisabled}\n        >\n            { disabled\n                ? (\n                    <AddSymbol\n                        symbolColor={defaultStyles.color6}\n                        borderColor={defaultStyles.color6}\n                        bgColor={defaultStyles.color3}\n                    />\n                )\n                : <AddSymbol />\n            }\n        </button>\n        {showModal && (\n            <ModalSchemaInputContainer\n                title={'Create service'}\n                paths={paths}\n                closeOnConfirm={false}\n                onClose={onClose}\n                onConfirm={onConfirm}\n                error={error}\n            />\n        )}\n    </div>\n);\n\nAddServiceButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    paths: PropTypes.arrayOf(PropTypes.string),\n    showModal: PropTypes.bool,\n    error: PropTypes.string,\n};\n\nexport default AddServiceButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RemoveSymbol from '@webui-one/styles/static/RemoveSymbol';\nimport styles from '@webui-one/components/ConfigRender/List/ListStyles';\nimport {\n    removeServiceButton as removeServiceButtonStyle,\n} from './ServiceManagerStyles';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport useSafeOnClick from '@webui-one/components/hooks/useSafeOnClick';\n\nconst style = styles();\nconst stl = style.list.header;\n\nconst RemoveServiceButton = ({\n    disabled,\n    onClick,\n    path,\n}) => (\n    <div data-handle=\"remove-service\" style={removeServiceButtonStyle}>\n        <button\n            type=\"button\"\n            data-handle=\"service-delete-button\"\n            disabled={disabled}\n            key={`${path}btn1`}\n            style={!disabled ? stl.button : stl.buttonDisabled}\n            onClick={useSafeOnClick(onClick)}\n        >\n            { !disabled\n                ? <RemoveSymbol />\n                : (\n                    <RemoveSymbol\n                        symbolColor={defaultStyles.color6}\n                        borderColor={defaultStyles.color6}\n                        bgColor={defaultStyles.color3}\n                    />\n                )\n            }\n        </button>\n    </div>\n);\n\nRemoveServiceButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    path: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n};\n\nexport default RemoveServiceButton;\n","import { connect } from 'react-redux';\nimport { selectSelectedServiceRows } from 'modules/services/selectors';\nimport {\n    runServiceActionThunk,\n} from 'modules/services/actions';\nimport BatchActions from 'Common/Components/BatchActions/BatchActions';\nimport { SERVICE_ACTIONS } from 'modules/services/paths';\n\nconst mapDispatchToProps = dispatch => ({\n    onAction: (action, servicePath) => dispatch(runServiceActionThunk({ action, servicePath })),\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n    rows: selectSelectedServiceRows(state, ownProps),\n    actions: SERVICE_ACTIONS,\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(BatchActions);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import * as nodesActions from 'modules/nodes/actions';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SelectMenu from '@webui-one/components/ConfigRender/List/SelectMenu';\nimport {\n    SERVICE_MANAGER_USER_STORAGE_PATH,\n    SERVICE_COLUMNS,\n} from 'modules/services/paths';\nimport { connect } from 'react-redux';\nimport { isVisibleColumn } from '@webui-one/core/utils/list';\nimport {\n    selectServiceColumns,\n    selectServiceIncludesPlan,\n    selectDynamicColumns,\n} from 'modules/services/selectors';\n\nconst ServiceColumnsContainer = ({\n    onSetColumnVisible,\n    columnsVisibility,\n    shouldIncludPlanColumn,\n    dynamicColumns,\n}) => {\n    let columns = [...dynamicColumns, ...SERVICE_COLUMNS];\n\n    if (!shouldIncludPlanColumn) {\n        columns = columns.filter(c => c.key !== 'plan');\n    }\n\n    columns.forEach((c, index) => {\n        columns[index].isVisible = isVisibleColumn(columnsVisibility, c);\n    });\n\n    return (\n        <div style={{ margin: '0.1rem 0.25rem' }} data-handle=\"service-column-select\">\n            <SelectMenu\n                onChange={(key, value) =>\n                    onSetColumnVisible(SERVICE_MANAGER_USER_STORAGE_PATH, key, value)\n                }\n                columns={columns.filter(c => c.canBeHidden)}\n                enabled\n            />\n        </div>\n    );\n};\n\nServiceColumnsContainer.propTypes = {\n    onSetColumnVisible: PropTypes.func.isRequired,\n    columnsVisibility: PropTypes.shape(Object),\n    dynamicColumns: PropTypes.arrayOf(Object),\n    shouldIncludPlanColumn: PropTypes.bool,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    columnsVisibility: selectServiceColumns(state),\n    shouldIncludPlanColumn: selectServiceIncludesPlan(state, ownProps),\n    dynamicColumns: selectDynamicColumns(state, ownProps),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetColumnVisible(path, columnKey, value) {\n        return dispatch(nodesActions.setColumnVisibilityAction(path, columnKey, value));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ServiceColumnsContainer);\n\nexport {\n    ServiceColumnsContainer as _ServiceColumnsContainer,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ToolTip from '@webui-one/components/ToolTip/ToolTip';\nimport {\n    selectSelectedServiceCount,\n    selectServiceCount,\n} from 'modules/services/selectors';\nimport { serviceCounter as style } from './ServiceManagerStyles';\n\nclass ServiceCounter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.showTooltip = this.showTooltip.bind(this);\n        this.hideTooltip = this.hideTooltip.bind(this);\n    }\n\n    showTooltip() {\n        this.tooltip.show();\n    }\n\n    hideTooltip() {\n        this.tooltip.hide();\n    }\n\n    render() {\n        const { selected, total } = this.props;\n        return (\n            <div style={style.wrapper}>\n                <ToolTip\n                    direction=\"left\"\n                    toolTipText=\"selected services / services in list\"\n                    ref={(tt) => { this.tooltip = tt; }}\n                />\n                <div\n                    data-handle=\"service-counter\"\n                    role=\"tooltip\"\n                    style={style.text}\n                    onMouseDown={this.showTooltip}\n                    onMouseUp={this.hideTooltip}\n                    onMouseEnter={this.showTooltip}\n                    onMouseLeave={this.hideTooltip}\n                >\n                    {`${selected} / ${total}`}\n                </div>\n            </div>\n        );\n    }\n}\n\nServiceCounter.propTypes = {\n    total: PropTypes.number,\n    selected: PropTypes.number,\n};\n\nconst mapStateToProps = (state, ownProps) =>\n    ({\n        total: selectServiceCount(state, ownProps),\n        selected: selectSelectedServiceCount(state, ownProps),\n    });\n\n\nexport default connect(\n    mapStateToProps,\n    null,\n)(ServiceCounter);\n","import List from '@webui-one/components/ConfigRender/List/List';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@webui-one/router';\nimport { connect } from 'react-redux';\nimport Pagination from '@webui-one/components/ConfigRender/List/Pagination';\nimport ActionButton from 'modules/yangActions/ActionButton';\nimport {\n    isString,\n    isNonEmptyString,\n    lstrip,\n    truncateLongString,\n} from '@webui-one/core/utils/string';\nimport { pathOr } from '@webui-one/core/utils/object';\nimport { CONFIGURATION_EDITOR_NAME } from 'ConfigurationEditor/defines';\nimport {\n    createCheckBoxCellFactory,\n    createCheckboxHeaderFactory,\n    createHeaderFactory,\n    createDataCellFactory,\n    createSortableHeaderFactory,\n    getDefaultColumn,\n    createDirtyCellFactory,\n    createEmptyHeaderFactory,\n    createServieExpandableButtonCellFactory,\n} from '@webui-one/components/ConfigRender/List/ListCells';\nimport {\n    getServices,\n    runServiceActionThunk,\n    selectServiceAction,\n    setServiceExpandedAction,\n} from 'modules/services/actions';\nimport {\n    ACTION_STATUS_INDICATOR_TIMEOUT,\n} from 'modules/globalSettings/actions';\nimport {\n    selectGlobalSetting,\n    selectGlobalSettingsIsLoading,\n} from 'modules/globalSettings/selectors';\nimport {\n    selectServiceIncludesPlan,\n    selectServiceIsLoading,\n    selectServiceOffset,\n    selectServiceRows,\n    selectServiceSearch,\n    selectServiceSortColumn,\n    selectServiceSortOrder,\n    selectTotalNumberOfServices,\n    selectServiceColumns,\n    servicePointsSelector,\n    selectServiceListIsLoading,\n} from 'modules/services/selectors';\nimport { query } from 'modules/nodes/actions';\nimport { createResultCellFactory } from 'modules/yangActions/ActionResult';\n\nimport { translate } from 'modules/intl';\nimport styles from '@webui-one/components/ConfigRender/List/ListStyles';\nimport { COLUMNS_ACTION, SERVICE_COLUMNS } from 'modules/services/paths';\n\nimport PlanContainer from 'Common/Components/ConfigRender/Plan/PlanContainer';\nimport ManagerItems from 'Common/Components/ManagerItems/ManagerItems';\nimport KeypathFromXpathWrapper from '@webui-one/components/ConfigRender/KeypathFromXpathWrapper';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport ActionButtonArrow from '@webui-one/components/ConfigRender/List/static/ActionButtonArrow';\n\nimport {\n    isVisibleColumn,\n} from '@webui-one/core/utils/list';\n\nimport Summary from 'Common/Components/Summary/Summary';\n\nimport { getLinkWithPath } from './utils';\nimport { getLinkWithPath as getConfigEditorLinkWithPath } from 'ConfigurationEditor/utils';\nimport ListDataCell from '@webui-one/components/ConfigRender/List/ListDataCell';\n\nconst SERVICE_CHUNK_SIZE = 50;\nconst STYLE_NAME = 'serviceList';\n\nconst style = styles(STYLE_NAME).list;\nconst createConfigurationCell = (to, key, rowKey) => (\n    <div data-handle={`cell-config-${rowKey}`} style={style.cell.buttonWrapper}>\n        <Link to={to} style={style.cell.link}>\n            {translate('servicemanager.config_button')}\n        </Link>\n    </div>\n);\n\nexport const createListParentCellFactory = (\n    index,\n    LinkComponent = Link,\n    formatter = undefined,\n) =>\n    (name, cellKey, rowKey, rowData) => {\n        const { parentListPaths } = rowData.data;\n        const currentPathObject = parentListPaths[index];\n        const to = getConfigEditorLinkWithPath(currentPathObject.path);\n\n        return (\n            <ListDataCell\n                to={to}\n                value={currentPathObject.name}\n                LinkComponent={LinkComponent}\n                formatter={formatter}\n            />\n        );\n    };\n\nconst createButtonCellFactory = (action, onAction, onExpand, btnStyle, actionIndicatorTimeout) => (\n    (result, key, rowKey) => {\n        const completedAt = pathOr(\n            0,\n            ['yangAction', 'completedAt'],\n            result,\n        );\n        const status = pathOr(undefined, ['yangAction', 'status'], result);\n\n        return (\n            <ActionButton\n                style={btnStyle}\n                result={(result || {}).status}\n                status={status}\n                isExpanded={(result || {}).isExpanded}\n                path={rowKey}\n                action={action}\n                onExpand={onExpand}\n                onAction={onAction}\n                actionIndicatorTimeout={actionIndicatorTimeout}\n                completedAt={completedAt}\n            />\n        );\n    }\n);\n\nconst createPlanButtonCellFactory = ({ onExpand }) => (to, key, rowKey, row) => {\n    const { isExpanded, column } = row.data.expandable;\n    const planIsExpanded = isExpanded && column === 'plan';\n    const buttonStyles = planIsExpanded ?\n        { ...style.cell.planButton, ...style.cell.planButtonActive } :\n        style.cell.planButton;\n\n    return (\n        <button\n            type=\"button\"\n            data-handle=\"plan-button\"\n            onClick={() => onExpand(rowKey, 'plan')}\n            style={buttonStyles}\n        >\n            plan\n            <div style={\n                planIsExpanded ?\n                style.cell.planButtonIconActive : style.cell.planButtonIcon\n                }\n            >\n                <ActionButtonArrow color={defaultStyles.color3} />\n            </div>\n        </button>\n    );\n};\n\nconst createPlanCell = (path, xpath) => (\n    <div data-handle={`expanded-plan-${path}`} style={{ width: '100%' }}>\n        { xpath ? (\n            <KeypathFromXpathWrapper xpath={xpath}>\n                {({ isLoading, keypath, error }) => (!isLoading && keypath ? (\n                    <PlanContainer\n                        backgroundColor={defaultStyles.color3}\n                        path={`${keypath}/plan`}\n                    />\n                )\n                : (\n                    <div style={{ textAlign: 'center' }}>\n                        {error && \"Sorry, couldn't load the plan\"}\n                    </div>\n                ))}\n            </KeypathFromXpathWrapper>\n        )\n        : (\n            <PlanContainer\n                backgroundColor={defaultStyles.color3}\n                path={path}\n            />\n        )}\n    </div>\n);\n\nconst createExpandCell = onQueryDeviceItems => (...props) => {\n    const [columnData, , rowKey, rowData] = props;\n    if (!columnData.isExpanded) return false;\n\n    if (columnData.column === 'plan') {\n        const path = `${rowKey}/plan`;\n        const xpath = rowData.data.planLocation;\n        return createPlanCell(path, xpath);\n    }\n\n    if (columnData.column === 'devices') {\n        const path = `${rowKey}/modified/devices`;\n        const deviceItemsData = rowData.data.deviceItemsData;\n\n        return (\n            <ManagerItems\n                onQueryData={onQueryDeviceItems}\n                rows={deviceItemsData.rows}\n                path={path}\n            />\n        );\n    }\n\n    return createResultCellFactory()(...props);\n};\n\n\nconst getEmptyText = (servicePoint) => {\n    if (isNonEmptyString(servicePoint)) {\n        return 'No services in list';\n    }\n    if (isString(servicePoint)) {\n        return 'No service point selected';\n    }\n    return 'Invalid service point';\n};\n\nconst getEmptyHandle = (servicePoint) => {\n    if (isString(servicePoint)) {\n        return `empty-service-list-${servicePoint}`;\n    }\n    return 'invalid-service-point';\n};\n\nclass ServiceListContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onRunAction = this.onRunAction.bind(this);\n        this.onSelectAllRows = this.onSelectAllRows.bind(this);\n        this.onSelectRow = this.onSelectRow.bind(this);\n        this.onChangeSortOrder = this.onChangeSortOrder.bind(this);\n        this.onGoToPage = this.onGoToPage.bind(this);\n        this.handleExpand = this.handleExpand.bind(this);\n        this.state = {\n            showModal: false,\n            formIsValid: false,\n        };\n    }\n    componentDidMount() {\n        const { servicePoint, onLoad } = this.props;\n        onLoad(servicePoint, 1);\n    }\n\n    componentDidUpdate({ servicePoint: prevPoint, search: prevSearch }) {\n        const {\n            offset,\n            rows,\n            search,\n            servicePoint,\n            totalNumberOfResults,\n            onLoad,\n        } = this.props;\n        if (servicePoint !== prevPoint || search !== prevSearch) {\n            onLoad(servicePoint, 1);\n        }\n        if (rows && rows.length === 0 && totalNumberOfResults > 0) {\n            this.onGoToPage(Math.max(1, offset - SERVICE_CHUNK_SIZE));\n        }\n    }\n\n    handleExpand(rowKey, newColumn) {\n        const { onExpand, rows } = this.props;\n        const row = rows.find(r => r.rowKey === rowKey);\n        const { isExpanded, column } = row.data.expandable;\n        const shouldExpand = (!isExpanded || newColumn !== column);\n        onExpand(rowKey, newColumn, shouldExpand);\n    }\n\n    onRunAction(action, path) {\n        const { onAction } = this.props;\n        return onAction(action, path);\n    }\n\n    onSelectRow(isSelected, rowKey) {\n        const { onSelectRows } = this.props;\n        onSelectRows(isSelected, [rowKey]);\n    }\n\n    onSelectAllRows(hasSelectedAll) {\n        const { rows, onSelectRows } = this.props;\n        this.setState({ hasSelectedAll });\n        onSelectRows(hasSelectedAll, rows.map(row => row.rowKey));\n    }\n\n    onChangeSortOrder(columnKey) {\n        const {\n            onLoad,\n            sortOrder,\n            sortColumn,\n            isLoading,\n            servicePoint,\n        } = this.props;\n\n        if (!isLoading) {\n            const isDesc = columnKey === sortColumn && sortOrder !== 'descending';\n            const isNone = columnKey === sortColumn && sortOrder === 'descending';\n            let newSortorder = 'ascending';\n            let newColumnKey = columnKey;\n            if (isDesc) newSortorder = 'descending';\n            if (isNone) {\n                newSortorder = undefined;\n                newColumnKey = undefined;\n            }\n\n            onLoad(servicePoint, 1, newColumnKey, newSortorder);\n        }\n    }\n\n    onGoToPage(offset) {\n        const {\n            isLoading,\n            onLoad,\n            sortOrder,\n            sortColumn,\n            servicePoint,\n        } = this.props;\n\n        if (!isLoading) {\n            onLoad(servicePoint, offset, sortColumn, sortOrder);\n        }\n    }\n\n    render() {\n        const {\n            isLoading,\n            shouldIncludPlanColumn,\n            offset,\n            rows: services,\n            sortColumn,\n            sortOrder: sortOrdering,\n            totalNumberOfResults,\n            actionIndicatorTimeout,\n            columnsVisibility,\n            search,\n            servicePoint,\n            onQueryDeviceItems,\n        } = this.props;\n        const { hasSelectedAll } = this.state;\n        let columns = [];\n        const sortOrder = { columnKey: sortColumn, isDesc: sortOrdering === 'descending' };\n        const createHeader = createSortableHeaderFactory(this.onChangeSortOrder, sortOrder);\n        const nrOfStaticColumns = 2;\n        let visibleColumns = SERVICE_COLUMNS\n            .filter(c => isVisibleColumn(columnsVisibility, c));\n\n        if (!shouldIncludPlanColumn) {\n            visibleColumns = visibleColumns.filter(c => c.key !== 'plan');\n        }\n        const formatter = value => truncateLongString(value, 180, 40, visibleColumns.length);\n        if (services.length > 0) {\n            columns = [\n                {\n                    ...getDefaultColumn(),\n                    key: 'isDirty',\n                    canBeHidden: false,\n                    isSticky: true,\n                    title: 'is dirty',\n                    createHeader: createEmptyHeaderFactory(STYLE_NAME),\n                    createCell: createDirtyCellFactory(STYLE_NAME),\n                },\n                {\n                    ...getDefaultColumn(),\n                    key: 'isSelected',\n                    canBeHidden: false,\n                    isSticky: true,\n                    title: 'is selected',\n                    createHeader: createCheckboxHeaderFactory(\n                        hasSelectedAll,\n                        this.onSelectAllRows,\n                        STYLE_NAME,\n                    ),\n                    createCell: createCheckBoxCellFactory(this.onSelectRow, STYLE_NAME),\n                },\n            ];\n\n            if (services[0].data.parentListPaths.length > 0) {\n                services[0].data.parentListPaths.forEach((pathObject, index) => {\n                    const title = `${new Array(index + 1).fill('../').join('')}key`;\n\n                    columns.push({\n                        ...getDefaultColumn(),\n                        title,\n                        key: pathObject.name,\n                        createHeader,\n                        createCell: createListParentCellFactory(\n                            index,\n                            Link,\n                            formatter,\n                        ),\n                    });\n                });\n            }\n\n            services[0].data.keys.forEach((k) => {\n                columns.push({\n                    ...getDefaultColumn(),\n                    title: k,\n                    key: k,\n                    createHeader,\n                    createCell: createDataCellFactory(\n                        CONFIGURATION_EDITOR_NAME,\n                        Link,\n                        formatter,\n                    ),\n                });\n            });\n\n            columns.push({\n                ...getDefaultColumn(),\n                title: 'devices',\n                key: 'devices',\n                createHeader: createHeaderFactory(\n                    'defaultStyle',\n                    style.header.found,\n                ),\n                createCell: createServieExpandableButtonCellFactory({\n                    expandName: 'devices',\n                    onExpand: this.handleExpand,\n                }),\n            });\n\n            if (shouldIncludPlanColumn) {\n                columns.splice(-1, 0, {\n                    ...getDefaultColumn('plan'),\n                    key: 'plan',\n                    title: 'plan',\n                    createHeader: createHeaderFactory(\n                        'defaultStyle',\n                        style.header.found,\n                    ),\n                    createCell: createPlanButtonCellFactory({\n                        title: 'plan',\n                        onExpand: this.handleExpand,\n                        styles: style.cell.actionButton,\n                    }),\n                });\n            }\n\n            COLUMNS_ACTION.forEach(({ key }) => columns.push({\n                ...getDefaultColumn(key),\n                key,\n                title: key,\n                createHeader: createHeaderFactory(\n                    'defaultStyle',\n                    style.header.found,\n                ),\n                createCell: createButtonCellFactory(\n                    key,\n                    this.onRunAction,\n                    this.handleExpand,\n                    style.cell.actionButton,\n                    actionIndicatorTimeout,\n                ),\n            }));\n\n            columns = columns.filter(c => isVisibleColumn(columnsVisibility, c));\n\n            if (columns.length === nrOfStaticColumns) {\n                const filluppColumn = {\n                    ...getDefaultColumn('empty'),\n                    title: '',\n                };\n                columns.push(filluppColumn);\n            }\n\n            columns.push({\n                ...getDefaultColumn(),\n                title: 'expandable',\n                key: 'expandable',\n                canBeHidden: false,\n                isExpandable: true,\n                createHeader,\n                createCell: createExpandCell(onQueryDeviceItems),\n            });\n        }\n\n        const additionalElements = [\n            totalNumberOfResults === 0 && (\n                <div\n                    key=\"empty\"\n                    style={style.empty}\n                    data-handle={getEmptyHandle(servicePoint)}\n                >\n                    {getEmptyText(servicePoint)}\n                </div>\n            ),\n            <Pagination\n                chunkSize={SERVICE_CHUNK_SIZE}\n                key=\"pagination\"\n                offset={offset}\n                onGoToPage={this.onGoToPage}\n                totalNumberOfResults={totalNumberOfResults}\n            />,\n        ];\n        return (\n            <div data-handle=\"service-manager-list\">\n                {servicePoint && <Summary unit={`services in ${servicePoint}`} keyword={search} />}\n                <List\n                    columns={columns}\n                    rows={services}\n                    styleName=\"serviceList\"\n                    isLoading={isLoading}\n                    additionalElements={additionalElements}\n                    chunkSize={SERVICE_CHUNK_SIZE}\n                    LinkComponent={Link}\n                    offset={offset}\n                    shouldPadRows={false}\n                    totalNumberOfResults={totalNumberOfResults}\n                    shouldRetainColumnsSize={false}\n                    nrOfStaticColumns={nrOfStaticColumns}\n                />\n            </div>\n        );\n    }\n}\n\n\nServiceListContainer.propTypes = {\n    actionIndicatorTimeout: PropTypes.string,\n    isLoading: PropTypes.bool.isRequired,\n    shouldIncludPlanColumn: PropTypes.bool.isRequired,\n    onAction: PropTypes.func.isRequired,\n    onExpand: PropTypes.func,\n    onLoad: PropTypes.func.isRequired,\n    onSelectRows: PropTypes.func.isRequired,\n    rows: PropTypes.arrayOf(Object),\n    servicePoint: PropTypes.string,\n    sortOrder: PropTypes.string,\n    offset: PropTypes.number,\n    sortColumn: PropTypes.string,\n    totalNumberOfResults: PropTypes.number,\n    search: PropTypes.string,\n    columnsVisibility: PropTypes.shape(Object),\n    onQueryDeviceItems: PropTypes.func,\n};\n\nServiceListContainer.defaultProps = {\n    rows: [],\n};\n\nconst getServicePoint = (sp, servicePoints) => {\n    if (sp === '') {\n        return sp;\n    }\n    return servicePoints[sp] ? sp : undefined;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const path = (ownProps.path) || '';\n    const isLoading = selectServiceIsLoading(state)\n        || selectServiceListIsLoading(state, path)\n        || selectGlobalSettingsIsLoading(state);\n    const columnsVisibility = selectServiceColumns(state);\n    const servicePoints = servicePointsSelector(state);\n    const servicePoint = getServicePoint(\n        lstrip(path, getLinkWithPath('')),\n        servicePoints,\n    );\n\n    return {\n        isLoading,\n        shouldIncludPlanColumn: selectServiceIncludesPlan(state, { path }),\n        offset: selectServiceOffset(state, { path }),\n        rows: selectServiceRows(state, { path }),\n        servicePoint,\n        sortColumn: selectServiceSortColumn(state, { path }),\n        sortOrder: selectServiceSortOrder(state, { path }),\n        totalNumberOfResults: selectTotalNumberOfServices(state, { path }),\n        columnsVisibility,\n        actionIndicatorTimeout: selectGlobalSetting(\n            state,\n            ACTION_STATUS_INDICATOR_TIMEOUT,\n        ),\n        search: selectServiceSearch(state),\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onAction(action, servicePath) {\n        return dispatch(runServiceActionThunk({ action, servicePath }));\n    },\n    onExpand(path, column, isExpanded) {\n        return dispatch(setServiceExpandedAction(path, column, isExpanded));\n    },\n    onLoad(servicePoint, offset, sortColumn, sortOrder) {\n        if (isNonEmptyString(servicePoint)) {\n            dispatch(getServices({\n                servicePoint,\n                offset,\n                chunkSize: SERVICE_CHUNK_SIZE,\n                sortColumn,\n                sortOrder,\n            }));\n        }\n    },\n    onSelectRows(isSelected, names) {\n        dispatch(selectServiceAction(isSelected, names));\n    },\n    onQueryDeviceItems(path) {\n        dispatch(query({ path }));\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ServiceListContainer);\n\nexport {\n    ServiceListContainer as _ServiceListContainer,\n    createButtonCellFactory as _createButtonCellFactory,\n    createPlanButtonCellFactory as _createPlanButtonCellFactory,\n    createExpandCell as _createExpandCell,\n    createPlanCell as _createPlanCell,\n    createConfigurationCell as _createConfigurationCell,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import HeaderContainer from 'Common/Components/Header/HeaderContainer';\nimport FooterContainer from 'Common/Components/Footer/FooterContainer';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ServiceBatchActions from 'ServiceManager/ServiceBatchActions';\nimport ErrorBoundary from '@webui-one/components/ConfigRender/ErrorBoundary';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport ServiceListContainer from './ServiceListContainer';\nimport ServicePointContainer from './ServicePointContainer';\nimport AddRemoveServiceButtonContainer from './AddRemoveServiceContainer';\nimport ServiceCounter from './ServiceCounter';\nimport ServiceSearchContainer from './ServiceSearchContainer';\nimport ServiceColumnsContainer from './ServiceColumnsContainer';\nimport ZombieServieListContainer from './ZombieServiceListContainer';\nimport style from './ServiceManagerStyles';\n\nconst ServiceManager = ({ path }) => (\n    <div style={style.application}>\n        <HeaderContainer\n            additionalComponentsRight={[\n                <ServiceBatchActions path={path} />,\n            ]}\n        >\n            <div style={style.secondHeader}>\n                <div style={style.contentWrapper}>\n                    <ServicePointContainer path={path} />\n                    <AddRemoveServiceButtonContainer path={path} />\n                    <ServiceColumnsContainer path={path} />\n                    <ServiceCounter path={path} />\n                    <div style={style.contentRightSide}>\n                        <ServiceSearchContainer />\n                    </div>\n                </div>\n                <div style={defaultStyles.shadow} />\n            </div>\n        </HeaderContainer>\n        <div style={style.scrollingContainer}>\n            <ErrorBoundary>\n                <ZombieServieListContainer path={path} />\n                <ServiceListContainer style={style.serviceList} path={path} />\n            </ErrorBoundary>\n        </div>\n        <FooterContainer />\n    </div>\n);\n\nServiceManager.propTypes = {\n    path: PropTypes.string,\n};\n\nexport default ServiceManager;\n","import { connect } from 'react-redux';\nimport { withRouter } from '@webui-one/router';\nimport ServiceManager from './ServiceManager';\n\nconst mapStateToProps = (state, ownProps) => {\n    const routeParams = (ownProps && ownProps.routeParams) || {};\n    const { splat: path } = routeParams;\n    return {\n        path,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n)(withRouter(ServiceManager));\n\nexport {\n    mapStateToProps as _mapStateToProps,\n};\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst rowStyle = {};\n\nexport default {\n    application: {\n        ...defaultStyles.application,\n        height: '100vh',\n        display: 'flex',\n        flexFlow: 'column',\n        backgroundImage: defaultStyles.pattern1,\n    },\n    scrollingContainer: {\n        overflow: 'auto',\n        flexGrow: '1',\n    },\n    secondHeader: {\n        backgroundColor: defaultStyles.color11,\n        borderTop: '1px solid #cccccc',\n        height: '50px',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n    },\n    contentWrapper: {\n        display: 'flex',\n        maxWidth: defaultStyles.maxWidth,\n        margin: '0 auto',\n        height: '100%',\n        padding: '0 1rem',\n        alignItems: 'center',\n    },\n    contentRightSide: {\n        marginLeft: 'auto',\n    },\n};\n\nconst menuArrow = {\n    width: '1.2rem',\n    height: '1.2rem',\n    top: '-0.5rem',\n    left: '5.2rem',\n    transform: 'rotate(43deg)',\n    backgroundColor: '#ffffff',\n    position: 'absolute',\n};\n\nconst menuArrowDisplaced = {\n    ...menuArrow,\n    left: '8.5rem',\n};\n\nconst button = {\n    border: 'none',\n    transition: 'all 100ms ease-out',\n    height: '1.5rem',\n    width: '5rem',\n    padding: '0.3rem',\n};\n\nconst popDownMenu = {\n    container: {\n        alignSelf: 'center',\n        marginRight: '1rem',\n        position: 'relative',\n    },\n    button: {\n        ...button,\n        cursor: 'pointer',\n        disabled: {\n            ...button,\n            color: 'rgb(154, 154, 154)',\n        },\n    },\n    pop: {\n        position: 'absolute',\n        left: '-4rem',\n        top: '2.4rem',\n    },\n    menuArrow,\n    menuArrowShadow: {\n        ...menuArrow,\n        boxShadow: 'rgb(136, 136, 136) 0px 0px 3px 0px',\n    },\n    wrapper: {\n        position: 'absolute',\n        width: '9.2rem',\n        backgroundColor: 'white',\n        padding: '1rem',\n        boxShadow: 'rgb(136, 136, 136) 0px 0px 3px 0px',\n        color: '#333333',\n    },\n    header: {\n        marginBottom: '1rem',\n    },\n};\n\nconst labelsMenu = {\n    ...popDownMenu,\n    pop: {\n        position: 'absolute',\n        left: '-7rem',\n        top: '2.4rem',\n    },\n    menuArrow: {\n        ...menuArrowDisplaced,\n    },\n    menuArrowShadow: {\n        ...menuArrowDisplaced,\n        boxShadow: 'rgb(136, 136, 136) 0px 0px 3px 0px',\n    },\n    labelImage: {\n        width: '2rem',\n        disabled: {\n            width: '2rem',\n            opacity: 0.8,\n        },\n    },\n    labelContainer: {\n        display: 'flex',\n        margin: '0.25rem 0',\n    },\n    label: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        alignSelf: 'center',\n    },\n    deleteLabel: {\n        marginLeft: 'auto',\n        flexShrink: '0',\n        display: 'flex',\n        backgroundColor: '#ffffff',\n        border: 'none',\n        cursor: 'pointer',\n    },\n    createContainer: {\n        display: 'flex',\n        marginTop: '1rem',\n    },\n    deleteImage: {\n        width: '0.8rem',\n    },\n    input: {\n        fontSize: '1rem',\n        width: '7rem',\n    },\n    button: {\n        ...button,\n        padding: '0.35rem 1rem',\n    },\n};\n\nconst serviceCounter = {\n    wrapper: {\n        position: 'relative',\n        display: 'flex',\n        marginLeft: '1rem',\n    },\n    text: {\n        fontSize: defaultStyles.medium3,\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst servicePoint = {\n    display: 'block',\n    border: `${defaultStyles.color13} 1px solid`,\n    minWidth: '2rem',\n    maxWidth: '15rem',\n};\n\nconst servicePointSelect = {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n};\n\nconst serviceButtonContainer = {\n    display: 'flex',\n};\n\nconst serviceButton = {\n    justifyContent: 'center',\n    height: '1.5rem',\n    alignSelf: 'center',\n};\n\nconst addServiceButton = {\n    ...serviceButton,\n    marginLeft: '1rem',\n};\n\nconst removeServiceButton = {\n    ...serviceButton,\n};\n\nexport {\n    addServiceButton,\n    labelsMenu,\n    removeServiceButton,\n    rowStyle,\n    serviceButtonContainer,\n    serviceCounter,\n    servicePoint,\n    servicePointSelect,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from '@webui-one/router';\nimport Select from '@webui-one/components/ConfigRender/Select/Select';\nimport { isNonEmpty } from '@webui-one/core/utils/object';\nimport { isNonEmptyString, lstrip } from '@webui-one/core/utils/string';\nimport {\n    servicePointsSelector,\n} from 'modules/services/selectors';\nimport {\n    getServicePointsAndSchemas,\n} from 'modules/services/actions';\n\nimport { getLinkWithPath } from './utils';\nimport {\n    servicePoint as servicePointStyle,\n    servicePointSelect as servicePointSelectStyle,\n} from './ServiceManagerStyles';\n\nconst servicePointSorter = (a, b) => {\n    const { text: textA, value: valueA } = a;\n    const { text: textB, value: valueB } = b;\n    const valueCompare = valueA.localeCompare(valueB);\n    if (valueCompare !== 0) {\n        return valueCompare;\n    }\n    const textCompare = textA.localeCompare(textB);\n    if (textCompare !== 0) {\n        return textCompare;\n    }\n    return 0;\n};\n\nconst servicePointFilter = ([key, name]) => (\n    isNonEmptyString(name) && isNonEmptyString(key)\n);\n\nconst entryToOption = ([value, text]) => ({ text, value });\n\nconst getSortedOptions = points => (\n    (Object.entries(points || {}))\n        .filter(servicePointFilter)\n        .map(entryToOption)\n        .sort(servicePointSorter)\n);\n\nconst getValue = (points, servicePoint) => points[servicePoint] || '';\n\nclass ServicePointContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        const { onLoad, points } = this.props;\n\n        if (!isNonEmpty(points)) {\n            onLoad();\n        }\n    }\n\n    onChange(value) {\n        const { router } = this.props;\n        router.push(getLinkWithPath(value));\n    }\n\n    render() {\n        const { points, servicePoint } = this.props;\n        return (\n            <div data-handle=\"service-point\" style={servicePointStyle}>\n                <Select\n                    editable\n                    extraSelectStyle={servicePointSelectStyle}\n                    onSetValue={this.onChange}\n                    options={getSortedOptions(points)}\n                    placeholder=\"Select service point...\"\n                    value={getValue(points, servicePoint)}\n                />\n            </div>\n        );\n    }\n}\n\nServicePointContainer.propTypes = {\n    onLoad: PropTypes.func,\n    points: PropTypes.shape({}),\n    router: PropTypes.shape(Object),\n    servicePoint: PropTypes.string,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const path = (ownProps || {}).path || '';\n    const servicePoints = servicePointsSelector(state);\n    const servicePoint = lstrip(path, getLinkWithPath(''));\n    const points = Object.values(servicePoints).reduce((acc, sp) => {\n        acc[sp.path] = sp.path;\n        return acc;\n    }, {});\n    return {\n        points,\n        servicePoint,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad() {\n        dispatch(getServicePointsAndSchemas());\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(withRouter(ServicePointContainer));\n\nexport {\n    ServicePointContainer as _ServicePointContainer,\n    entryToOption as _entryToOption,\n    getSortedOptions as _getSortedOptions,\n    getValue as _getValue,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    servicePointSorter as _servicePointSorter,\n};\n","import { connect } from 'react-redux';\n\nimport Search from '@webui-one/components/Search/Search';\n\nimport {\n    setSearchAction,\n} from 'modules/services/actions';\nimport {\n    selectServiceSearch,\n} from 'modules/services/selectors';\n\n\nconst mapDispatchToProps = dispatch => ({\n    onSetSearch(value) {\n        dispatch(setSearchAction(value));\n    },\n});\n\nconst mapStateToProps = state => ({\n    keyword: selectServiceSearch(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Search);\n\nexport {\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CONFIGURATION_EDITOR_NAME } from 'ConfigurationEditor/defines';\nimport { Link } from '@webui-one/router';\nimport List from '@webui-one/components/ConfigRender/List/List';\nimport {\n    selectZombieServiceRows,\n    selectZombiesIsLoading,\n} from 'modules/services/selectors';\nimport {\n    setServiceExpandedAction as _setServiceExpandedAction,\n} from 'modules/services/actions';\nimport {\n    query as _query,\n    modifiedNodesAction,\n} from 'modules/nodes/actions';\nimport { selectGlobalSettingsIsLoading } from 'modules/globalSettings/selectors';\nimport {\n    subscribeCdbOperAction,\n    unsubscribeCdbOperAction,\n} from 'modules/comet/actions';\nimport { updateConfig } from 'modules/comet/configeditor';\nimport {\n    getDefaultColumn,\n    createHeader,\n    createDataCellFactory,\n    createHeaderFactory,\n} from '@webui-one/components/ConfigRender/List/ListCells';\nimport ActionButtonArrow from '@webui-one/components/ConfigRender/List/static/ActionButtonArrow';\nimport PlanContainer from 'Common/Components/ConfigRender/Plan/PlanContainer';\nimport Summary from 'Common/Components/Summary/Summary';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport styles from '@webui-one/components/ConfigRender/List/ListStyles';\n\nconst STYLE_NAME = 'serviceList';\nconst listStyle = styles(STYLE_NAME).list;\n\nconst ZOMBIES_PATH = '/ncs:zombies/service';\nconst CHUNK_SIZE = 5;\nconst SELECTION = [\n    'service-path',\n    'delete-path',\n];\n\nconst createPlanButtonCellFactory = ({ onExpand }) => (to, key, rowKey, row) => {\n    const { isExpanded, column } = row.data.expandable;\n    const planIsExpanded = isExpanded && column === 'plan';\n    const buttonStyles = planIsExpanded ?\n        { ...listStyle.cell.planButton, ...listStyle.cell.planButtonActive } :\n        listStyle.cell.planButton;\n\n    return (\n        <button\n            type=\"button\"\n            data-handle=\"plan-button\"\n            onClick={() => onExpand(rowKey, 'plan')}\n            style={buttonStyles}\n        >\n            plan\n            <div style={\n                planIsExpanded ?\n                listStyle.cell.planButtonIconActive : listStyle.cell.planButtonIcon\n                }\n            >\n                <ActionButtonArrow color={defaultStyles.color3} />\n            </div>\n        </button>\n    );\n};\n\nconst createExpandCell = (...props) => {\n    const [columnData, , rowKey] = props;\n    if (!columnData.isExpanded || columnData.column !== 'plan') return null;\n    const path = `${rowKey}/plan`;\n\n    return (\n        <div data-handle={`expanded-plan-${path}`} style={{ width: '100%' }}>\n            <PlanContainer\n                backgroundColor={defaultStyles.color3}\n                path={path}\n            />\n        </div>\n    );\n};\n\nclass ZombieServiceListContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleExpand = this.handleExpand.bind(this);\n        this.onCometUpdate = this.onCometUpdate.bind(this);\n    }\n\n    componentDidMount() {\n        const { onLoad, onSubscribe } = this.props;\n        onLoad();\n        onSubscribe(this.onCometUpdate);\n    }\n\n    componentDidUpdate(oldProps) {\n        const { onLoad, path } = this.props;\n        if (oldProps.path !== path) {\n            onLoad();\n        }\n    }\n\n    componentWillUnmount() {\n        const { onUnsubscribe } = this.props;\n        onUnsubscribe(this.onCometUpdate);\n    }\n\n    handleExpand(rowKey, newColumn) {\n        const { onExpand, rows } = this.props;\n        const row = rows.find(r => r.rowKey === rowKey);\n        const { isExpanded, column } = row.data.expandable;\n        const shouldExpand = (!isExpanded || newColumn !== column);\n        onExpand(rowKey, newColumn, shouldExpand);\n    }\n\n    onCometUpdate(notifications, subscription) {\n        const {\n            onCreate,\n            onDelete,\n            onModifiedNodes,\n            onUpdateLeaf,\n        } = this.props;\n\n        updateConfig(\n            notifications,\n            subscription.params.path,\n            {\n                onCreate,\n                onDelete,\n                onModifiedNodes,\n                onUpdateLeaf,\n            },\n        );\n    }\n\n    render() {\n        const { rows, isLoading, path } = this.props;\n\n        const columns = [\n            {\n                ...getDefaultColumn(),\n                title: 'service-path',\n                key: 'service-path',\n                createHeader,\n                createCell: createDataCellFactory(CONFIGURATION_EDITOR_NAME, Link),\n            },\n            {\n                ...getDefaultColumn(),\n                title: 'delete-path',\n                key: 'delete-path',\n                createHeader,\n                createCell: createDataCellFactory(CONFIGURATION_EDITOR_NAME, Link),\n            },\n            {\n                ...getDefaultColumn('plan'),\n                key: 'plan',\n                title: 'plan',\n                createHeader: createHeaderFactory(\n                    'defaultStyle',\n                    listStyle.header.found,\n                ),\n                createCell: createPlanButtonCellFactory({\n                    title: 'plan',\n                    onExpand: this.handleExpand,\n                    styles: listStyle.cell.actionButton,\n                }),\n            },\n            {\n                ...getDefaultColumn(),\n                title: 'expandable',\n                key: 'expandable',\n                canBeHidden: false,\n                isExpandable: true,\n                createHeader,\n                createCell: createExpandCell,\n            },\n        ];\n\n        return (\n            <div style={{ marginTop: '0.5rem' }}>\n                { rows.length > 0 && <Summary unit={`zombies of ${path}`} /> }\n                <List\n                    columns={columns}\n                    rows={rows}\n                    isLoading={isLoading}\n                    styleName=\"serviceList\"\n                />\n            </div>\n        );\n    }\n}\n\nZombieServiceListContainer.propTypes = {\n    isLoading: PropTypes.bool,\n    path: PropTypes.string,\n    rows: PropTypes.arrayOf(Object),\n    onLoad: PropTypes.func,\n    onCreate: PropTypes.func,\n    onDelete: PropTypes.func,\n    onModifiedNodes: PropTypes.func,\n    onUpdateLeaf: PropTypes.func,\n    onExpand: PropTypes.func,\n    onSubscribe: PropTypes.func,\n    onUnsubscribe: PropTypes.func,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const rows = selectZombieServiceRows(state, ownProps);\n    const isLoading = selectZombiesIsLoading(state) || selectGlobalSettingsIsLoading(state);\n\n    return {\n        isLoading,\n        rows,\n    };\n};\n\nconst mapDispatchToProps = (\n    dispatch,\n    {\n        funcs: {\n            query = _query,\n            setServiceExpandedAction = _setServiceExpandedAction,\n        } = {},\n    } = {},\n) => {\n    function onLoad() {\n        dispatch(query({ path: ZOMBIES_PATH, chunkSize: CHUNK_SIZE, selection: SELECTION }));\n    }\n\n    return {\n        onExpand(path, column, isExpanded) {\n            return dispatch(setServiceExpandedAction(path, column, isExpanded));\n        },\n        onLoad,\n        onSubscribe(handler) {\n            dispatch(subscribeCdbOperAction([ZOMBIES_PATH], handler));\n        },\n        onUnsubscribe(handler) {\n            dispatch(unsubscribeCdbOperAction([ZOMBIES_PATH], handler));\n        },\n        onModifiedNodes(paths) {\n            dispatch(modifiedNodesAction(paths));\n            onLoad();\n        },\n        onUpdateLeaf() {\n            // This is intentional\n        },\n        onDelete() {\n            // This is intentional\n        },\n        onCreate() {\n            // This is intentional\n        },\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ZombieServiceListContainer);\n\nexport {\n    ZombieServiceListContainer as _ZombieServiceListContainer,\n    createPlanButtonCellFactory as _createPlanButtonCellFactory,\n    createExpandCell as _createExpandCell,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n};\n","import { getListPath } from '@webui-one/core/keypath/kp-parser';\nimport { isNonEmptyString } from '@webui-one/core/utils/string';\nimport { uniq } from '@webui-one/core/utils/array';\n\nconst setValue = (change, nodes) => {\n    const value = change.value;\n    const { updateNode } = nodes;\n    updateNode[change.keypath] = value;\n};\n\nconst updateConfig = (\n    notifications,\n    subscriptionPath,\n    {\n        onDelete,\n        onUpdateLeaf,\n        onCreate,\n        onModifiedNodes,\n    }) => {\n    const changes = notifications.changes || [];\n    const removeList = [];\n    const addNode = {};\n    const updateNode = {};\n    const modifiedNodes = [];\n    changes.forEach((change) => {\n        const listPath = getListPath(change.keypath, subscriptionPath);\n        if (isNonEmptyString(listPath)) {\n            modifiedNodes.push(listPath);\n            return;\n        }\n        if (change.op === 'deleted') {\n            removeList.push([change.keypath, true]);\n        }\n        if (change.op === 'created') {\n            addNode[change.keypath] = true;\n        }\n        if (change.op === 'default_set') {\n            removeList.push([change.keypath, false]);\n        }\n        if (change.op === 'value_set') {\n            setValue(change, { updateNode });\n        }\n    });\n    removeList.forEach(([path, deleteChildren]) => {\n        onDelete(path, deleteChildren);\n    });\n    Object.keys(addNode).forEach((nodePath) => {\n        onCreate(nodePath);\n    });\n    Object.keys(updateNode).forEach((node) => {\n        onUpdateLeaf(node, updateNode[node]);\n    });\n    if (modifiedNodes.length > 0) {\n        onModifiedNodes(uniq(modifiedNodes));\n    }\n};\n\nexport default updateConfig;\n\nexport {\n    updateConfig,\n    setValue as _setValue,\n};\n"],"names":["ErrorBoundary","React","Component","constructor","props","super","this","state","error","errorInfo","componentDidCatch","setState","render","children","propTypes","PropTypes","oneOfType","arrayOf","node","KeypathFromXpathWrapper","xpath","funcs","query","_query","getTrans","_getTrans","useFetch","asyncFunc","useCallback","async","signal","webuiTrans","trans","find","t","tag","response","th","resultAs","xpathExpr","results","keypath","Error","data","string","isRequired","func","Search","keyword","onSetSearch","useState","draft","setDraft","setSearch","event","value","target","trim","useEffect","style","wrapper","onBlur","onChange","onKeyDown","key","search","placeholder","margin","padding","display","alignItems","border","borderRadius","backgroundColor","position","fontSize","color","height","alignSelf","width","paddingLeft","ItemLinks","items","map","item","Link","title","name","path","styles","itemsLink","to","ItemGroupList","itemGroups","itemGroup","group","groupTitle","ManagerItems","onQueryData","rows","isLoading","container","loaderContainer","defaultStyles","color2","length","bool","Object","defaultProps","flexWrap","justifyContent","textOverflow","overflow","maxWidth","lineHeight","large2","medium3","textDecoration","flexBasis","getString","unit","values","theLogics","include","filter","type","labelTypes","LBL_INCLUDE","oneOf","LBL_ONE_OF","exclude","LBL_EXCLUDE","returnString","includeString","join","oneOfString","excludeString","getDeviceGroupLogicsString","summary","Summary","labels","shape","medium1","AddRemoveServiceContainer","onClose","bind","onConfirm","onDeleteSelected","showAddServiceModal","errorOnCreate","undefined","createPath","onCreate","then","result","selectedServices","onDeleteRows","isNonEmptyArray","row","rowKey","Promise","resolve","addServiceIsDisabled","exists","isPresenceContainer","isNonEmptyString","removeServiceIsDisabled","paths","serviceButtonContainerStyle","disabled","onClick","showModal","IGNORE_PATHS","mapStateToProps","ownProps","pathToObjects","o","p","includes","schema","selectCurrentSchema","S","columnChildren","getColumnChildren","selectExists","selectSelectedServiceRows","schemaIsLoaded","isSchemaLoaded","mergeProps","stateProps","dispatchProps","dispatch","mergedProps","args","offset","sortColumn","sortOrder","chunkSize","selection","getQuerySelection","nodesActions","initialOffset","result_as","createDisallowExistsThunk","keyPaths","loadingPath","deleteNodesThunk","clearYangActionStates","connect","stl","list","header","AddServiceButton","addServiceButtonStyle","buttonDisabled","button","symbolColor","color6","borderColor","bgColor","color3","closeOnConfirm","RemoveServiceButton","removeServiceButtonStyle","mapDispatchToProps","onAction","action","servicePath","runServiceActionThunk","actions","SERVICE_ACTIONS","BatchActions","ServiceColumnsContainer","onSetColumnVisible","columnsVisibility","shouldIncludPlanColumn","columns","dynamicColumns","SERVICE_COLUMNS","c","forEach","index","isVisible","isVisibleColumn","SERVICE_MANAGER_USER_STORAGE_PATH","canBeHidden","enabled","selectServiceColumns","selectServiceIncludesPlan","selectDynamicColumns","columnKey","setColumnVisibilityAction","ServiceCounter","showTooltip","hideTooltip","tooltip","show","hide","selected","total","direction","toolTipText","ref","tt","role","text","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","number","selectServiceCount","selectSelectedServiceCount","STYLE_NAME","cell","buttonWrapper","link","translate","createListParentCellFactory","LinkComponent","formatter","cellKey","rowData","currentPathObject","parentListPaths","createButtonCellFactory","onExpand","btnStyle","actionIndicatorTimeout","completedAt","pathOr","status","isExpanded","createPlanButtonCellFactory","expandable","column","planIsExpanded","buttonStyles","planButton","planButtonActive","planButtonIconActive","planButtonIcon","createPlanCell","textAlign","createExpandCell","onQueryDeviceItems","columnData","planLocation","deviceItemsData","createResultCellFactory","getEmptyText","servicePoint","isString","getEmptyHandle","ServiceListContainer","onRunAction","onSelectAllRows","onSelectRow","onChangeSortOrder","onGoToPage","handleExpand","formIsValid","componentDidMount","onLoad","componentDidUpdate","prevPoint","prevSearch","totalNumberOfResults","Math","max","newColumn","r","isSelected","onSelectRows","hasSelectedAll","newSortorder","newColumnKey","services","sortOrdering","isDesc","createHeader","createSortableHeaderFactory","visibleColumns","truncateLongString","getDefaultColumn","isSticky","createEmptyHeaderFactory","createCell","createDirtyCellFactory","createCheckboxHeaderFactory","createCheckBoxCellFactory","pathObject","Array","fill","push","keys","k","createDataCellFactory","CONFIGURATION_EDITOR_NAME","createHeaderFactory","found","createServieExpandableButtonCellFactory","expandName","splice","actionButton","COLUMNS_ACTION","filluppColumn","isExpandable","additionalElements","empty","styleName","shouldPadRows","shouldRetainColumnsSize","nrOfStaticColumns","selectServiceIsLoading","selectServiceListIsLoading","selectGlobalSettingsIsLoading","servicePoints","servicePointsSelector","sp","getServicePoint","lstrip","getLinkWithPath","selectServiceOffset","selectServiceRows","selectServiceSortColumn","selectServiceSortOrder","selectTotalNumberOfServices","selectGlobalSetting","ACTION_STATUS_INDICATOR_TIMEOUT","selectServiceSearch","setServiceExpandedAction","getServices","names","selectServiceAction","ServiceManager","application","additionalComponentsRight","secondHeader","contentWrapper","contentRightSide","shadow","scrollingContainer","serviceList","routeParams","splat","withRouter","flexFlow","backgroundImage","pattern1","flexGrow","color11","borderTop","marginLeft","menuArrow","top","left","transform","menuArrowDisplaced","transition","labelsMenu","marginRight","cursor","pop","menuArrowShadow","boxShadow","marginBottom","labelImage","opacity","labelContainer","label","deleteLabel","flexShrink","createContainer","marginTop","deleteImage","input","serviceCounter","whiteSpace","color13","minWidth","serviceButton","addServiceButton","removeServiceButton","servicePointSorter","a","b","textA","valueA","textB","valueB","valueCompare","localeCompare","textCompare","servicePointFilter","entryToOption","getSortedOptions","points","entries","sort","getValue","ServicePointContainer","isNonEmpty","router","servicePointStyle","editable","extraSelectStyle","servicePointSelectStyle","onSetValue","options","reduce","acc","getServicePointsAndSchemas","setSearchAction","listStyle","ZOMBIES_PATH","SELECTION","ZombieServiceListContainer","onCometUpdate","onSubscribe","oldProps","componentWillUnmount","onUnsubscribe","notifications","subscription","onDelete","onModifiedNodes","onUpdateLeaf","updateConfig","params","selectZombieServiceRows","selectZombiesIsLoading","_setServiceExpandedAction","handler","subscribeCdbOperAction","unsubscribeCdbOperAction","modifiedNodesAction","setValue","change","nodes","updateNode","subscriptionPath","changes","removeList","addNode","modifiedNodes","listPath","getListPath","op","deleteChildren","nodePath","uniq"],"sourceRoot":""}