{"version":3,"file":"840.1099cb112ec2adbee644.chunk.js","mappings":"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","sources":["webpack://webui/./packages/components/ConfigRender/NotSupported.jsx","webpack://webui/./packages/components/ConfigRender/Select/MultiSelect.jsx","webpack://webui/./packages/components/ConfigRender/TextArea/TextArea.jsx","webpack://webui/./packages/components/ConfigRender/TextArea/TextAreaStyles.js","webpack://webui/./packages/components/DateTime/DateAndTime.jsx","webpack://webui/./packages/components/DateTime/DateAndTimeStyles.js","webpack://webui/./packages/components/DateTime/Suggestions.jsx","webpack://webui/./packages/components/DateTime/utils.js","webpack://webui/./packages/components/QueryListSelect/QueryListSelect.jsx","webpack://webui/./packages/components/hooks/useFetch.js","webpack://webui/./packages/core/fsm.js","webpack://webui/./packages/styles/static/AddSymbol.jsx","webpack://webui/./packages/styles/static/RemoveSymbol.jsx","webpack://webui/./src/Common/Components/ConfigRender/LeafContainer.jsx","webpack://webui/./src/Common/Components/ConfigRender/SchemaContainerUtils.jsx","webpack://webui/./src/Common/Components/Modal/ModalSchemaInputContainer.jsx","webpack://webui/./src/Common/Components/Modal/SchemaInputContainer.jsx","webpack://webui/./src/Common/Containers/GetSchemaContainer.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NotSupported = ({ kind, type }) => {\n    if (kind) {\n        return (\n            <div>\n                <p style={{ fontSize: '0.8em' }}>Not Supported:</p>\n                <p style={{ fontSize: '0.6em' }}>{kind}</p>\n            </div>\n        );\n    }\n    const typeName = type ? `${type.namespace}:${type.name}` : ':';\n    return (\n        <div>\n            <p style={{ fontSize: '0.8em' }}>Not Supported:</p>\n            <p style={{ fontSize: '0.6em' }}>{typeName}</p>\n        </div>\n    );\n};\n\n\nNotSupported.propTypes = {\n    kind: PropTypes.string,\n    type: PropTypes.shape({\n        namespace: PropTypes.string,\n        name: PropTypes.string,\n    }),\n};\n\nexport default NotSupported;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckBox from '../CheckBox/CheckBox';\nimport style from './SelectStyles';\n\nconst onChange = (selectedValues, option, e) => {\n    if (e !== undefined) {\n        selectedValues[option] = e; // eslint-disable-line no-param-reassign\n    } else {\n        selectedValues[option] = false; // eslint-disable-line no-param-reassign\n    }\n\n    return Object.keys(selectedValues)\n        .filter(key => selectedValues[key] === true)\n        .join(' ');\n};\n\nfunction MultiSelect({ editable, options, onSetValue, value, isLoading }) {\n    const selectedValues = {};\n    for (const option of options) {\n        selectedValues[option] = false;\n    }\n\n    if (value !== '') {\n        if (value.includes(' ')) {\n            // Space sepparated list\n            value.split(' ').forEach((data) => {\n                selectedValues[data] = true;\n            });\n        } else if (value.includes(',')) {\n            // Comma sepparated list\n            value.split(',').forEach((data) => {\n                selectedValues[data] = true;\n            });\n        } else {\n            // Single value checked\n            selectedValues[value] = true;\n        }\n    }\n\n    return (\n        <div style={editable ? style.wrapper : style.disabledWrapper}>\n            {options.map((option, ix) => (\n                <div key={`checkbox-wrapper-${ix}`} style={style.row} data-handle={option}>\n                    <CheckBox\n                        name={`${option}-checkbox`}\n                        editable={editable && !isLoading}\n                        value={selectedValues[option]}\n                        onSetValue={e => (onSetValue(onChange(selectedValues, option, e)))}\n                        style={editable ? style.select : style.disabledSelect}\n                        key={`checkbox-${ix}`}\n                    >\n                        <span key={`checkbox-span-${ix}`} style={style.span}>\n                            {option}\n                        </span>\n                    </CheckBox>\n                </div>\n            ),\n            )}\n        </div>\n    );\n}\n\nMultiSelect.propTypes = {\n    editable: PropTypes.bool,\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onSetValue: PropTypes.func,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n    ]),\n    isLoading: PropTypes.bool,\n};\n\nMultiSelect.defaultProps = {\n    options: [],\n    value: '',\n    onSetValue: () => null,\n};\n\nexport default MultiSelect;\n\nexport {\n    onChange as _onChange,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './TextAreaStyles';\n\nclass TextArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSetValue = this.onSetValue.bind(this);\n        this.state = {\n            hasFocus: false,\n            isModified: false,\n            localNewValue: props.value,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ hasFocus: false });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            editable: nextEditable,\n            error: nextError,\n            isDefaultValue: nextIsDefaultValue,\n            isLoading: nextIsLoading,\n            value: nextValue,\n        } = nextProps;\n        const {\n            editable,\n            error,\n            isDefaultValue,\n            isLoading,\n            value,\n        } = this.props;\n        const { hasFocus: nextHasFocus, localNewValue: nextLocalNewValue } = nextState;\n        const { hasFocus, localNewValue } = this.state;\n\n        if (nextValue !== value) return true;\n        if (nextIsDefaultValue !== isDefaultValue) return true;\n        if (nextEditable !== editable) return true;\n        if (nextError !== error) return true;\n        if (nextIsLoading !== isLoading) return true;\n        if (nextLocalNewValue !== localNewValue) return true;\n        if (nextHasFocus !== hasFocus) return true;\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        const { value: newValue, error } = this.props;\n        const { hasFocus, localNewValue } = this.state;\n\n        if (!hasFocus && (prevProps.value === localNewValue || error)) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ localNewValue: newValue });\n        }\n    }\n\n    handleKeyDown(e) {\n        const { value } = this.props;\n        e.persist();\n        if (e.key === 'Escape') {\n            this.setState({\n                localNewValue: value,\n                isModified: false,\n            }, () => {\n                e.target.blur();\n            });\n        }\n    }\n\n    onChange(e) {\n        const { onChange } = this.props;\n        onChange(e.target.value);\n        this.setState({ localNewValue: e.target.value, isModified: true });\n    }\n\n    onFocus() {\n        const { value } = this.props;\n        this.setState({ hasFocus: true, isModified: false, localNewValue: value });\n    }\n\n    onSetValue(e) {\n        const { onSetValue, value } = this.props;\n        const { localNewValue, isModified } = this.state;\n        if (localNewValue !== value || isModified) {\n            onSetValue(e.target.value);\n        }\n        this.setState({ hasFocus: false, isModified: false });\n    }\n\n    textAreaStyle() {\n        const { editable, error } = this.props;\n        if (!editable) {\n            return style.textAreaReadOnly;\n        }\n        if (error) return style.textAreaError;\n        return style.textArea;\n    }\n\n    render() {\n        const {\n            name,\n            editable,\n            isDefaultValue,\n            autoFocus } = this.props;\n        const { hasFocus, localNewValue } = this.state;\n        const localNewValueDefault = (isDefaultValue) && (!hasFocus)\n            ? `(${localNewValue})`\n            : localNewValue;\n        const textAreaStyle = this.textAreaStyle();\n        return (\n            <textarea\n                autoFocus={autoFocus}\n                data-handle={name}\n                readOnly={!editable}\n                style={textAreaStyle}\n                value={localNewValueDefault}\n                onChange={this.onChange}\n                onFocus={this.onFocus}\n                onBlur={this.onSetValue}\n                onKeyDown={this.handleKeyDown}\n            />\n        );\n    }\n}\n\nTextArea.propTypes = {\n    autoFocus: PropTypes.bool,\n    editable: PropTypes.bool,\n    error: PropTypes.shape(Object),\n    isDefaultValue: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onSetValue: PropTypes.func,\n    value: PropTypes.string,\n};\n\nTextArea.defaultProps = {\n    value: '',\n    isDirty: false,\n    onChange: () => (null),\n    onSetValue: () => (null),\n};\n\nexport default TextArea;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst textArea = {\n    backgroundColor: defaultStyles.color3,\n    color: defaultStyles.textColor5,\n    fontSize: defaultStyles.medium2,\n    width: '100%',\n    lineHeight: '1.86',\n    padding: '0.125rem 0.5rem',\n    border: `solid 1px ${defaultStyles.color7}`,\n    boxSizing: 'border-box',\n    minHeight: '2rem',\n    height: '5rem',\n};\n\nexport default {\n    textArea,\n    textAreaReadOnly: {\n        ...textArea,\n        backgroundColor: defaultStyles.color11,\n        border: `solid 1px ${defaultStyles.color11}`,\n        padding: '0.125rem 0',\n    },\n    textAreaError: {\n        ...textArea,\n        border: `solid 1px${defaultStyles.color5}`,\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './DateAndTimeStyles';\nimport { autoComplete, parse, stateSymbols as S } from './utils';\nimport Suggestions from './Suggestions';\n\nclass DateAndTime extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n\n        this.state = {\n            activeSuggestionIx: 0,\n            backspace: false,\n            draftValue: props.value,\n            error: undefined,\n            hasFocus: false,\n            suggestions: ['00:00:00', '23:59:59'],\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { value, isLoading } = props;\n        const { hasFocus, draftValue } = state;\n        if (!hasFocus && !isLoading && value !== draftValue) {\n            return { draftValue: value };\n        }\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { editable: nextEditable, isLoading: nextIsLoading } = nextProps;\n        const { error: nextError, value: nextValue } = nextState;\n        const { error, draftValue } = this.state;\n        const { editable, isLoading } = this.props;\n\n        if (nextEditable !== editable) return true;\n        if (nextIsLoading !== isLoading) return true;\n        if (nextError !== error) return true;\n        if (nextValue !== draftValue) return true;\n        return false;\n    }\n\n    handleSetValue() {\n        const { onSetValue, value } = this.props;\n        const { draftValue } = this.state;\n\n        if (draftValue !== value) {\n            onSetValue(draftValue);\n        }\n    }\n\n    onBlur() {\n        this.setState({ showSuggestions: false, hasFocus: false });\n        this.handleSetValue();\n    }\n\n    onChange(e) {\n        const { backspace } = this.state;\n        let value = e.target.value;\n        let parsed = parse(value);\n        let showSuggestions = false;\n        let error;\n\n        if (parsed && parsed.duplicateSeparator) return;\n\n        if (!backspace && parsed && parsed.separator && !value.endsWith(parsed.separator)) {\n            value = `${value}${parsed.separator}`;\n            parsed = parse(value);\n        }\n\n        if (parsed && parsed.state && parsed.state === S.DAY_HOUR_SEP) {\n            showSuggestions = true;\n        }\n\n        if (parsed && parsed.error) {\n            error = parsed.error;\n        }\n\n        this.setState({\n            error,\n            showSuggestions,\n            draftValue: value,\n        });\n    }\n\n    onFocus() {\n        this.setState({ hasFocus: true });\n    }\n\n    // eslint-disable-next-line sonarjs/cognitive-complexity\n    onKeyDown(e) {\n        const { value } = this.props;\n        const { activeSuggestionIx, draftValue, showSuggestions, suggestions } = this.state;\n\n        e.persist();\n        if (e.key === 'Enter' || e.key === 'Tab') {\n            if (showSuggestions) {\n                this.setState({\n                    showSuggestions: false,\n                    activeSuggestionIx: 0,\n                    draftValue: `${draftValue}${suggestions[activeSuggestionIx]}`,\n                });\n            } else {\n                this.setState({ draftValue: autoComplete(draftValue) });\n            }\n        }\n\n        if (e.key === 'Escape') {\n            this.setState({\n                showSuggestions: false,\n                activeSuggestionIx: 0,\n                draftValue: value,\n            }, () => e.target.blur());\n        }\n\n        if (e.key === 'Backspace') {\n            this.setState({ backspace: true });\n        } else {\n            this.setState({ backspace: false });\n        }\n\n        if (e.key === 'ArrowUp' && showSuggestions) {\n            if (activeSuggestionIx === 0) return;\n            this.setState({ activeSuggestionIx: activeSuggestionIx - 1 });\n        }\n\n        if (e.key === 'ArrowDown' && showSuggestions) {\n            if (activeSuggestionIx - 1 >= suggestions.length) return;\n            this.setState({ activeSuggestionIx: activeSuggestionIx + 1 });\n        }\n    }\n\n    getInputStyle() {\n        const { editable } = this.props;\n        const { error } = this.state;\n\n        if (!editable) {\n            return style.inputFieldReadOnly;\n        }\n        if (error) return style.error;\n        return style.input;\n    }\n\n    render() {\n        const {\n            autoFocus,\n            editable,\n            name,\n        } = this.props;\n\n        const {\n            activeSuggestionIx,\n            draftValue,\n            showSuggestions,\n            suggestions,\n        } = this.state;\n\n        const inputStyle = this.getInputStyle();\n\n        return (\n            <div style={style.relative}>\n                <div\n                    style={editable ? style.wrapper : style.wrapperReadOnly}\n                    data-handle={`date-and-time-${name}`}\n                >\n                    <input\n                        autoFocus={autoFocus}\n                        onBlur={this.onBlur}\n                        onChange={this.onChange}\n                        onFocus={this.onFocus}\n                        onKeyDown={this.onKeyDown}\n                        placeholder=\"yyyy-mm-ddThh:mm:ss\"\n                        readOnly={!editable}\n                        style={inputStyle}\n                        type=\"text\"\n                        value={draftValue}\n                    />\n                </div>\n                <Suggestions\n                    showSuggestions={showSuggestions}\n                    draftValue={draftValue}\n                    suggestions={suggestions}\n                    activeSuggestionIx={activeSuggestionIx}\n                />\n            </div>\n        );\n    }\n}\n\nDateAndTime.propTypes = {\n    autoFocus: PropTypes.bool,\n    editable: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onSetValue: PropTypes.func,\n};\n\nDateAndTime.defaultProps = {\n    value: '',\n};\n\nexport default DateAndTime;\n","import * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\n\nconst input = {\n    backgroundColor: defaultStyles.color3,\n    color: defaultStyles.textColor5,\n    fontSize: defaultStyles.medium2,\n    width: '100%',\n    lineHeight: '1.86',\n    padding: '0.125rem 0.5rem',\n    border: 'none',\n    boxSizing: 'border-box',\n};\nconst suggestion = {\n    padding: '0.175rem 0.5rem',\n    cursor: 'pointer',\n    overflow: 'hidden',\n    wordWrap: 'break-word',\n    whiteSpace: 'normal',\n    lineHeight: '0.9rem',\n    textIndent: '-0.3rem',\n};\n\nexport default {\n    error: {\n        ...input,\n        padding: '0.1rem 0.475rem',\n        border: '0.025rem solid red',\n    },\n    relative: {\n    },\n    wrapper: {\n        display: 'flex',\n        border: '1px solid rgb(232, 235, 241)',\n    },\n    wrapperReadOnly: {\n        display: 'flex',\n        border: '0px',\n    },\n    input,\n    suggestion,\n    suggestionActive: {\n        ...suggestion,\n        backgroundColor: defaultStyles.color11,\n    },\n    inputFieldReadOnly: {\n        ...input,\n        backgroundColor: defaultStyles.color11,\n        padding: '0.125rem 0',\n    },\n    listbox: {\n        border: '1px solid #ccc',\n        backgroundColor: defaultStyles.backgroundColor1,\n        position: 'absolute',\n        width: '90%',\n        zIndex: 1,\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './DateAndTimeStyles';\n\nconst Suggestions = ({\n    showSuggestions,\n    draftValue,\n    suggestions,\n    activeSuggestionIx,\n}) => {\n    if (showSuggestions !== true) return null;\n    if (suggestions === undefined) return null;\n\n    const items = suggestions.map((s, ix) => {\n        if (ix === activeSuggestionIx) {\n            return (\n                <li\n                    data-handle=\"active-suggestion\"\n                    key={ix}\n                    style={style.suggestionActive}\n                >\n                    {`${draftValue}${s}`}\n                </li>\n            );\n        }\n        return <li key={ix} style={style.suggestion}>{`${draftValue}${s}`}</li>;\n    });\n\n    return (\n        <ul style={style.listbox}>{ items }</ul>\n    );\n};\n\nSuggestions.propTypes = {\n    showSuggestions: PropTypes.bool,\n    draftValue: PropTypes.string,\n    suggestions: PropTypes.arrayOf(PropTypes.string),\n    activeSuggestionIx: PropTypes.number,\n};\n\nexport default Suggestions;\n","import createFsm from '@webui-one/core/fsm';\n\nconst START = Symbol('START');\nconst YEAR_1D = Symbol('YEAR_1D');\nconst YEAR_2D = Symbol('YEAR_2D');\nconst YEAR_3D = Symbol('YEAR_3D');\nconst YEAR_4D = Symbol('YEAR_4D');\nconst YEAR_MONTH_SEP = Symbol('YEAR_MONTH_SEP');\nconst MONTH_1D = Symbol('MONTH_1D');\nconst MONTH_2D = Symbol('MONTH_2D');\nconst MONTH_DAY_SEP = Symbol('MONTH_DAY_SEP');\nconst DAY_1D = Symbol('DAY_1D');\nconst DAY_2D = Symbol('DAY_2D');\nconst DAY_HOUR_SEP = Symbol('DAY_HOUR_SEP');\nconst HOUR_1D = Symbol('HOUR_1D');\nconst HOUR_2D = Symbol('HOUR_2D');\nconst HOUR_MIN_SEP = Symbol('HOUR_MIN_SEP');\nconst MIN_1D = Symbol('MIN_1D');\nconst MIN_2D = Symbol('MIN_2D');\nconst ERROR = Symbol('ERROR');\nconst MIN_SEC_SEP = Symbol('MIN_SEC_SEP');\nconst SEC_1D = Symbol('SEC_1D');\nconst SEC_2D = Symbol('SEC_2D');\nconst ZERO_TZ = Symbol('ZERO_TZ');\nconst PLUS_TZ_SEP = Symbol('PLUS_TZ_SEP');\nconst MINUS_TZ_SEP = Symbol('MINUS_TZ_SEP');\nconst TZ_HOUR_1D = Symbol('TZ_HOUR_1D');\nconst TZ_HOUR_2D = Symbol('TZ_HOUR_2D');\nconst TZ_HOUR_MIN_SEP = Symbol('TZ_HOUR_MIN_SEP');\nconst TZ_MIN_1D = Symbol('TZ_MIN_1D');\nconst TZ_MIN_2D = Symbol('TZ_MIN_2D');\n\nexport const stateSymbols = {\n    START,\n    YEAR_1D,\n    YEAR_2D,\n    YEAR_3D,\n    YEAR_4D,\n    YEAR_MONTH_SEP,\n    MONTH_1D,\n    MONTH_2D,\n    MONTH_DAY_SEP,\n    DAY_1D,\n    DAY_2D,\n    DAY_HOUR_SEP,\n    HOUR_1D,\n    HOUR_2D,\n    HOUR_MIN_SEP,\n    MIN_1D,\n    MIN_2D,\n    ERROR,\n    MIN_SEC_SEP,\n    SEC_1D,\n    SEC_2D,\n    ZERO_TZ,\n    PLUS_TZ_SEP,\n    MINUS_TZ_SEP,\n    TZ_HOUR_1D,\n    TZ_HOUR_2D,\n    TZ_HOUR_MIN_SEP,\n    TZ_MIN_1D,\n    TZ_MIN_2D,\n};\n\nconst getSeparatorChar = (state) => {\n    switch (state) {\n    case YEAR_4D:\n    case MONTH_2D:\n        return '-';\n    case DAY_2D:\n        return 'T';\n    case HOUR_2D:\n    case MIN_2D:\n        return ':';\n    default:\n        return undefined;\n    }\n};\n\nconst createState = (next, value) => {\n    if (next === ERROR) {\n        return { next, value: { value, error: true } };\n    }\n    return { next, value: { ...value, state: next, separator: getSeparatorChar(next) } };\n};\n\nconst isDigit = v => /^\\d$/.test(v);\nconst isZero = v => v === '0';\nconst isOne = v => v === '1';\nconst isTwo = v => v === '2';\nconst isThree = v => v === '3';\nconst isDash = v => v === '-';\nconst isColon = v => v === ':';\nconst isT = v => v === 'T';\nconst isZ = v => v === 'Z';\nconst isPlus = v => v === '+';\nconst isMinus = v => v === '-';\n\nconst testChar = (re, v) => new RegExp(`^${re}$`).test(v);\n\nconst createDateFsmDefinition = () => ({\n    [START]: (value) => {\n        if (isDigit(value)) return createState(YEAR_1D, { value });\n        return createState(ERROR, value);\n    },\n    [YEAR_1D]: (value) => {\n        if (isDigit(value)) return createState(YEAR_2D, { value });\n        return createState(ERROR, value);\n    },\n    [YEAR_2D]: (value) => {\n        if (isDigit(value)) return createState(YEAR_3D, { value });\n        return createState(ERROR, value);\n    },\n    [YEAR_3D]: (value) => {\n        if (isDigit(value)) return createState(YEAR_4D, { value });\n        return createState(ERROR, value);\n    },\n    [YEAR_4D]: (value) => {\n        if (isDash(value)) return createState(YEAR_MONTH_SEP, { value });\n        return createState(ERROR, value);\n    },\n    [YEAR_MONTH_SEP]: (value) => {\n        if (isDash(value)) {\n            return createState(YEAR_MONTH_SEP, { value, duplicateSeparator: true });\n        }\n\n        if (testChar('[01]', value)) return createState(MONTH_1D, { value });\n        return createState(ERROR, value);\n    },\n    [MONTH_1D]: (value, { previousResult }) => {\n        const previousValue = previousResult.value.value;\n\n        if (isZero(previousValue) && isZero(value)) return createState(ERROR, value);\n        if (isOne(previousValue) && !testChar('[012]', value)) {\n            return createState(ERROR, value);\n        }\n\n        if (isDigit(value)) {\n            return createState(MONTH_2D, { value });\n        }\n        return createState(ERROR, value);\n    },\n    [MONTH_2D]: (value) => {\n        if (isDash(value)) return createState(MONTH_DAY_SEP, { value });\n        return createState(ERROR, value);\n    },\n    [MONTH_DAY_SEP]: (value) => {\n        if (isDash(value)) {\n            return createState(MONTH_DAY_SEP, { value, duplicateSeparator: true });\n        }\n        if (testChar('[0123]', value)) return createState(DAY_1D, { value });\n        return createState(ERROR, value);\n    },\n    [DAY_1D]: (value, { previousResult }) => {\n        const previousValue = previousResult.value.value;\n        if (isZero(previousValue) && isZero(value)) return createState(ERROR, value);\n        if (isThree(previousValue) && !testChar('[01]', value)) {\n            return createState(ERROR, value);\n        }\n        if (isDigit(value)) return createState(DAY_2D, { value });\n        return createState(ERROR, value);\n    },\n    [DAY_2D]: (value) => {\n        if (isT(value)) return createState(DAY_HOUR_SEP, { value });\n        return createState(ERROR, value);\n    },\n    [DAY_HOUR_SEP]: (value) => {\n        if (isT(value)) {\n            return createState(DAY_HOUR_SEP, { value, duplicateSeparator: true });\n        }\n        if (testChar('[012]', value)) return createState(HOUR_1D, { value });\n        return createState(ERROR, value);\n    },\n    [HOUR_1D]: (value, { previousResult }) => {\n        const previousValue = previousResult.value.value;\n        if (isTwo(previousValue) && !testChar('[0123]', value)) {\n            return createState(ERROR, value);\n        }\n        if (isDigit(value)) return createState(HOUR_2D, { value });\n        return createState(ERROR, value);\n    },\n    [HOUR_2D]: (value) => {\n        if (isColon(value)) return createState(HOUR_MIN_SEP, { value });\n        return createState(ERROR, value);\n    },\n    [HOUR_MIN_SEP]: (value) => {\n        if (isColon(value)) {\n            return createState(HOUR_MIN_SEP, { value, duplicateSeparator: true });\n        }\n        if (testChar('[012345]', value)) return createState(MIN_1D, { value });\n        return createState(ERROR, value);\n    },\n    [MIN_1D]: (value) => {\n        if (isDigit(value)) return createState(MIN_2D, { value });\n        return createState(ERROR, value);\n    },\n    [MIN_2D]: (value) => {\n        if (isColon(value)) return createState(MIN_SEC_SEP, { value });\n        return createState(ERROR, value);\n    },\n    [MIN_SEC_SEP]: (value) => {\n        if (isColon(value)) {\n            return createState(MIN_SEC_SEP, { value, duplicateSeparator: true });\n        }\n        if (testChar('[012345]', value)) return createState(SEC_1D, { value });\n        return createState(ERROR, value);\n    },\n    [SEC_1D]: (value) => {\n        if (isDigit(value)) return createState(SEC_2D, { value });\n        return createState(ERROR, value);\n    },\n    [SEC_2D]: (value) => {\n        if (isZ(value)) return createState(ZERO_TZ, { value });\n        if (isPlus(value)) return createState(PLUS_TZ_SEP, { value });\n        if (isMinus(value)) return createState(MINUS_TZ_SEP, { value });\n        return createState(ERROR, value);\n    },\n    [ZERO_TZ]: value => createState(ERROR, value),\n    [PLUS_TZ_SEP]: (value) => {\n        if (testChar('[01]', value)) return createState(TZ_HOUR_1D, { value });\n        return createState(ERROR, value);\n    },\n    [MINUS_TZ_SEP]: (value) => {\n        if (testChar('[01]', value)) return createState(TZ_HOUR_1D, { value });\n        return createState(ERROR, value);\n    },\n    [TZ_HOUR_1D]: (value, { previousResult }) => {\n        const previousValue = previousResult.value.value;\n        if (isOne(previousValue) && !testChar('[01234]', value)) {\n            return createState(ERROR, value);\n        }\n        if (isDigit(value)) return createState(TZ_HOUR_2D, { value });\n        return createState(ERROR, value);\n    },\n    [TZ_HOUR_2D]: (value) => {\n        if (isColon(value)) return createState(TZ_HOUR_MIN_SEP, { value });\n        if (testChar('[012345]', value)) return createState(TZ_MIN_1D, { value });\n        return createState(ERROR, value);\n    },\n    [TZ_HOUR_MIN_SEP]: (value) => {\n        if (testChar('[012345]', value)) return createState(TZ_MIN_1D, { value });\n        return createState(ERROR, value);\n    },\n    [TZ_MIN_1D]: (value) => {\n        if (isDigit(value)) return createState(TZ_MIN_2D, { value });\n        return createState(ERROR, value);\n    },\n    [TZ_MIN_2D]: value => createState(ERROR, value),\n    [ERROR]: () => ({ next: ERROR }),\n});\n\nexport const createDateFsm = () => {\n    const definition = createDateFsmDefinition();\n    return createFsm(START, definition);\n};\n\nexport const parse = (dateTimeString) => {\n    const fsm = createDateFsm();\n    return [...dateTimeString].reduce((acc, cur) => {\n        if (acc && acc.error) return acc;\n\n        const result = fsm.next(cur);\n        const currentValue = result.value.value;\n        const parsedValue = acc.parsedValue ? `${acc.parsedValue}${currentValue}` : `${currentValue}`;\n        return {\n            ...result.value,\n            parsedValue,\n        };\n    }, {});\n};\n\nexport const autoComplete = (value) => {\n    const parsed = parse(value);\n    if (parsed.state === YEAR_MONTH_SEP) {\n        return `${value}01-01T00:00:00`;\n    }\n    if (parsed.state === YEAR_4D) {\n        return `${value}-01-01T00:00:00`;\n    }\n    if (parsed.state === MONTH_DAY_SEP) {\n        return `${value}01T00:00:00`;\n    }\n    if (parsed.state === MONTH_2D) {\n        return `${value}-01T00:00:00`;\n    }\n    if (parsed.state === DAY_2D) {\n        return `${value}T00:00:00`;\n    }\n    if (parsed.state === HOUR_MIN_SEP) {\n        return `${value}00:00`;\n    }\n    if (parsed.state === HOUR_2D) {\n        return `${value}:00:00`;\n    }\n    if (parsed.state === MIN_SEC_SEP) {\n        return `${value}00`;\n    }\n    if (parsed.state === MIN_2D) {\n        return `${value}:00`;\n    }\n    if (parsed.state === MINUS_TZ_SEP || parsed.state === PLUS_TZ_SEP) {\n        return `${value}00:00`;\n    }\n    if (parsed.state === TZ_HOUR_MIN_SEP) {\n        return `${value}00`;\n    }\n    if (parsed.state === TZ_HOUR_2D) {\n        return `${value}:00`;\n    }\n    return value;\n};\n","import React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { queryAndZipResult as _query } from '@webui-one/core/jsonrpc';\nimport ComboBox from '../ConfigRender/ComboBox/ComboBox';\nimport { useFetch } from '../hooks/useFetch';\n\n\nconst style = {\n    error: { border: '2px solid red' },\n};\n\nconst MAX_LIMIT = 10;\n\n\nexport const buildXpath = (path, selection, value) => {\n    const parts = path.split('/');\n    const listName = parts.pop();\n    const values = value.split(' ').filter(v => v);\n\n    const keyContainsValue = v => selection.map(c => `contains(${c}, \"${v}\")`).join(' or ');\n    const predicate = values\n        .map(v => `(${keyContainsValue(v)})`)\n        .join(' and ');\n    return {\n        contextNode: parts.join('/'),\n        xpathExpr: `${listName}[${predicate}]`,\n    };\n};\n\nexport const getOptions = (result, selection) =>\n    result\n        .map(o => selection.map(select => o[select]).map(({ value }) => value).join(' '))\n        .map(value => ({ value, text: value }));\n\nexport const mapOptionsToResult = (options, result) =>\n    options.reduce((acc, { value }, i) => ({\n        ...acc,\n        [value]: result[i],\n    }), {});\n\nexport default function QueryListSelect({\n    onSetValue,\n    path,\n    selection,\n    value: inValue,\n    disabled,\n    funcs: {\n        query = _query,\n    } = {} }) {\n    const [draft, setDraft] = useState('');\n    const [value, setValue] = useState('');\n    const [error, setError] = useState('');\n    const { contextNode, xpathExpr } = draft\n        ? buildXpath(path, selection, draft)\n        : {};\n\n    const asyncFunc = useCallback(async ({ signal }) =>\n        query({\n            chunkSize: MAX_LIMIT,\n            contextNode,\n            path,\n            resultAs: 'keypath-value',\n            selection,\n            signal,\n            xpathExpr,\n        },\n        ), [query, contextNode, path, selection, xpathExpr]);\n\n    useEffect(() => {\n        if (inValue !== undefined && inValue !== draft) {\n            setValue(inValue);\n        }\n    }, [draft, inValue]);\n\n    const state = useFetch({ asyncFunc });\n    const result = useMemo(() => (\n        (state && state.data && state.data.result) || []\n    ), [state]);\n    const options = useMemo(() => getOptions(result, selection), [result, selection]);\n    const valueToKeypath = mapOptionsToResult(options, result);\n    const handleSetValue = (newValue) => {\n        setDraft(newValue);\n        setValue(newValue);\n        if (valueToKeypath[newValue]) {\n            setError('');\n            onSetValue({ value, result: valueToKeypath[newValue] });\n        } else {\n            setError(newValue);\n        }\n    };\n    return (\n        <div style={error ? style.error : {}}>\n            <ComboBox\n                isLoading={state.isLoading}\n                editable={!disabled && (!!options.length || draft !== '')}\n                maxLimit={MAX_LIMIT}\n                name={path}\n                onChange={setDraft}\n                onSetValue={handleSetValue}\n                options={options}\n                value={value}\n                filterOptions={opt => opt}\n            />\n        </div>\n    );\n}\n\nQueryListSelect.propTypes = {\n    disabled: PropTypes.bool,\n    onSetValue: PropTypes.func.isRequired,\n    path: PropTypes.string.isRequired,\n    selection: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.string,\n    funcs: PropTypes.shape({\n        query: PropTypes.func,\n    }),\n};\n","import { useEffect, useState } from 'react';\n\nconst initialState = {\n    isLoading: false,\n    data: null,\n    error: null,\n};\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useFetch = ({\n    asyncFunc,\n}) => {\n    const [state, setState] = useState(initialState);\n\n    useEffect(() => {\n        const controller = new AbortController();\n        const signal = controller.signal;\n        const updateState = (newState) => {\n            setState(prevState => ({ ...prevState, ...newState }));\n        };\n\n        async function fetch() {\n            try {\n                updateState({ isLoading: true });\n                const response = await asyncFunc({ signal });\n\n                if (!signal.aborted) {\n                    updateState({ isLoading: false, data: response });\n                }\n            } catch (error) {\n                if (!signal.aborted) {\n                    updateState({ isLoading: false, error });\n                }\n            }\n        }\n        fetch();\n\n        return () => {\n            controller.abort();\n        };\n    }, [asyncFunc, setState]);\n\n    return state;\n};\n\nexport {\n    initialState as _initialState,\n};\n","const fsm = (initialState, states) => {\n    const machine = { ...states };\n\n    let currentState = initialState;\n    let done = false;\n\n    const process = (result) => {\n        machine.previousState = currentState;\n        currentState = result.next || currentState;\n        done = result.done === true;\n\n        if (done && Object.prototype.hasOwnProperty.call(result, 'value')) {\n            return {\n                value: result.value,\n                done,\n            };\n        }\n        machine.previousResult = { value: result.value };\n\n        return { value: result.value, done };\n    };\n\n    return {\n        next(value) {\n            if (!Object.prototype.hasOwnProperty.call(machine, currentState)) {\n                return {\n                    value: undefined,\n                    done: true,\n                };\n            }\n\n            const result = machine[currentState](value, machine);\n\n            return process(result);\n        },\n    };\n};\n\nexport default fsm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as defaultStyles from '../ApplicationDefaultStyles';\n\nconst AddSymbol = ({ symbolColor, borderColor, bgColor }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 24 24\"\n        xmlSpace=\"preserve\"\n    >\n        <circle stroke={borderColor} fill={bgColor} cx=\"12\" cy=\"12\" r=\"11.5\" />\n        <path\n            fill={symbolColor}\n            d=\"M18.5,13.2h-5.3v5.3h-2.4v-5.3H5.5v-2.4h5.3V5.5h2.3v5.3h5.4V13.2z\"\n        />\n    </svg>\n);\n\nAddSymbol.propTypes = {\n    symbolColor: PropTypes.string,\n    bgColor: PropTypes.string,\n    borderColor: PropTypes.string,\n};\n\nAddSymbol.defaultProps = {\n    symbolColor: defaultStyles.color3,\n    bgColor: defaultStyles.color1,\n    borderColor: defaultStyles.color1,\n};\n\nexport default AddSymbol;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as defaultStyles from '../ApplicationDefaultStyles';\n\nconst RemoveSymbol = ({ symbolColor, borderColor, bgColor }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 24 24\"\n        xmlSpace=\"preserve\"\n    >\n        <circle stroke={borderColor} fill={bgColor} cx=\"12\" cy=\"12\" r=\"11.5\" />\n        <path\n            fill={symbolColor}\n            d=\"M18.5,13.2 v-2.4 h-13.2 v2.4z\"\n        />\n    </svg>\n);\n\nRemoveSymbol.propTypes = {\n    symbolColor: PropTypes.string,\n    bgColor: PropTypes.string,\n    borderColor: PropTypes.string,\n};\n\nRemoveSymbol.defaultProps = {\n    symbolColor: defaultStyles.color3,\n    bgColor: defaultStyles.color1,\n    borderColor: defaultStyles.color1,\n};\n\nexport default RemoveSymbol;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    getLeafrefValuesThunk,\n    hideAction,\n} from 'modules/nodes/actions';\n\nimport { isDeepEqual, omitKeys } from '@webui-one/core/utils/object';\nimport {\n    selectDepNodes,\n    selectDirty,\n    selectNode,\n} from 'modules/nodes/selectors';\nimport { selectConfigForPath } from 'modules/data/selectors';\nimport {\n    createThunk,\n    deleteThunk,\n    existsThunk,\n    getValueThunk,\n    setValueThunk,\n} from 'modules/nodes/thunks';\nimport { selectIsEditMode } from 'ConfigurationEditor/reducer';\nimport WidgetLeaf from '@webui-one/components/ConfigRender/WidgetLeaf';\nimport { Link } from '@webui-one/router';\nimport { getLinkWithPath } from 'ConfigurationEditor/utils';\nimport { isNonEmptyString } from '@webui-one/core/utils/string';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport { debounceFunction } from '@webui-one/core/utils/async';\n\nconst LEAFREF_TRUNCATE_AT = 20;\n\nconst sourceLinkStyle = {\n    color: defaultStyles.color1,\n    textDecoration: 'none',\n    lineHeight: '1.6rem',\n};\n\nconst canValueBeDeleted = (value, newValue) => (\n    value !== undefined || newValue !== undefined\n);\n\nconst isDefaultValueHelper = (value, newValue, defaultValue, isOperdata) => {\n    // ENG-22755 show config return default value for operdata\n    if (isOperdata) return defaultValue !== undefined && value === defaultValue;\n    return (defaultValue !== undefined\n        && value === undefined\n        && newValue === undefined);\n};\n\nexport const createLinkComponent = ({ sourcePath }) => () => (\n    <Link\n        title={sourcePath}\n        to={getLinkWithPath(sourcePath)}\n        style={sourceLinkStyle}\n    >\n        Source\n    </Link>\n);\n\nconst shouldRefreshValues = (\n    currentDepsNodes,\n    newDepsNodes,\n    isLoading,\n    loadingDepsNodes,\n) =>\n    !isLoading\n    && !loadingDepsNodes\n    && !isDeepEqual(\n        newDepsNodes.map(n => omitKeys(n, ['isLoading'])),\n        currentDepsNodes.map(n => omitKeys(n, ['isLoading'])),\n    );\n\nclass LeafContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { leafDepsNodes } = this.props;\n        this.state = {\n            leafDepsNodes,\n        };\n    }\n\n    componentDidMount() {\n        const { isLeafref } = this.props;\n\n        if (isLeafref) return this.componentWillMountLeafref();\n\n        return undefined;\n    }\n\n    componentDidUpdate() {\n        const {\n            isLeafref,\n            isLoading,\n            leafDepsNodes,\n            loadingDepsNodes,\n            onGetLeafrefValues,\n        } = this.props;\n        const { leafDepsNodes: cachedLeafDepsNodes } = this.state;\n        if (isLeafref) {\n            const shouldRefresh = shouldRefreshValues(\n                cachedLeafDepsNodes,\n                leafDepsNodes,\n                isLoading,\n                loadingDepsNodes,\n            );\n            if (shouldRefresh) {\n                // eslint-disable-next-line react/no-did-update-set-state\n                this.setState({ leafDepsNodes });\n                onGetLeafrefValues();\n            }\n        }\n    }\n\n    getLeaf() {\n        const {\n            children,\n            defaultValue,\n            newValue,\n            value,\n            onSetValue,\n            options,\n            isOperdata,\n            isEnum,\n        } = this.props;\n        const isDefaultValue = isDefaultValueHelper(value, newValue, defaultValue, isOperdata);\n        const nodeValue = newValue === undefined ? value : newValue;\n        let leafValue = isDefaultValue ? defaultValue : nodeValue;\n\n        if (isEnum && leafValue && options.indexOf(leafValue) === -1) {\n            const option = options.find(o => leafValue.endsWith(o));\n            if (option) {\n                leafValue = option;\n            }\n        }\n        return React.cloneElement(\n            children,\n            {\n                value: leafValue,\n                onSetValue,\n                isDefaultValue,\n                defaultValue,\n            },\n        );\n    }\n\n    getEmptyLeaf() {\n        const { children, exists, onCreate } = this.props;\n        return React.cloneElement(children, { exists, onCreate });\n    }\n\n    getLeafref() {\n        const {\n            children,\n            defaultValue,\n            newValue,\n            value,\n            values,\n            onChange,\n            onSetValue,\n            deps,\n            sourcePath,\n            isOperdata,\n        } = this.props;\n\n        let linkComponent;\n        if (isNonEmptyString(sourcePath)) {\n            linkComponent = createLinkComponent({ sourcePath });\n        }\n\n        const isDefaultValue = isDefaultValueHelper(value, newValue, defaultValue, isOperdata);\n        const nodeValue = newValue === undefined ? value : newValue;\n        const leafValue = isDefaultValue ? defaultValue : nodeValue;\n\n        const childProps = {\n            value: leafValue,\n            isDefaultValue,\n            options: values.map(v => ({ value: v })),\n            maxLimit: LEAFREF_TRUNCATE_AT,\n            onChange,\n            onSetValue,\n            deps,\n            LinkComponent: linkComponent,\n        };\n        return React.cloneElement(children, childProps);\n    }\n\n    componentWillMountLeafref() {\n        const { onGetLeafrefValues } = this.props;\n        onGetLeafrefValues();\n    }\n\n    render() {\n        const {\n            deletable,\n            editable,\n            error,\n            exists,\n            path,\n            isDirty,\n            isEditMode,\n            isEmptyLeaf,\n            isHidden,\n            isLeafref,\n            isLoading,\n            isMandatory,\n            isOperdata,\n            name,\n            newValue,\n            onDelete,\n            onHide,\n            value,\n        } = this.props;\n        let child;\n        if (isEmptyLeaf) {\n            child = this.getEmptyLeaf();\n        } else if (isLeafref) {\n            child = this.getLeafref();\n        } else {\n            child = this.getLeaf();\n        }\n\n        const canBeDeleted = !isMandatory && deletable && editable &&\n            (isEmptyLeaf ? exists : canValueBeDeleted(value, newValue));\n\n        return (\n            <WidgetLeaf\n                error={error}\n                canBeDeleted={canBeDeleted}\n                path={path}\n                isDirty={isDirty}\n                isEditMode={isEditMode}\n                isHidden={isHidden}\n                isLoading={isLoading}\n                isMandatory={isMandatory}\n                isOperdata={isOperdata}\n                isEmptyLeaf={isEmptyLeaf}\n                exists={exists}\n                name={name}\n                onHide={onHide}\n                onDelete={onDelete}\n            >\n                { child }\n            </WidgetLeaf>\n        );\n    }\n}\n\n// REVIEW: Props that only is used in mapStateToProps,\n// should we defined them in PropTypes?\nLeafContainer.propTypes = {\n    children: PropTypes.shape({}),\n    deletable: PropTypes.bool,\n    editable: PropTypes.bool,\n    error: PropTypes.shape({}),\n    exists: PropTypes.bool,\n    deps: PropTypes.arrayOf(PropTypes.string),\n    isEmptyLeaf: PropTypes.bool,\n    isDirty: PropTypes.bool,\n    isEnum: PropTypes.bool,\n    isEditMode: PropTypes.bool,\n    isHidden: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isLeafref: PropTypes.bool,\n    isMandatory: PropTypes.bool,\n    isOperdata: PropTypes.bool,\n    leafDepsNodes: PropTypes.arrayOf(PropTypes.object),\n    loadingDepsNodes: PropTypes.bool,\n    name: PropTypes.string.isRequired,\n    newValue: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.bool,\n    ]),\n    path: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.bool,\n    ]),\n    defaultValue: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.bool,\n    ]),\n    sourcePath: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n    ]),\n    values: PropTypes.arrayOf(PropTypes.string),\n    onChange: PropTypes.func,\n    onCreate: PropTypes.func,\n    onDelete: PropTypes.func,\n    onHide: PropTypes.func.isRequired,\n    onGetLeafrefValues: PropTypes.func,\n    onSetValue: PropTypes.func,\n    options: PropTypes.arrayOf(PropTypes.string),\n};\n\nLeafContainer.defaultProps = {\n    info: [],\n    values: [],\n};\n\nconst leafPropsFromNode = (config, node = {}, isDirty = undefined) => {\n    const { error, isHidden, isLoading } = node;\n    const { newValue, value } = config;\n\n    return {\n        error,\n        isDirty,\n        isHidden,\n        isLoading,\n        newValue,\n        value,\n    };\n};\n\nconst emptyLeafPropsFromNode = (config, node, isDirty) => {\n    const { exists } = config;\n\n    return {\n        ...leafPropsFromNode(config, node, isDirty),\n        exists,\n    };\n};\n\nconst leafrefPropsFromNode = (config, node = {}, isDirty = undefined) => {\n    const { reloadValues, values, sourcePath } = node;\n\n    return {\n        ...leafPropsFromNode(config, node, isDirty),\n        reloadValues,\n        values,\n        sourcePath,\n    };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const { deps, dependants, isEmptyLeaf, isLeafref, path } = ownProps;\n    const config = selectConfigForPath(state, path) || {};\n    const node = selectNode(state, path);\n    const isDirty = selectDirty(state, path);\n    const isEditMode = selectIsEditMode(state);\n    if (isEmptyLeaf) {\n        return {\n            ...emptyLeafPropsFromNode(config, node, isDirty),\n            isEditMode,\n            dependants,\n        };\n    }\n\n    if (isLeafref) {\n        const leafDepsNodes = selectDepNodes(state, path, deps);\n        const loadingDepsNodes = leafDepsNodes.some(n => n && n.isLoading === true);\n        return {\n            ...leafrefPropsFromNode(config, node, isDirty),\n            loadingDepsNodes,\n            isEditMode,\n            leafDepsNodes,\n            dependants,\n        };\n    }\n\n    return {\n        ...leafPropsFromNode(config, node, isDirty),\n        isEditMode,\n        dependants,\n    };\n};\n\nconst mapDispatchToPropsEmptyLeaf = (dispatch, ownProps) => {\n    const { caseAncestors, dependants, exists, path } = ownProps;\n\n    return {\n        onCreate() {\n            dispatch(createThunk({ caseAncestors, dependants, path }));\n        },\n        onDelete() {\n            return dispatch(deleteThunk({ caseAncestors, dependants, path }));\n        },\n        onExists() {\n            dispatch(existsThunk({ caseAncestors, dependants, exists, path }));\n        },\n        onHide(value) {\n            dispatch(hideAction(ownProps.path, value));\n        },\n        dispatch,\n    };\n};\n\nconst mapDispatchToPropsLeaf = (dispatch, ownProps) => {\n    const {\n        caseAncestors,\n        dependants,\n        path,\n        isConfigFalseCallpoint,\n    } = ownProps;\n\n    return {\n        onDelete() {\n            return dispatch(deleteThunk({ caseAncestors, dependants, path }));\n        },\n        onSetValue(value) {\n            return dispatch(setValueThunk({\n                caseAncestors,\n                dependants,\n                path,\n                value,\n            }));\n        },\n        onGetValue() {\n            dispatch(getValueThunk({ path, isConfigFalseCallpoint }));\n        },\n        onHide(value) {\n            dispatch(hideAction(ownProps.path, value));\n        },\n        dispatch,\n    };\n};\nconst mapDispatchToPropsLeafref = (dispatch, ownProps) => {\n    const call = debounceFunction({\n        milliseconds: 300,\n        waitWhileSpammed: true,\n    });\n    return ({\n        ...mapDispatchToPropsLeaf(dispatch, ownProps),\n        onGetLeafrefValues() {\n            dispatch(getLeafrefValuesThunk({\n                path: ownProps.path,\n                startsWith: '',\n                limit: LEAFREF_TRUNCATE_AT + 1,\n            }));\n        },\n        onChange(value) {\n            call(() =>\n                dispatch(getLeafrefValuesThunk({\n                    path: ownProps.path,\n                    startsWith: value,\n                    limit: LEAFREF_TRUNCATE_AT + 1,\n                })),\n            );\n        },\n    });\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    if (ownProps.isEmptyLeaf) {\n        return mapDispatchToPropsEmptyLeaf(dispatch, ownProps);\n    }\n\n    if (ownProps.isLeafref) {\n        return mapDispatchToPropsLeafref(dispatch, ownProps);\n    }\n\n    return mapDispatchToPropsLeaf(dispatch, ownProps);\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(LeafContainer);\n\nexport {\n    LeafContainer as _LeafContainer,\n    isDefaultValueHelper as _isDefaultValueHelper,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    canValueBeDeleted as _canValueBeDeleted,\n};\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport * as S from '@webui-one/core/schema';\nimport ComboBox from '@webui-one/components/ConfigRender/ComboBox/ComboBox';\nimport DateAndTime from '@webui-one/components/DateTime/DateAndTime';\nimport Input from '@webui-one/components/ConfigRender/Input/Input';\nimport MultiSelect from '@webui-one/components/ConfigRender/Select/MultiSelect';\nimport ReadOnly from '@webui-one/components/ConfigRender/ReadOnly/ReadOnly';\nimport Select from '@webui-one/components/ConfigRender/Select/Select';\nimport TextArea from '@webui-one/components/ConfigRender/TextArea/TextArea';\nimport {\n    getWidgetKind,\n    getWidgetType,\n} from 'modules/schemas/reducer';\nimport * as widgetKinds from '@webui-one/core/schema/widgetKinds';\nimport * as widgetTypes from '@webui-one/core/schema/widgetTypes';\nimport NotSupported from '@webui-one/components/ConfigRender/NotSupported';\n\nconst isMultiline = schema => (\n    S.isCliMultilinePrompt(schema) || S.isCliPreformatted(schema)\n);\n\nconst isReadOnly = (schema, isCreate) => {\n    const widgetKind = schema.widgetKind || getWidgetKind(schema);\n    return (widgetKind === widgetKinds.KIND_KEY && !isCreate)\n        || S.isOper(schema)\n        || !S.canUpdate(schema);\n};\n\nexport const getLeafWidget = (keypath, schema, isCreate, disabled) => {\n    if (isReadOnly(schema, isCreate) || disabled) {\n        return <ReadOnly />;\n    }\n\n    const suppressEcho = S.suppressEcho(schema);\n    const widgetType = schema.widgetType || getWidgetType(schema);\n    switch (widgetType) {\n    case widgetTypes.LEAF_BINARY:\n        return (\n            <TextArea\n                editable\n                key={keypath}\n            />\n        );\n    case widgetTypes.LEAF_BITS:\n        return <MultiSelect key={keypath} editable options={S.bits(schema)} />;\n    case widgetTypes.LEAF_BOOLEAN:\n        return (\n            <Select\n                key={keypath}\n                editable\n                options={['true', 'false']}\n            />\n        );\n    case widgetTypes.LEAF_DATE_AND_TIME: {\n        return (\n            <DateAndTime\n                key={keypath}\n                editable\n            />\n        );\n    }\n    case widgetTypes.LEAF_ENUMERATION:\n        return (\n            <Select\n                key={keypath}\n                editable\n                options={S.enumerationOptions(schema).map(e => e.label)}\n                optionsInfo={S.enumerationOptions(schema).map(e => e.info)}\n            />\n        );\n    case widgetTypes.LEAF_NOT_SUPPORTED:\n    case widgetTypes.LEAF_NUMBER:\n    case widgetTypes.LEAF_STRING:\n        if (isMultiline(schema)) {\n            return (\n                <TextArea\n                    key={keypath}\n                    editable\n                    suppressEcho={suppressEcho}\n                />\n            );\n        }\n        return (\n            <Input\n                key={keypath}\n                editable\n                suppressEcho={suppressEcho}\n            />\n        );\n    case widgetTypes.LEAF_RANGE: {\n        const placeholder = `Valid range: ${S.rangeAsText(schema)}`;\n        if (isMultiline(schema)) {\n            return (\n                <TextArea\n                    key={keypath}\n                    editable\n                    placeholder={placeholder}\n                    suppressEcho={suppressEcho}\n                />\n            );\n        }\n        return (\n            <Input\n                key={keypath}\n                editable\n                placeholder={placeholder}\n                suppressEcho={suppressEcho}\n            />\n        );\n    }\n    case widgetTypes.LEAF_UNION: {\n        const options = S.unionOptions(schema).map(o => ({ value: o.label, text: o.info }));\n        const name = S.name(schema);\n        return (\n            <ComboBox\n                key={keypath}\n                name={name}\n                editable\n                options={options}\n                type={widgetTypes.LEAF_UNION}\n            />\n        );\n    }\n    default:\n        return (\n            <NotSupported\n                key={keypath}\n                kind={S.kind(schema)}\n            />\n        );\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModalConfirm from '@webui-one/components/Modal/ModalConfirm';\nimport {\n    error as errorStyle,\n} from '@webui-one/components/Modal/ModalConfirmStyles';\nimport GetSchemaContainer from 'Common/Containers/GetSchemaContainer';\nimport SchemaInputContainer from './SchemaInputContainer';\nimport {\n    getDataFromValueItems,\n} from '@webui-one/core/utils/list';\nimport {\n    pathWithoutKeys,\n} from '@webui-one/core/keypath/kp-parser';\nimport * as defaultStyles from '@webui-one/styles/ApplicationDefaultStyles';\nimport Loader from '@webui-one/components/Loading/Loader';\n\nconst isValidModal = (paths, isValid) =>\n    paths.every(path => isValid[path]);\n\nconst isActive = (i, paths, isValid) =>\n    i === 0 || paths.slice(0, i).every(p => isValid[p]);\n\n// eslint-disable-next-line react/no-multi-comp\nclass ModalSchemaInputContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleModalConfirm = this.handleModalConfirm.bind(this);\n        this.handleSetValue = this.handleSetValue.bind(this);\n        this.handleLoad = this.handleLoad.bind(this);\n\n        this.state = {\n            values: {},\n            keypaths: [],\n            isValid: {},\n            keypath: '',\n        };\n        this.hasLoaded = false;\n    }\n\n    handleLoad({ path, hasInput }) {\n        const currentRootPath = this.getCurrentRootPath(path);\n        this.setState(prevState => ({\n            ...prevState,\n            isValid: {\n                ...prevState.isValid,\n                [currentRootPath]: !hasInput,\n            },\n            keypath: (!hasInput && prevState.keypath.length < path.length)\n                ? path\n                : prevState.keypath,\n        }));\n    }\n\n    handleModalConfirm() {\n        const { onConfirm, paths } = this.props;\n        const { values, keypath } = this.state;\n        const items = values[[...paths].pop()] || [];\n        const data = getDataFromValueItems(items);\n        const createPath = keypath || [...paths].pop();\n        return onConfirm(createPath, data);\n    }\n\n    handleSetValue(keypath, items, isValid) {\n        const { paths } = this.props;\n        const currentRootPath = this.getCurrentRootPath(keypath);\n        this.setState(prevState => ({\n            ...prevState,\n            values: {\n                ...prevState.values,\n                [currentRootPath]: items,\n            },\n            keypaths: paths.map((path, i) => (\n                currentRootPath.length < path.length\n                    ? path.replace(currentRootPath, keypath)\n                    : (prevState.keypaths[i] || paths[i])\n            )),\n            // this is the keypath that will be created\n            // this assumes that the last set form will make the modal valid\n            keypath,\n            isValid: {\n                ...paths.slice(paths.indexOf(currentRootPath) + 1)\n                    .reduce((acc, path) => ({\n                        ...acc,\n                        [path]: false,\n                    }), prevState.isValid),\n                [currentRootPath]: isValid,\n            },\n        }));\n    }\n\n    getCurrentRootPath(path) {\n        const { paths } = this.props;\n        const currentSchemaPath = pathWithoutKeys(path);\n        return currentSchemaPath.replace(\n            pathWithoutKeys(paths[0]),\n            paths[0],\n        );\n    }\n\n    render() {\n        const {\n            title,\n            closeOnConfirm,\n            onClose,\n            paths,\n            error,\n            isLoading,\n        } = this.props;\n        const { keypaths, isValid } = this.state;\n        const lastIndex = paths.length - 1;\n        return (\n            <ModalConfirm\n                title={title}\n                shouldRender\n                onRequestClose={onClose}\n                onConfirm={this.handleModalConfirm}\n                closeOnConfirm={closeOnConfirm}\n                formIsValid={isValidModal(paths, isValid)}\n                data-handle=\"modal-title\"\n                preventAutofocus\n            >\n                {paths.map((path, i) => {\n                    const currentPath = keypaths[i] || path;\n                    const currentIsActive = isActive(i, paths, isValid);\n                    return (\n                        <GetSchemaContainer\n                            key={currentPath + currentIsActive}\n                            path={currentPath}\n                        >\n                            <SchemaInputContainer\n                                {...this.props}\n                                key={currentPath}\n                                isActive={currentIsActive}\n                                isParent={lastIndex !== i}\n                                onLoad={this.handleLoad}\n                                onSetValue={this.handleSetValue}\n                                path={keypaths[i] || path}\n                            />\n                        </GetSchemaContainer>\n                    );\n                })}\n                { error && <div data-handle=\"error\" style={errorStyle}>{error}</div>}\n                { isLoading && <Loader color={defaultStyles.color9} />}\n            </ModalConfirm>\n        );\n    }\n}\n\nModalSchemaInputContainer.propTypes = {\n    closeOnConfirm: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    error: PropTypes.string,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    paths: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n};\n\nexport default ModalSchemaInputContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ComboBox from '@webui-one/components/ConfigRender/ComboBox/ComboBox';\nimport QueryListSelect from '@webui-one/components/QueryListSelect/QueryListSelect';\nimport {\n    leaf as style,\n    error as errorStyle,\n    link as linkStyle,\n    linkDisabled as linkDisabledStyle,\n} from '@webui-one/components/Modal/ModalConfirmStyles';\nimport {\n    quoteKey,\n} from '@webui-one/core/utils/key';\nimport {\n    pathWithoutKeys,\n    pathToObjects,\n} from '@webui-one/core/keypath/kp-parser';\nimport * as S from '@webui-one/core/schema';\nimport { isDeepEqual, isObject } from '@webui-one/core/utils/object';\nimport { getLeafWidget } from 'Common/Components/ConfigRender/SchemaContainerUtils';\nimport { createLinkComponent } from 'Common/Components/ConfigRender/LeafContainer';\nimport * as nodesActions from 'modules/nodes/actions';\nimport {\n    selectChildrenForInput,\n} from 'modules/schemas/reducer';\nimport { selectNode } from 'modules/nodes/selectors';\nimport { isNonEmptyString } from '@webui-one/core/utils/string';\nimport { isEmptyArray } from '@webui-one/core/utils/array';\nimport { debounceFunction } from '@webui-one/core/utils/async';\nimport { getKeyValue } from '@webui-one/core/utils/list';\nimport { Link } from '@webui-one/router';\nimport { getLinkWithPath } from 'ConfigurationEditor/utils';\n\n\nexport const KEY_PLACEHOLDER = '___KEY_PLACEHOLDER___';\nconst LEAFREF_TRUNCATE_AT = 20;\n\nconst formIsValid = (inputFields, requiredInputFields) => {\n    if (!requiredInputFields) return false;\n    if (isEmptyArray(requiredInputFields)) return true;\n    if (!inputFields) return false;\n\n    const inputFieldEntries = Object.entries(inputFields);\n    if (inputFieldEntries.length === 0) return false;\n\n    return inputFieldEntries.reduce((prevValue, [key, value]) => {\n        const invalidValue = (value === undefined || value === '');\n        const isRequired = requiredInputFields.some(field => field === key);\n\n        if (invalidValue && isRequired) {\n            return false;\n        }\n        return prevValue;\n    }, true);\n};\n\nconst getChildrenAsObject = (children, state) => (\n    children.reduce((acc, cur) => {\n        const name = S.name(cur);\n        // eslint-disable-next-line no-param-reassign\n        acc[name] = { value: state[name], kind: S.kind(cur) };\n        return acc;\n    }, {})\n);\n\nconst childrenForInputWithKeypath = (path, children) => (\n    children.reduce((acc, cur) => {\n        const childKeypath = cur.path.replace(pathWithoutKeys(path), path);\n        acc.push({ ...cur, path: childKeypath });\n        return acc;\n    }, [])\n);\n\nconst getKeyValue2 = (child, newValues) => {\n    const keyValue = newValues[S.name(child)];\n    if (keyValue) return keyValue;\n    if (keyValue === '' && S.typeName(child) === 'string') return '';\n    return KEY_PLACEHOLDER;\n};\n\nconst getPartialKey = (childrenForInput, newValues) => {\n    const parts = childrenForInput\n        .filter(c => S.isKey(c))\n        // it seems that get_leafref_values\n        // does not return any value if the last part of a key is set.\n        .slice(0, -1)\n        .map(c => quoteKey(getKeyValue2(c, newValues)));\n\n    const lastIndex = parts.reduceRight((acc, p, i) => {\n        if (acc !== undefined) return acc;\n        if (p !== KEY_PLACEHOLDER) return i;\n        return undefined;\n    }, undefined);\n    if (lastIndex === undefined) return '';\n    return parts.slice(0, lastIndex + 1).join(' ');\n};\n\nconst getOptions = (nodes, index) => {\n    if (!nodes) return [];\n\n    const nodeValues = nodes[index].values;\n\n    return (nodeValues || []).map(value => ({ value }));\n};\n\n\nclass SchemaInputContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSetLeafRefValue = this.handleSetLeafRefValue.bind(this);\n        this.handleSetValue = this.handleSetValue.bind(this);\n        this.handleSetKeypath = this.handleSetKeypath.bind(this);\n\n        this.getLeaf = this.getLeaf.bind(this);\n        this.callGetLeafrefValues = debounceFunction({\n            milliseconds: 300,\n            waitWhileSpammed: true,\n        });\n        this.state = {\n            values: undefined,\n        };\n        this.hasLoaded = false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { childrenForInput } = props;\n        const { values: currentValues } = state;\n        if (currentValues) return null;\n\n        if (!childrenForInput || childrenForInput.length < 1) return null;\n\n        const values = childrenForInput.reduce((acc, c) => (\n            { ...acc, [S.name(c)]: undefined }\n        ), {});\n\n        return { values };\n    }\n\n    componentDidMount() {\n        const {\n            childrenForInput,\n            onLoad,\n            schema,\n            path,\n        } = this.props;\n\n        if (childrenForInput && childrenForInput.length > 0) {\n            this.getLeafrefChildren();\n        }\n        onLoad({ path, hasInput: S.isList(schema) });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            childrenForInput,\n            nodes,\n            path,\n            schema,\n            isActive,\n        } = this.props;\n        const { values } = this.state;\n\n        if (isActive !== nextProps.isActive) return true;\n        if (path !== nextProps.path) return true;\n        if (!(isDeepEqual(childrenForInput, nextProps.childrenForInput))) return true;\n        if (!(isDeepEqual(nodes, nextProps.nodes))) return true;\n        if (!(isDeepEqual(schema, nextProps.schema))) return true;\n        if (!(isDeepEqual(values, nextState.values))) return true;\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        const { childrenForInput } = this.props;\n        if (!(isDeepEqual(prevProps.childrenForInput, childrenForInput))) {\n            this.getLeafrefChildren();\n        }\n    }\n\n    handleSetKeypath({ result }) {\n        const { keypath } = Object.values(result).pop() || {};\n        const { onSetValue } = this.props;\n        const items = [];\n        const parentPath = pathToObjects(keypath).pop().parentPath;\n        const isValid = true;\n        onSetValue(parentPath, items, isValid);\n    }\n\n    handleSetLeafRefValue(name, value, isLeafList) {\n        const { onGetLeafrefValues, childrenForInput, path } = this.props;\n        const { values: newValues } = this.handleSetValue(name, value);\n\n        if (!isLeafList) {\n            this.callGetLeafrefValues(() => {\n                const currentKey = getPartialKey(childrenForInput, newValues);\n                childrenForInput.forEach((child) => {\n                    if (S.isLeafRef(child)) {\n                        const currentName = S.name(child);\n                        const startsWith = newValues[currentName];\n                        const leafRefPath = `${path}{${currentKey}}/${currentName}`;\n                        onGetLeafrefValues(child.path, leafRefPath, startsWith);\n                    }\n                });\n            });\n            return this.callGetLeafrefValues;\n        }\n        return undefined;\n    }\n\n    handleSetValue(name, value) {\n        const { childrenForInput, path, schema, onSetValue } = this.props;\n        const { values } = this.state;\n\n        const newState = {\n            ...this.state,\n            values: {\n                ...values,\n                [name]: value,\n            },\n        };\n        this.setState(newState);\n        const { values: newValues } = newState;\n        const items = getChildrenAsObject(childrenForInput, newValues);\n        const keypath = `${path}{${getKeyValue(items, false)}}`;\n        const requiredInputFields = S.key(schema) || [];\n        const isValid = formIsValid(childrenForInput, requiredInputFields);\n        onSetValue(keypath, items, isValid);\n        return newState;\n    }\n\n    getLeafrefChildren() {\n        const { childrenForInput, onGetLeafrefValues } = this.props;\n        childrenForInput.forEach((child) => {\n            if (S.isLeafRef(child)) {\n                onGetLeafrefValues(child.path, child.path);\n            }\n        });\n    }\n\n    getChildren(schemas) {\n        return (schemas && schemas.map((schema, index) =>\n            this.getLeaf(schema.path, schema, index)));\n    }\n\n    getLeaf(keypath, schema, index) {\n        const { nodes, isActive } = this.props;\n        const { values } = this.state;\n        const name = S.name(schema);\n        const autoFocus = (isActive && index === 0);\n        const { sourcePath } = nodes[index];\n        const options = getOptions(nodes, index);\n        let leafWidget;\n        let linkComponent;\n        if (isNonEmptyString(sourcePath)) {\n            linkComponent = createLinkComponent({ sourcePath });\n        }\n\n        if (S.isLeafRef(schema)) {\n            const setLeafRefValue = value =>\n                this.handleSetLeafRefValue(name, value, S.isLeafList(schema));\n\n            leafWidget = (\n                <ComboBox\n                    autoFocus={autoFocus}\n                    maxLimit={LEAFREF_TRUNCATE_AT}\n                    options={options}\n                    key={keypath}\n                    LinkComponent={linkComponent}\n                    name={name}\n                    value={values[name] || ''}\n                    editable={isActive}\n                    onChange={setLeafRefValue}\n                    onSetValue={setLeafRefValue}\n                />\n            );\n        } else {\n            const setValue = value => this.handleSetValue(name, value);\n            leafWidget = React.cloneElement(getLeafWidget(keypath, schema, true, !isActive), {\n                autoFocus,\n                value: (values[name] || ''),\n                onChange: setValue,\n                onSetValue: setValue,\n            });\n        }\n        return (\n            <div\n                key={name}\n                data-handle={name}\n                style={style.container}\n            >\n                <div style={style.title}>\n                    {name}\n                </div>\n                { leafWidget }\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            isActive,\n            childrenForInput,\n            path,\n            schema,\n            error,\n            isParent,\n        } = this.props;\n        let children;\n        const keys = S.key(schema);\n        if (isParent && keys) {\n            children = (\n                <>\n                    <div style={style.container}>\n                        <div style={style.title}>\n                            {`Ancestor ${S.name(schema)} ${keys.join(' ')}`}\n                        </div>\n                        <QueryListSelect\n                            key={path}\n                            path={path}\n                            selection={keys}\n                            onSetValue={this.handleSetKeypath}\n                            disabled={!isActive}\n                        />\n                    </div>\n                    <div style={{ marginTop: '-0.5rem', marginBottom: '1.8rem' }}>\n                        {isActive && (\n                            <Link style={linkStyle} to={getLinkWithPath(path)}>\n                                {path}\n                            </Link>\n                        )}\n                        {!isActive && (\n                        <span style={linkDisabledStyle}>\n                            {pathWithoutKeys(path)}\n                        </span>\n                        )}\n                    </div>\n                </>\n            );\n        } else if (S.isLeafList(schema)) {\n            children = this.getLeaf(path, schema, 0);\n        } else {\n            children = this.getChildren(childrenForInput);\n        }\n\n        return (\n            <div>\n                { children }\n                { error && <div data-handle=\"error\" style={errorStyle}>{error}</div>}\n            </div>\n        );\n    }\n}\n\nSchemaInputContainer.propTypes = {\n    childrenForInput: PropTypes.arrayOf(PropTypes.shape(Object)),\n    error: PropTypes.string,\n    isParent: PropTypes.bool,\n    isActive: PropTypes.bool,\n    nodes: PropTypes.arrayOf(PropTypes.shape(Object)),\n    onGetLeafrefValues: PropTypes.func,\n    onLoad: PropTypes.func,\n    onSetValue: PropTypes.func,\n    path: PropTypes.string.isRequired,\n    schema: PropTypes.shape(Object),\n};\n\nconst selectChildrenForInputFilter = c =>\n    c.kind === 'key' ||\n    (c.kind === 'leaf' && c.mandatory === true && isObject(c.type));\n\nconst mapStateToProps = (state, ownProps) => {\n    const { path, schema } = ownProps;\n    let nodes;\n    let childrenForInput;\n    if (S.isLeafList(schema)) {\n        childrenForInput = [{ ...schema, path }];\n        nodes = [selectNode(state, path)];\n    } else {\n        childrenForInput = selectChildrenForInput(\n            state,\n            schema,\n            selectChildrenForInputFilter,\n        );\n        childrenForInput = childrenForInputWithKeypath(path, childrenForInput);\n        nodes = childrenForInput.map(child => selectNode(state, child.path));\n    }\n\n    return {\n        childrenForInput,\n        nodes,\n        schema,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onGetLeafrefValues(listPath, createPath, startsWith) {\n        const params = { path: listPath, createPath, limit: LEAFREF_TRUNCATE_AT + 1, startsWith };\n        dispatch(nodesActions.getLeafrefValuesThunk(params));\n    },\n});\n\nconst ConnectedSchemaInputContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SchemaInputContainer);\n\nexport default ConnectedSchemaInputContainer;\n\nexport {\n    SchemaInputContainer as _SchemaInputContainer,\n    childrenForInputWithKeypath as _childrenForInputWithKeypath,\n    formIsValid as _formIsValid,\n    getChildrenAsObject as _getChildrenAsObject,\n    getPartialKey as _getPartialKey,\n    mapDispatchToProps as _mapDispatchToProps,\n    mapStateToProps as _mapStateToProps,\n    selectChildrenForInputFilter as _selectChildrenForInputFilter,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { toKeypath } from '@webui-one/core/kindpath';\n\nimport { getSchema as _getSchema } from 'modules/schemas/actions';\nimport { selectSchema as _selectSchema } from 'modules/schemas/selectors';\nimport { loadStatus } from 'modules/schemas/utils';\n\nconst isComplete = schema => schema && schema.loadStatus === loadStatus.COMPLETE;\nconst isNotComplete = schema => schema === undefined || schema.loadStatus !== loadStatus.COMPLETE;\n\nclass GetSchemaContainer extends React.Component {\n    componentDidMount() {\n        const { onGetSchema, schema } = this.props;\n        if (schema === undefined) {\n            return onGetSchema(false);\n        }\n        if (schema.loadStatus === loadStatus.PARTIAL) {\n            return onGetSchema(true);\n        }\n\n        if (schema.loadStatus === loadStatus.SHOULD_REEVALUATE) {\n            return onGetSchema(true);\n        }\n        return undefined;\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const { path, schema } = this.props;\n        if (path !== nextProps.path) return true;\n\n        if (isNotComplete(schema) && isComplete(nextProps.schema)) return true;\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        const { onGetSchema, path } = this.props;\n        if (prevProps.path !== path) onGetSchema(path);\n    }\n\n    render() {\n        const { children, schema } = this.props;\n        if (schema === undefined) return null;\n        if (schema.loadStatus !== loadStatus.COMPLETE) return null;\n\n        return React.cloneElement(children, { schema });\n    }\n}\n\nGetSchemaContainer.propTypes = {\n    children: PropTypes.element,\n    onGetSchema: PropTypes.func,\n    path: PropTypes.string.isRequired,\n    schema: PropTypes.shape(Object),\n};\n\nconst getKeypathFromProps = ({ path, kindpath }) => {\n    if (kindpath) return toKeypath(kindpath);\n    return path;\n};\n\nconst createMapStateToProps = ({ selectSchema = _selectSchema } = {}) => (state, ownProps) => {\n    const path = getKeypathFromProps(ownProps);\n    const schema = selectSchema(state, path);\n\n    return {\n        schema,\n    };\n};\n\nconst createMapDispatchToProps = ({ getSchema = _getSchema } = {}) => (dispatch, ownProps) => ({\n    onGetSchema(reload) {\n        const path = getKeypathFromProps(ownProps);\n        return dispatch(getSchema({ path, reload }));\n    },\n});\n\nexport default connect(\n    createMapStateToProps(),\n    createMapDispatchToProps(),\n)(GetSchemaContainer);\n\nexport {\n    getKeypathFromProps as _getKeypathFromProps,\n    GetSchemaContainer as _GetSchemaContainer,\n    createMapStateToProps as _createMapStateToProps,\n    createMapDispatchToProps as _createMapDispatchToProps,\n};\n"],"names":["NotSupported","kind","type","style","fontSize","typeName","namespace","name","propTypes","PropTypes","string","shape","onChange","selectedValues","option","e","undefined","Object","keys","filter","key","join","MultiSelect","editable","options","onSetValue","value","isLoading","includes","split","forEach","data","wrapper","disabledWrapper","map","ix","row","select","disabledSelect","span","bool","arrayOf","isRequired","func","oneOfType","defaultProps","TextArea","React","Component","constructor","props","super","this","handleKeyDown","bind","onFocus","state","hasFocus","isModified","localNewValue","componentDidMount","setState","shouldComponentUpdate","nextProps","nextState","nextEditable","nextError","error","nextIsDefaultValue","isDefaultValue","nextIsLoading","nextValue","nextHasFocus","nextLocalNewValue","componentDidUpdate","prevProps","newValue","persist","target","blur","textAreaStyle","textAreaError","textArea","textAreaReadOnly","render","autoFocus","localNewValueDefault","readOnly","onBlur","onKeyDown","isDirty","backgroundColor","defaultStyles","color3","color","textColor5","medium2","width","lineHeight","padding","border","color7","boxSizing","minHeight","height","color11","color5","DateAndTime","activeSuggestionIx","backspace","draftValue","suggestions","handleSetValue","showSuggestions","parsed","parse","duplicateSeparator","separator","endsWith","S","DAY_HOUR_SEP","autoComplete","length","getInputStyle","input","inputFieldReadOnly","inputStyle","relative","wrapperReadOnly","placeholder","suggestion","cursor","overflow","wordWrap","whiteSpace","textIndent","display","suggestionActive","listbox","backgroundColor1","position","zIndex","Suggestions","items","s","number","START","Symbol","YEAR_1D","YEAR_2D","YEAR_3D","YEAR_4D","YEAR_MONTH_SEP","MONTH_1D","MONTH_2D","MONTH_DAY_SEP","DAY_1D","DAY_2D","HOUR_1D","HOUR_2D","HOUR_MIN_SEP","MIN_1D","MIN_2D","ERROR","MIN_SEC_SEP","SEC_1D","SEC_2D","ZERO_TZ","PLUS_TZ_SEP","MINUS_TZ_SEP","TZ_HOUR_1D","TZ_HOUR_2D","TZ_HOUR_MIN_SEP","TZ_MIN_1D","TZ_MIN_2D","stateSymbols","getSeparatorChar","createState","next","isDigit","v","test","isZero","isOne","isDash","isColon","isT","testChar","re","RegExp","createDateFsm","definition","previousValue","previousResult","dateTimeString","fsm","reduce","acc","cur","result","currentValue","parsedValue","buildXpath","path","selection","parts","listName","pop","predicate","c","keyContainsValue","contextNode","xpathExpr","getOptions","o","text","mapOptionsToResult","i","QueryListSelect","inValue","disabled","funcs","query","_query","useState","draft","setDraft","setValue","setError","asyncFunc","useCallback","async","signal","chunkSize","resultAs","useEffect","useFetch","useMemo","valueToKeypath","maxLimit","filterOptions","opt","initialState","controller","AbortController","updateState","newState","prevState","response","aborted","fetch","abort","states","machine","currentState","done","prototype","hasOwnProperty","call","previousState","AddSymbol","symbolColor","borderColor","bgColor","xmlns","x","y","viewBox","xmlSpace","stroke","fill","cx","cy","r","d","color1","RemoveSymbol","sourceLinkStyle","textDecoration","canValueBeDeleted","isDefaultValueHelper","defaultValue","isOperdata","createLinkComponent","sourcePath","Link","title","to","getLinkWithPath","LeafContainer","leafDepsNodes","isLeafref","componentWillMountLeafref","loadingDepsNodes","onGetLeafrefValues","cachedLeafDepsNodes","currentDepsNodes","newDepsNodes","isDeepEqual","n","omitKeys","shouldRefreshValues","getLeaf","children","isEnum","leafValue","indexOf","find","cloneElement","getEmptyLeaf","exists","onCreate","getLeafref","values","deps","linkComponent","isNonEmptyString","childProps","LinkComponent","deletable","isEditMode","isEmptyLeaf","isHidden","isMandatory","onDelete","onHide","child","canBeDeleted","object","info","leafPropsFromNode","config","node","emptyLeafPropsFromNode","leafrefPropsFromNode","reloadValues","mapStateToProps","ownProps","dependants","selectConfigForPath","selectNode","selectDirty","selectIsEditMode","selectDepNodes","some","mapDispatchToPropsLeaf","dispatch","caseAncestors","isConfigFalseCallpoint","deleteThunk","setValueThunk","onGetValue","getValueThunk","hideAction","mapDispatchToProps","createThunk","onExists","existsThunk","mapDispatchToPropsEmptyLeaf","debounceFunction","milliseconds","waitWhileSpammed","getLeafrefValuesThunk","startsWith","limit","LEAFREF_TRUNCATE_AT","mapDispatchToPropsLeafref","connect","isMultiline","schema","isCliMultilinePrompt","isCliPreformatted","keypath","isCreate","widgetKind","getWidgetKind","widgetKinds","KIND_KEY","isOper","canUpdate","isReadOnly","suppressEcho","widgetType","getWidgetType","widgetTypes","LEAF_BINARY","LEAF_BITS","bits","LEAF_BOOLEAN","LEAF_DATE_AND_TIME","LEAF_ENUMERATION","enumerationOptions","label","optionsInfo","LEAF_NOT_SUPPORTED","LEAF_NUMBER","LEAF_STRING","LEAF_RANGE","rangeAsText","LEAF_UNION","unionOptions","isValidModal","paths","isValid","every","ModalSchemaInputContainer","handleModalConfirm","handleLoad","keypaths","hasLoaded","hasInput","currentRootPath","getCurrentRootPath","onConfirm","getDataFromValueItems","replace","slice","pathWithoutKeys","closeOnConfirm","onClose","lastIndex","shouldRender","onRequestClose","formIsValid","preventAutofocus","currentPath","currentIsActive","p","isActive","isParent","onLoad","errorStyle","color9","KEY_PLACEHOLDER","inputFields","requiredInputFields","isEmptyArray","inputFieldEntries","entries","prevValue","invalidValue","field","getChildrenAsObject","childrenForInputWithKeypath","childKeypath","push","getPartialKey","childrenForInput","newValues","isKey","quoteKey","keyValue","getKeyValue2","reduceRight","SchemaInputContainer","handleSetLeafRefValue","handleSetKeypath","callGetLeafrefValues","getLeafrefChildren","isList","nodes","pathToObjects","parentPath","isLeafList","currentKey","isLeafRef","currentName","leafRefPath","getKeyValue","getChildren","schemas","index","leafWidget","setLeafRefValue","getLeafWidget","container","marginTop","marginBottom","linkStyle","linkDisabledStyle","selectChildrenForInputFilter","mandatory","isObject","selectChildrenForInput","listPath","createPath","params","nodesActions","GetSchemaContainer","onGetSchema","loadStatus","PARTIAL","SHOULD_REEVALUATE","COMPLETE","isNotComplete","isComplete","element","getKeypathFromProps","kindpath","toKeypath","createMapStateToProps","selectSchema","_selectSchema","createMapDispatchToProps","getSchema","_getSchema","reload"],"sourceRoot":""}